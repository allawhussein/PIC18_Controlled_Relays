

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jan 03 01:50:51 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78   000000                     
    79                           ; Version 2.40
    80                           ; Generated 17/11/2021 GMT
    81                           ; 
    82                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution. Publication is not required when
    96                           ;        this file is used in an embedded application.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F4550 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114   000000                     
   115                           	psect	idataBANK0
   116   004624                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for _RTC
   120   004624  B3                 	db	low _rtc
   121   004625  00                 	db	high _rtc
   122                           
   123                           ;initializer for _time1
   124   004626  30                 	db	48
   125   004627  30                 	db	48
   126   004628  3A                 	db	58
   127   004629  30                 	db	48
   128   00462A  30                 	db	48
   129   00462B  3A                 	db	58
   130   00462C  30                 	db	48
   131   00462D  30                 	db	48
   132   00462E  30                 	db	48
   133   00462F  30                 	db	48
   134   004630  3A                 	db	58
   135   004631  30                 	db	48
   136   004632  30                 	db	48
   137   004633  3A                 	db	58
   138   004634  30                 	db	48
   139   004635  30                 	db	48
   140   004636  30                 	db	48
   141   004637  30                 	db	48
   142   004638  3A                 	db	58
   143   004639  30                 	db	48
   144   00463A  30                 	db	48
   145   00463B  3A                 	db	58
   146   00463C  30                 	db	48
   147   00463D  30                 	db	48
   148   00463E  30                 	db	48
   149   00463F  30                 	db	48
   150   004640  3A                 	db	58
   151   004641  30                 	db	48
   152   004642  30                 	db	48
   153   004643  3A                 	db	58
   154   004644  30                 	db	48
   155   004645  30                 	db	48
   156   000000                     _TXREG	set	4013
   157   000000                     _EECON2	set	4007
   158   000000                     _SSPADD	set	4040
   159   000000                     _SSPCON1	set	4038
   160   000000                     _SSPBUF	set	4041
   161   000000                     _SSPSTATbits	set	4039
   162   000000                     _TRISC6	set	31910
   163                           
   164                           	psect	nvBANK0
   165   0000F8                     __pnvBANK0:
   166                           	callstack 0
   167   0000F8                     _Screen_Num:
   168                           	callstack 0
   169   0000F8                     	ds	1
   170   000000                     _RCSTAbits	set	4011
   171   000000                     _RCSTA	set	4011
   172   000000                     _TXSTA	set	4012
   173   000000                     _SSPCON2bits	set	4037
   174   000000                     _SSPCON2	set	4037
   175   000000                     _SSPSTAT	set	4039
   176   000000                     _PEIE	set	32662
   177   000000                     _GIE	set	32663
   178   000000                     _TXIF	set	31988
   179   000000                     _TXEN	set	32101
   180   000000                     _CREN	set	32092
   181   000000                     _BRGH	set	32098
   182   000000                     _TRISC7	set	31911
   183   000000                     _RCIF	set	31989
   184   000000                     _ACKEN	set	32300
   185   000000                     _ACKDT	set	32301
   186   000000                     _PEN	set	32298
   187   000000                     _RSEN	set	32297
   188   000000                     _ACKSTAT	set	32302
   189   000000                     _TRISB1	set	31897
   190   000000                     _TRISB0	set	31896
   191   000000                     _PORTB	set	3969
   192   000000                     _PORTD	set	3971
   193   000000                     _TRISB	set	3987
   194   000000                     _TRISD	set	3989
   195   000000                     _RCIE	set	31981
   196   000000                     _SSPIF	set	31987
   197   000000                     _RCEN	set	32299
   198   000000                     _INTCONbits	set	4082
   199   000000                     _PIR2bits	set	4001
   200   000000                     _EECON1bits	set	4006
   201   000000                     _EEDATA	set	4008
   202   000000                     _EEADR	set	4009
   203   000000                     _RCREG	set	4014
   204   000000                     _SPBRG	set	4015
   205   000000                     _SPEN	set	32095
   206   000000                     _SYNC	set	32100
   207                           
   208                           	psect	smallconst
   209   000800                     __psmallconst:
   210                           	callstack 0
   211   000800  00                 	db	0
   212   000801                     STR_7:
   213   000801  44                 	db	68	;'D'
   214   000802  61                 	db	97	;'a'
   215   000803  74                 	db	116	;'t'
   216   000804  65                 	db	101	;'e'
   217   000805  3A                 	db	58	;':'
   218   000806  20                 	db	32
   219   000807  30                 	db	48	;'0'
   220   000808  25                 	db	37
   221   000809  78                 	db	120	;'x'
   222   00080A  2D                 	db	45
   223   00080B  00                 	db	0
   224   00080C                     STR_5:
   225   00080C  54                 	db	84	;'T'
   226   00080D  69                 	db	105	;'i'
   227   00080E  6D                 	db	109	;'m'
   228   00080F  65                 	db	101	;'e'
   229   000810  3A                 	db	58	;':'
   230   000811  20                 	db	32
   231   000812  30                 	db	48	;'0'
   232   000813  25                 	db	37
   233   000814  64                 	db	100	;'d'
   234   000815  3A                 	db	58	;':'
   235   000816  00                 	db	0
   236   000817                     STR_8:
   237   000817  44                 	db	68	;'D'
   238   000818  61                 	db	97	;'a'
   239   000819  74                 	db	116	;'t'
   240   00081A  65                 	db	101	;'e'
   241   00081B  3A                 	db	58	;':'
   242   00081C  20                 	db	32
   243   00081D  25                 	db	37
   244   00081E  78                 	db	120	;'x'
   245   00081F  2D                 	db	45
   246   000820  00                 	db	0
   247   000821                     STR_6:
   248   000821  54                 	db	84	;'T'
   249   000822  69                 	db	105	;'i'
   250   000823  6D                 	db	109	;'m'
   251   000824  65                 	db	101	;'e'
   252   000825  3A                 	db	58	;':'
   253   000826  20                 	db	32
   254   000827  25                 	db	37
   255   000828  64                 	db	100	;'d'
   256   000829  3A                 	db	58	;':'
   257   00082A  00                 	db	0
   258   00082B                     STR_12:
   259   00082B  53                 	db	83	;'S'
   260   00082C  74                 	db	116	;'t'
   261   00082D  61                 	db	97	;'a'
   262   00082E  72                 	db	114	;'r'
   263   00082F  74                 	db	116	;'t'
   264   000830  31                 	db	49	;'1'
   265   000831  3A                 	db	58	;':'
   266   000832  20                 	db	32
   267   000833  00                 	db	0
   268   000834                     STR_14:
   269   000834  53                 	db	83	;'S'
   270   000835  74                 	db	116	;'t'
   271   000836  61                 	db	97	;'a'
   272   000837  72                 	db	114	;'r'
   273   000838  74                 	db	116	;'t'
   274   000839  32                 	db	50	;'2'
   275   00083A  3A                 	db	58	;':'
   276   00083B  20                 	db	32
   277   00083C  00                 	db	0
   278   00083D                     STR_13:
   279   00083D  46                 	db	70	;'F'
   280   00083E  69                 	db	105	;'i'
   281   00083F  6E                 	db	110	;'n'
   282   000840  69                 	db	105	;'i'
   283   000841  73                 	db	115	;'s'
   284   000842  68                 	db	104	;'h'
   285   000843  3A                 	db	58	;':'
   286   000844  20                 	db	32
   287   000845  00                 	db	0
   288   000846                     STR_1:
   289   000846  30                 	db	48	;'0'
   290   000847  25                 	db	37
   291   000848  64                 	db	100	;'d'
   292   000849  20                 	db	32
   293   00084A  00                 	db	0
   294   00084B                     STR_11:
   295   00084B  25                 	db	37
   296   00084C  78                 	db	120	;'x'
   297   00084D  20                 	db	32
   298   00084E  00                 	db	0
   299   00084F  00                 	db	0	; dummy byte at the end
   300   000000                     
   301                           ; #config settings
   302                           
   303                           	psect	cinit
   304   004412                     __pcinit:
   305                           	callstack 0
   306   004412                     start_initialization:
   307                           	callstack 0
   308   004412                     __initialization:
   309                           	callstack 0
   310                           
   311                           ; Initialize objects allocated to BANK0 (34 bytes)
   312                           ; load TBLPTR registers with __pidataBANK0
   313   004412  0E24               	movlw	low __pidataBANK0
   314   004414  6EF6               	movwf	tblptrl,c
   315   004416  0E46               	movlw	high __pidataBANK0
   316   004418  6EF7               	movwf	tblptrh,c
   317   00441A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   318   00441C  6EF8               	movwf	tblptru,c
   319   00441E  EE00  F0BE         	lfsr	0,__pdataBANK0
   320   004422  EE10 F022          	lfsr	1,34
   321   004426                     copy_data0:
   322   004426  0009               	tblrd		*+
   323   004428  CFF5 FFEE          	movff	tablat,postinc0
   324   00442C  50E5               	movf	postdec1,w,c
   325   00442E  50E1               	movf	fsr1l,w,c
   326   004430  E1FA               	bnz	copy_data0
   327                           
   328                           ; Clear objects allocated to BANK1 (72 bytes)
   329   004432  EE01  F000         	lfsr	0,__pbssBANK1
   330   004436  0E48               	movlw	72
   331   004438                     clear_0:
   332   004438  6AEE               	clrf	postinc0,c
   333   00443A  06E8               	decf	wreg,f,c
   334   00443C  E1FD               	bnz	clear_0
   335                           
   336                           ; Clear objects allocated to BANK0 (94 bytes)
   337   00443E  EE00  F060         	lfsr	0,__pbssBANK0
   338   004442  0E5E               	movlw	94
   339   004444                     clear_1:
   340   004444  6AEE               	clrf	postinc0,c
   341   004446  06E8               	decf	wreg,f,c
   342   004448  E1FD               	bnz	clear_1
   343                           
   344                           ; Clear objects allocated to COMRAM (1 bytes)
   345   00444A  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   346   00444C                     end_of_initialization:
   347                           	callstack 0
   348   00444C                     __end_of__initialization:
   349                           	callstack 0
   350   00444C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   351   00444E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   352   004450  0E00               	movlw	low (__Lmediumconst shr (0+16))
   353   004452  6EF8               	movwf	tblptru,c
   354   004454  0100               	movlb	0
   355   004456  EF45  F009         	goto	_main	;jump to C main() function
   356                           
   357                           	psect	bssCOMRAM
   358   00005E                     __pbssCOMRAM:
   359                           	callstack 0
   360   00005E                     _flags:
   361                           	callstack 0
   362   00005E                     	ds	1
   363                           
   364                           	psect	bssBANK0
   365   000060                     __pbssBANK0:
   366                           	callstack 0
   367   000060                     _total2:
   368                           	callstack 0
   369   000060                     	ds	16
   370   000070                     _total1:
   371                           	callstack 0
   372   000070                     	ds	16
   373   000080                     _mask:
   374                           	callstack 0
   375   000080                     	ds	4
   376   000084                     _total:
   377                           	callstack 0
   378   000084                     	ds	4
   379   000088                     _sec2:
   380                           	callstack 0
   381   000088                     	ds	4
   382   00008C                     _min2:
   383                           	callstack 0
   384   00008C                     	ds	4
   385   000090                     _width:
   386                           	callstack 0
   387   000090                     	ds	2
   388   000092                     _prec:
   389                           	callstack 0
   390   000092                     	ds	2
   391   000094                     _Place4:
   392                           	callstack 0
   393   000094                     	ds	2
   394   000096                     _Place3:
   395                           	callstack 0
   396   000096                     	ds	2
   397   000098                     _Place2:
   398                           	callstack 0
   399   000098                     	ds	2
   400   00009A                     _Place1:
   401                           	callstack 0
   402   00009A                     	ds	2
   403   00009C                     _Destination:
   404                           	callstack 0
   405   00009C                     	ds	1
   406   00009D                     _flag2:
   407                           	callstack 0
   408   00009D                     	ds	1
   409   00009E                     _flag1:
   410                           	callstack 0
   411   00009E                     	ds	1
   412   00009F                     _mins:
   413                           	callstack 0
   414   00009F                     	ds	10
   415   0000A9                     _secs:
   416                           	callstack 0
   417   0000A9                     	ds	10
   418   0000B3                     _rtc:
   419                           	callstack 0
   420   0000B3                     	ds	7
   421   0000BA                     _hour2:
   422                           	callstack 0
   423   0000BA                     	ds	4
   424                           
   425                           	psect	dataBANK0
   426   0000BE                     __pdataBANK0:
   427                           	callstack 0
   428   0000BE                     _RTC:
   429                           	callstack 0
   430   0000BE                     	ds	2
   431   0000C0                     _time1:
   432                           	callstack 0
   433   0000C0                     	ds	32
   434                           
   435                           	psect	bssBANK1
   436   000100                     __pbssBANK1:
   437                           	callstack 0
   438   000100                     _dbuf:
   439                           	callstack 0
   440   000100                     	ds	32
   441   000120                     _year:
   442                           	callstack 0
   443   000120                     	ds	10
   444   00012A                     _month:
   445                           	callstack 0
   446   00012A                     	ds	10
   447   000134                     _date:
   448                           	callstack 0
   449   000134                     	ds	10
   450   00013E                     _hours:
   451                           	callstack 0
   452   00013E                     	ds	10
   453                           
   454                           	psect	cstackBANK0
   455   0000E0                     __pcstackBANK0:
   456                           	callstack 0
   457   0000E0                     ?_sprintf:
   458                           	callstack 0
   459   0000E0                     sprintf@s:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x0
   463   0000E0                     	ds	2
   464   0000E2                     sprintf@fmt:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x2
   468   0000E2                     	ds	4
   469   0000E6                     sprintf@ap:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x6
   473   0000E6                     	ds	2
   474   0000E8                     sprintf@f:
   475                           	callstack 0
   476                           
   477                           ; 11 bytes @ 0x8
   478   0000E8                     	ds	11
   479   0000F3                     main@i:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x13
   483   0000F3                     	ds	1
   484   0000F4                     main@i_522:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x14
   488   0000F4                     	ds	1
   489   0000F5                     main@i_528:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x15
   493   0000F5                     	ds	1
   494   0000F6                     main@j:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x16
   498   0000F6                     	ds	1
   499   0000F7                     main@j_529:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x17
   503   0000F7                     	ds	1
   504                           
   505                           	psect	cstackCOMRAM
   506   000001                     __pcstackCOMRAM:
   507                           	callstack 0
   508   000001                     ??_LCD_write:
   509   000001                     ?___awdiv:
   510                           	callstack 0
   511   000001                     ?___awmod:
   512                           	callstack 0
   513   000001                     ?___lmul:
   514                           	callstack 0
   515   000001                     ?___fltol:
   516                           	callstack 0
   517   000001                     ?___xxtofl:
   518                           	callstack 0
   519   000001                     ?___aodiv:
   520                           	callstack 0
   521   000001                     ?___aomod:
   522                           	callstack 0
   523   000001                     LCD_cmd@cmd:
   524                           	callstack 0
   525   000001                     LCD_cmd_High@cmd:
   526                           	callstack 0
   527   000001                     I2C_Read@flag:
   528                           	callstack 0
   529   000001                     I2C_Write@data:
   530                           	callstack 0
   531   000001                     EEPROM_Write@data:
   532                           	callstack 0
   533   000001                     EEPROM_Read@address:
   534                           	callstack 0
   535   000001                     Set_Time@Num:
   536                           	callstack 0
   537   000001                     Check@Num:
   538                           	callstack 0
   539   000001                     ___awdiv@dividend:
   540                           	callstack 0
   541   000001                     ___awmod@dividend:
   542                           	callstack 0
   543   000001                     fputc@c:
   544                           	callstack 0
   545   000001                     ___lmul@multiplier:
   546                           	callstack 0
   547   000001                     ___flge@ff1:
   548                           	callstack 0
   549   000001                     ___fltol@f1:
   550                           	callstack 0
   551   000001                     ___xxtofl@val:
   552                           	callstack 0
   553   000001                     ___aodiv@dividend:
   554                           	callstack 0
   555   000001                     ___aomod@dividend:
   556                           	callstack 0
   557                           
   558                           ; 8 bytes @ 0x0
   559   000001                     	ds	1
   560   000002                     ??_LCD_4bit_mode:
   561   000002                     ??_LCD_clear:
   562   000002                     LCD_write@data:
   563                           	callstack 0
   564   000002                     I2C_Start@slave_write_address:
   565                           	callstack 0
   566   000002                     I2C_Repeated_Start@slave_read_address:
   567                           	callstack 0
   568   000002                     EEPROM_Write@address:
   569                           	callstack 0
   570   000002                     LCD_goto_xy@x:
   571                           	callstack 0
   572   000002                     I2C_Read@buffer:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x1
   576   000002                     	ds	1
   577   000003                     ??_Check:
   578   000003                     LCD_write_string@str:
   579                           	callstack 0
   580   000003                     Set_Time@Place:
   581                           	callstack 0
   582   000003                     ___awdiv@divisor:
   583                           	callstack 0
   584   000003                     ___awmod@divisor:
   585                           	callstack 0
   586   000003                     fputc@fp:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x2
   590   000003                     	ds	1
   591   000004                     LCD_goto_xy@y:
   592                           	callstack 0
   593   000004                     RTC_Get_Time@RTC:
   594                           	callstack 0
   595   000004                     RTC_Get_Date@RTC:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x3
   599   000004                     	ds	1
   600   000005                     ??_Set_Time:
   601   000005                     ??_fputc:
   602   000005                     ??_LCD_write_string:
   603   000005                     ??___fltol:
   604   000005                     ??___xxtofl:
   605   000005                     ___awdiv@counter:
   606                           	callstack 0
   607   000005                     ___awmod@counter:
   608                           	callstack 0
   609   000005                     ___lmul@multiplicand:
   610                           	callstack 0
   611   000005                     ___flge@ff2:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x4
   615   000005                     	ds	1
   616   000006                     ??_LCD_goto_xy:
   617   000006                     ___awdiv@sign:
   618                           	callstack 0
   619   000006                     ___awmod@sign:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x5
   623   000006                     	ds	1
   624   000007                     LCD_write_string@i:
   625                           	callstack 0
   626   000007                     LCD_goto_xy@i:
   627                           	callstack 0
   628   000007                     ___awdiv@quotient:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x6
   632   000007                     	ds	2
   633   000009                     ??___flge:
   634   000009                     RTC_Set_Time@min:
   635                           	callstack 0
   636   000009                     RTC_Set_Date@date:
   637                           	callstack 0
   638   000009                     ___fltol@sign1:
   639                           	callstack 0
   640   000009                     ___xxtofl@sign:
   641                           	callstack 0
   642   000009                     LCD_goto_xy@i_52:
   643                           	callstack 0
   644   000009                     ___lmul@product:
   645                           	callstack 0
   646   000009                     ___aodiv@divisor:
   647                           	callstack 0
   648   000009                     ___aomod@divisor:
   649                           	callstack 0
   650                           
   651                           ; 8 bytes @ 0x8
   652   000009                     	ds	1
   653   00000A                     RTC_Set_Time@hour:
   654                           	callstack 0
   655   00000A                     RTC_Set_Date@month:
   656                           	callstack 0
   657   00000A                     ___fltol@exp1:
   658                           	callstack 0
   659   00000A                     ___xxtofl@exp:
   660                           	callstack 0
   661   00000A                     fputs@s:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x9
   665   00000A                     	ds	1
   666   00000B                     ??_RTC_Set_Time:
   667   00000B                     RTC_Set_Date@year:
   668                           	callstack 0
   669   00000B                     Flash@inc:
   670                           	callstack 0
   671   00000B                     ___xxtofl@arg:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0xA
   675   00000B                     	ds	1
   676   00000C                     ??_RTC_Set_Date:
   677   00000C                     fputs@fp:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0xB
   681   00000C                     	ds	1
   682   00000D                     RTC_Set_Time@sec:
   683                           	callstack 0
   684   00000D                     Compare@Num1:
   685                           	callstack 0
   686   00000D                     Flash@PlaceN:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0xC
   690   00000D                     	ds	1
   691   00000E                     RTC_Set_Date@day:
   692                           	callstack 0
   693   00000E                     fputs@c:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0xD
   697   00000E                     	ds	1
   698   00000F                     ??_Flash:
   699   00000F                     ?___flmul:
   700                           	callstack 0
   701   00000F                     Compare@Num2:
   702                           	callstack 0
   703   00000F                     fputs@i:
   704                           	callstack 0
   705   00000F                     ___flmul@b:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0xE
   709   00000F                     	ds	1
   710   000010                     ??_Screen_Device_1:
   711   000010                     ??_Screen_Device_2:
   712                           
   713                           ; 1 bytes @ 0xF
   714   000010                     	ds	1
   715   000011                     ??_Compare:
   716   000011                     ___aodiv@counter:
   717                           	callstack 0
   718   000011                     ___aomod@counter:
   719                           	callstack 0
   720   000011                     pad@fp:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x10
   724   000011                     	ds	1
   725   000012                     ___aodiv@sign:
   726                           	callstack 0
   727   000012                     ___aomod@sign:
   728                           	callstack 0
   729   000012                     Screen_Device_1@i:
   730                           	callstack 0
   731   000012                     Screen_Device_2@i:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x11
   735   000012                     	ds	1
   736   000013                     ?_abs:
   737                           	callstack 0
   738   000013                     pad@buf:
   739                           	callstack 0
   740   000013                     abs@a:
   741                           	callstack 0
   742   000013                     ___flmul@a:
   743                           	callstack 0
   744   000013                     ___aodiv@quotient:
   745                           	callstack 0
   746                           
   747                           ; 8 bytes @ 0x12
   748   000013                     	ds	1
   749   000014                     Screen_Device_1@i_153:
   750                           	callstack 0
   751   000014                     Screen_Device_2@i_158:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x13
   755   000014                     	ds	1
   756   000015                     ??_abs:
   757   000015                     pad@p:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x14
   761   000015                     	ds	2
   762   000017                     ??___flmul:
   763   000017                     ??_pad:
   764                           
   765                           ; 1 bytes @ 0x16
   766   000017                     	ds	1
   767   000018                     pad@i:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x17
   771   000018                     	ds	2
   772   00001A                     pad@w:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x19
   776   00001A                     	ds	1
   777   00001B                     ___flmul@sign:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x1A
   781   00001B                     	ds	1
   782   00001C                     dtoa@fp:
   783                           	callstack 0
   784   00001C                     xtoa@fp:
   785                           	callstack 0
   786   00001C                     ___flmul@grs:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x1B
   790   00001C                     	ds	2
   791   00001E                     dtoa@d:
   792                           	callstack 0
   793   00001E                     xtoa@d:
   794                           	callstack 0
   795                           
   796                           ; 8 bytes @ 0x1D
   797   00001E                     	ds	2
   798   000020                     ___flmul@aexp:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x1F
   802   000020                     	ds	1
   803   000021                     ___flmul@bexp:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x20
   807   000021                     	ds	1
   808   000022                     ___flmul@prod:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x21
   812   000022                     	ds	4
   813   000026                     ??_dtoa:
   814   000026                     ??_xtoa:
   815   000026                     ___flmul@temp:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x25
   819   000026                     	ds	2
   820   000028                     ?___fldiv:
   821                           	callstack 0
   822   000028                     ___fldiv@b:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x27
   826   000028                     	ds	4
   827   00002C                     ___fldiv@a:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0x2B
   831   00002C                     	ds	2
   832   00002E                     _dtoa$1336:
   833                           	callstack 0
   834   00002E                     xtoa@w:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x2D
   838   00002E                     	ds	2
   839   000030                     ??___fldiv:
   840   000030                     dtoa@p:
   841                           	callstack 0
   842   000030                     _xtoa$1346:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x2F
   846   000030                     	ds	2
   847   000032                     dtoa@w:
   848                           	callstack 0
   849   000032                     xtoa@p:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x31
   853   000032                     	ds	2
   854   000034                     ___fldiv@rem:
   855                           	callstack 0
   856   000034                     dtoa@n:
   857                           	callstack 0
   858   000034                     xtoa@n:
   859                           	callstack 0
   860                           
   861                           ; 8 bytes @ 0x33
   862   000034                     	ds	4
   863   000038                     ___fldiv@sign:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x37
   867   000038                     	ds	1
   868   000039                     ___fldiv@new_exp:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x38
   872   000039                     	ds	2
   873   00003B                     ___fldiv@grs:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0x3A
   877   00003B                     	ds	1
   878   00003C                     dtoa@i:
   879                           	callstack 0
   880   00003C                     xtoa@i:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x3B
   884   00003C                     	ds	2
   885   00003E                     dtoa@s:
   886                           	callstack 0
   887   00003E                     xtoa@c:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x3D
   891   00003E                     	ds	1
   892   00003F                     ___fldiv@bexp:
   893                           	callstack 0
   894   00003F                     vfpfcnvrt@fp:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x3E
   898   00003F                     	ds	1
   899   000040                     ___fldiv@aexp:
   900                           	callstack 0
   901                           
   902                           ; 1 bytes @ 0x3F
   903   000040                     	ds	1
   904   000041                     ?___fladd:
   905                           	callstack 0
   906   000041                     vfpfcnvrt@fmt:
   907                           	callstack 0
   908   000041                     ___fladd@b:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x40
   912   000041                     	ds	2
   913   000043                     vfpfcnvrt@ap:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x42
   917   000043                     	ds	2
   918   000045                     ??_vfpfcnvrt:
   919   000045                     ___fladd@a:
   920                           	callstack 0
   921                           
   922                           ; 4 bytes @ 0x44
   923   000045                     	ds	4
   924   000049                     ??___fladd:
   925   000049                     vfpfcnvrt@convarg:
   926                           	callstack 0
   927                           
   928                           ; 8 bytes @ 0x48
   929   000049                     	ds	4
   930   00004D                     ___fladd@signs:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x4C
   934   00004D                     	ds	1
   935   00004E                     ___fladd@aexp:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x4D
   939   00004E                     	ds	1
   940   00004F                     ___fladd@bexp:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x4E
   944   00004F                     	ds	1
   945   000050                     ___fladd@grs:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x4F
   949   000050                     	ds	1
   950   000051                     vfpfcnvrt@cp:
   951                           	callstack 0
   952   000051                     USART_init@baud_rate:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x50
   956   000051                     	ds	2
   957   000053                     ?_vfprintf:
   958                           	callstack 0
   959   000053                     vfprintf@fp:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x52
   963   000053                     	ds	2
   964   000055                     vfprintf@fmt:
   965                           	callstack 0
   966   000055                     USART_init@temp:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x54
   970   000055                     	ds	2
   971   000057                     vfprintf@ap:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x56
   975   000057                     	ds	2
   976   000059                     vfprintf@cfmt:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x58
   980   000059                     	ds	2
   981   00005B                     ??_Screen_Date_Time:
   982                           
   983                           ; 1 bytes @ 0x5A
   984   00005B                     	ds	1
   985   00005C                     ??_main:
   986                           
   987                           ; 1 bytes @ 0x5B
   988   00005C                     	ds	2
   989                           
   990 ;;
   991 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   992 ;;
   993 ;; *************** function _main *****************
   994 ;; Defined at:
   995 ;;		line 23 in file "main.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  j               1   23[BANK0 ] unsigned char 
  1000 ;;  j               1   22[BANK0 ] unsigned char 
  1001 ;;  i               1   21[BANK0 ] unsigned char 
  1002 ;;  i               1   20[BANK0 ] unsigned char 
  1003 ;;  i               1   19[BANK0 ] unsigned char 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1013 ;;      Params:         0       0       0       0       0       0       0       0       0
  1014 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1015 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1016 ;;      Totals:         2       5       0       0       0       0       0       0       0
  1017 ;;Total ram usage:        7 bytes
  1018 ;; Hardware stack levels required when called: 10
  1019 ;; This function calls:
  1020 ;;		_Active_Receiver_Interrupt
  1021 ;;		_Check
  1022 ;;		_Compare
  1023 ;;		_EEPROM_Read
  1024 ;;		_EEPROM_Write
  1025 ;;		_I2C_Init
  1026 ;;		_LCD_clear
  1027 ;;		_LCD_init
  1028 ;;		_Push_Buttons_Init
  1029 ;;		_RTC_Set_Date
  1030 ;;		_RTC_Set_Time
  1031 ;;		_Screen_Date_Time
  1032 ;;		_Screen_Device_1
  1033 ;;		_Screen_Device_2
  1034 ;;		_USART_init
  1035 ;; This function is called by:
  1036 ;;		Startup code after reset
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text0
  1041   00128A                     __ptext0:
  1042                           	callstack 0
  1043   00128A                     _main:
  1044                           	callstack 21
  1045   00128A                     
  1046                           ;main.c: 25:     Screen_Num = 1;
  1047   00128A  0E01               	movlw	1
  1048   00128C  0100               	movlb	0	; () banked
  1049   00128E  6FF8               	movwf	_Screen_Num& (0+255),b
  1050   001290                     
  1051                           ; BSR set to: 0
  1052                           ;main.c: 27:     Push_Buttons_Init();
  1053   001290  ECA4  F023         	call	_Push_Buttons_Init	;wreg free
  1054   001294                     
  1055                           ;main.c: 28:     (TRISB &=~(1<<6));
  1056   001294  9C93               	bcf	147,6,c	;volatile
  1057   001296                     
  1058                           ;main.c: 29:     (TRISB &=~(1<<7));
  1059   001296  9E93               	bcf	147,7,c	;volatile
  1060   001298                     
  1061                           ;main.c: 30:     LCD_init();
  1062   001298  EC93  F023         	call	_LCD_init	;wreg free
  1063   00129C                     
  1064                           ;main.c: 31:     I2C_Init();
  1065   00129C  EC6B  F023         	call	_I2C_Init	;wreg free
  1066   0012A0                     
  1067                           ;main.c: 32:     USART_init(9600);
  1068   0012A0  0E80               	movlw	128
  1069   0012A2  6E51               	movwf	USART_init@baud_rate^0,c
  1070   0012A4  0E25               	movlw	37
  1071   0012A6  6E52               	movwf	(USART_init@baud_rate+1)^0,c
  1072   0012A8  0E00               	movlw	0
  1073   0012AA  6E53               	movwf	(USART_init@baud_rate+2)^0,c
  1074   0012AC  0E00               	movlw	0
  1075   0012AE  6E54               	movwf	(USART_init@baud_rate+3)^0,c
  1076   0012B0  EC55  F01D         	call	_USART_init	;wreg free
  1077   0012B4                     
  1078                           ;main.c: 33:     Active_Receiver_Interrupt();
  1079   0012B4  ECA9  F023         	call	_Active_Receiver_Interrupt	;wreg free
  1080   0012B8                     
  1081                           ;main.c: 37:     RTC_Set_Time(30, 10, 2);
  1082   0012B8  0E0A               	movlw	10
  1083   0012BA  6E09               	movwf	RTC_Set_Time@min^0,c
  1084   0012BC  0E02               	movlw	2
  1085   0012BE  6E0A               	movwf	RTC_Set_Time@hour^0,c
  1086   0012C0  0E1E               	movlw	30
  1087   0012C2  EC47  F01E         	call	_RTC_Set_Time
  1088   0012C6                     
  1089                           ;main.c: 38:     RTC_Set_Date(3, 3, 1, 23);
  1090   0012C6  0E03               	movlw	3
  1091   0012C8  6E09               	movwf	RTC_Set_Date@date^0,c
  1092   0012CA  0E01               	movlw	1
  1093   0012CC  6E0A               	movwf	RTC_Set_Date@month^0,c
  1094   0012CE  0E17               	movlw	23
  1095   0012D0  6E0B               	movwf	RTC_Set_Date@year^0,c
  1096   0012D2  0E03               	movlw	3
  1097   0012D4  ECC6  F01B         	call	_RTC_Set_Date
  1098   0012D8                     
  1099                           ;main.c: 41:     for(char i=0; i<32; i++)
  1100   0012D8  0E00               	movlw	0
  1101   0012DA  0100               	movlb	0	; () banked
  1102   0012DC  6FF3               	movwf	main@i& (0+255),b
  1103   0012DE                     l5096:
  1104                           
  1105                           ; BSR set to: 0
  1106                           ;main.c: 42:     {;main.c: 43:         if(EEPROM_Read(i) == 0xFF) EEPROM_Write(i, 48);
  1107   0012DE  51F3               	movf	main@i& (0+255),w,b
  1108   0012E0  EC9C  F023         	call	_EEPROM_Read
  1109   0012E4  0AFF               	xorlw	255
  1110   0012E6  A4D8               	btfss	status,2,c
  1111   0012E8  EF78  F009         	goto	u5121
  1112   0012EC  EF7A  F009         	goto	u5120
  1113   0012F0                     u5121:
  1114   0012F0  EF80  F009         	goto	l5100
  1115   0012F4                     u5120:
  1116   0012F4  0E30               	movlw	48
  1117   0012F6  6E01               	movwf	EEPROM_Write@data^0,c
  1118   0012F8  0100               	movlb	0	; () banked
  1119   0012FA  51F3               	movf	main@i& (0+255),w,b
  1120   0012FC  ECCC  F022         	call	_EEPROM_Write
  1121   001300                     l5100:
  1122                           
  1123                           ;main.c: 44:     }
  1124   001300  0100               	movlb	0	; () banked
  1125   001302  2BF3               	incf	main@i& (0+255),f,b
  1126   001304                     
  1127                           ; BSR set to: 0
  1128   001304  0E1F               	movlw	31
  1129   001306  65F3               	cpfsgt	main@i& (0+255),b
  1130   001308  EF88  F009         	goto	u5131
  1131   00130C  EF8A  F009         	goto	u5130
  1132   001310                     u5131:
  1133   001310  EF6F  F009         	goto	l5096
  1134   001314                     u5130:
  1135   001314                     
  1136                           ; BSR set to: 0
  1137                           ;main.c: 49:     for(char i=0; i<4; i++)
  1138   001314  0E00               	movlw	0
  1139   001316  6FF4               	movwf	main@i_522& (0+255),b
  1140   001318                     l5110:
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;main.c: 50:     {;main.c: 51:         for(char j=0; j<8; j++)
  1144   001318  0E00               	movlw	0
  1145   00131A  6FF6               	movwf	main@j& (0+255),b
  1146   00131C                     l5116:
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;main.c: 52:         {;main.c: 53:             if(j==2 || j==5) continue;
  1150   00131C  0E02               	movlw	2
  1151   00131E  19F6               	xorwf	main@j& (0+255),w,b
  1152   001320  B4D8               	btfsc	status,2,c
  1153   001322  EF95  F009         	goto	u5141
  1154   001326  EF97  F009         	goto	u5140
  1155   00132A                     u5141:
  1156   00132A  EF16  F00A         	goto	l5130
  1157   00132E                     u5140:
  1158   00132E                     
  1159                           ; BSR set to: 0
  1160   00132E  0E05               	movlw	5
  1161   001330  19F6               	xorwf	main@j& (0+255),w,b
  1162   001332  A4D8               	btfss	status,2,c
  1163   001334  EF9E  F009         	goto	u5151
  1164   001338  EFA0  F009         	goto	u5150
  1165   00133C                     u5151:
  1166   00133C  EFF9  F009         	goto	l5128
  1167   001340                     u5150:
  1168   001340  EF16  F00A         	goto	l5130
  1169   001344                     l5120:
  1170                           
  1171                           ; BSR set to: 0
  1172   001344  51F4               	movf	main@i_522& (0+255),w,b
  1173   001346  0D08               	mullw	8
  1174   001348  0EC0               	movlw	low _time1
  1175   00134A  24F3               	addwf	243,w,c
  1176   00134C  6E5C               	movwf	??_main^0,c
  1177   00134E  0E00               	movlw	high _time1
  1178   001350  20F4               	addwfc	prodh,w,c
  1179   001352  6E5D               	movwf	(??_main+1)^0,c
  1180   001354  51F6               	movf	main@j& (0+255),w,b
  1181   001356  245C               	addwf	??_main^0,w,c
  1182   001358  6ED9               	movwf	fsr2l,c
  1183   00135A  0E00               	movlw	0
  1184   00135C  205D               	addwfc	(??_main+1)^0,w,c
  1185   00135E  6EDA               	movwf	fsr2h,c
  1186   001360  51F4               	movf	main@i_522& (0+255),w,b
  1187   001362  25F6               	addwf	main@j& (0+255),w,b
  1188   001364  EC9C  F023         	call	_EEPROM_Read
  1189   001368  6EDF               	movwf	indf2,c
  1190   00136A  EF16  F00A         	goto	l5130
  1191   00136E                     l5122:
  1192                           
  1193                           ; BSR set to: 0
  1194   00136E  51F4               	movf	main@i_522& (0+255),w,b
  1195   001370  0D08               	mullw	8
  1196   001372  0EC0               	movlw	low _time1
  1197   001374  24F3               	addwf	243,w,c
  1198   001376  6E5C               	movwf	??_main^0,c
  1199   001378  0E00               	movlw	high _time1
  1200   00137A  20F4               	addwfc	prodh,w,c
  1201   00137C  6E5D               	movwf	(??_main+1)^0,c
  1202   00137E  51F6               	movf	main@j& (0+255),w,b
  1203   001380  245C               	addwf	??_main^0,w,c
  1204   001382  6ED9               	movwf	fsr2l,c
  1205   001384  0E00               	movlw	0
  1206   001386  205D               	addwfc	(??_main+1)^0,w,c
  1207   001388  6EDA               	movwf	fsr2h,c
  1208   00138A  51F4               	movf	main@i_522& (0+255),w,b
  1209   00138C  25F6               	addwf	main@j& (0+255),w,b
  1210   00138E  0F07               	addlw	7
  1211   001390  EC9C  F023         	call	_EEPROM_Read
  1212   001394  6EDF               	movwf	indf2,c
  1213   001396  EF16  F00A         	goto	l5130
  1214   00139A                     l5124:
  1215                           
  1216                           ; BSR set to: 0
  1217   00139A  51F4               	movf	main@i_522& (0+255),w,b
  1218   00139C  0D08               	mullw	8
  1219   00139E  0EC0               	movlw	low _time1
  1220   0013A0  24F3               	addwf	243,w,c
  1221   0013A2  6E5C               	movwf	??_main^0,c
  1222   0013A4  0E00               	movlw	high _time1
  1223   0013A6  20F4               	addwfc	prodh,w,c
  1224   0013A8  6E5D               	movwf	(??_main+1)^0,c
  1225   0013AA  51F6               	movf	main@j& (0+255),w,b
  1226   0013AC  245C               	addwf	??_main^0,w,c
  1227   0013AE  6ED9               	movwf	fsr2l,c
  1228   0013B0  0E00               	movlw	0
  1229   0013B2  205D               	addwfc	(??_main+1)^0,w,c
  1230   0013B4  6EDA               	movwf	fsr2h,c
  1231   0013B6  51F4               	movf	main@i_522& (0+255),w,b
  1232   0013B8  25F6               	addwf	main@j& (0+255),w,b
  1233   0013BA  0F0E               	addlw	14
  1234   0013BC  EC9C  F023         	call	_EEPROM_Read
  1235   0013C0  6EDF               	movwf	indf2,c
  1236   0013C2  EF16  F00A         	goto	l5130
  1237   0013C6                     l5126:
  1238                           
  1239                           ; BSR set to: 0
  1240   0013C6  51F4               	movf	main@i_522& (0+255),w,b
  1241   0013C8  0D08               	mullw	8
  1242   0013CA  0EC0               	movlw	low _time1
  1243   0013CC  24F3               	addwf	243,w,c
  1244   0013CE  6E5C               	movwf	??_main^0,c
  1245   0013D0  0E00               	movlw	high _time1
  1246   0013D2  20F4               	addwfc	prodh,w,c
  1247   0013D4  6E5D               	movwf	(??_main+1)^0,c
  1248   0013D6  51F6               	movf	main@j& (0+255),w,b
  1249   0013D8  245C               	addwf	??_main^0,w,c
  1250   0013DA  6ED9               	movwf	fsr2l,c
  1251   0013DC  0E00               	movlw	0
  1252   0013DE  205D               	addwfc	(??_main+1)^0,w,c
  1253   0013E0  6EDA               	movwf	fsr2h,c
  1254   0013E2  51F4               	movf	main@i_522& (0+255),w,b
  1255   0013E4  25F6               	addwf	main@j& (0+255),w,b
  1256   0013E6  0F15               	addlw	21
  1257   0013E8  EC9C  F023         	call	_EEPROM_Read
  1258   0013EC  6EDF               	movwf	indf2,c
  1259   0013EE  EF16  F00A         	goto	l5130
  1260   0013F2                     l5128:
  1261                           
  1262                           ; BSR set to: 0
  1263   0013F2  51F4               	movf	main@i_522& (0+255),w,b
  1264   0013F4  6E5C               	movwf	??_main^0,c
  1265   0013F6  6A5D               	clrf	(??_main+1)^0,c
  1266                           
  1267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1268                           ; Switch size 1, requested type "simple"
  1269                           ; Number of cases is 1, Range of values is 0 to 0
  1270                           ; switch strategies available:
  1271                           ; Name         Instructions Cycles
  1272                           ; simple_byte            4     3 (average)
  1273                           ;	Chosen strategy is simple_byte
  1274   0013F8  505D               	movf	(??_main+1)^0,w,c
  1275   0013FA  0A00               	xorlw	0	; case 0
  1276   0013FC  B4D8               	btfsc	status,2,c
  1277   0013FE  EF03  F00A         	goto	l5486
  1278   001402  EF16  F00A         	goto	l5130
  1279   001406                     l5486:
  1280                           
  1281                           ; BSR set to: 0
  1282                           ; Switch size 1, requested type "simple"
  1283                           ; Number of cases is 4, Range of values is 0 to 3
  1284                           ; switch strategies available:
  1285                           ; Name         Instructions Cycles
  1286                           ; simple_byte           13     7 (average)
  1287                           ;	Chosen strategy is simple_byte
  1288   001406  505C               	movf	??_main^0,w,c
  1289   001408  0A00               	xorlw	0	; case 0
  1290   00140A  B4D8               	btfsc	status,2,c
  1291   00140C  EFA2  F009         	goto	l5120
  1292   001410  0A01               	xorlw	1	; case 1
  1293   001412  B4D8               	btfsc	status,2,c
  1294   001414  EFB7  F009         	goto	l5122
  1295   001418  0A03               	xorlw	3	; case 2
  1296   00141A  B4D8               	btfsc	status,2,c
  1297   00141C  EFCD  F009         	goto	l5124
  1298   001420  0A01               	xorlw	1	; case 3
  1299   001422  B4D8               	btfsc	status,2,c
  1300   001424  EFE3  F009         	goto	l5126
  1301   001428  EF16  F00A         	goto	l5130
  1302   00142C                     l5130:
  1303   00142C  0100               	movlb	0	; () banked
  1304   00142E  2BF6               	incf	main@j& (0+255),f,b
  1305   001430                     
  1306                           ; BSR set to: 0
  1307   001430  0E07               	movlw	7
  1308   001432  65F6               	cpfsgt	main@j& (0+255),b
  1309   001434  EF1E  F00A         	goto	u5161
  1310   001438  EF20  F00A         	goto	u5160
  1311   00143C                     u5161:
  1312   00143C  EF8E  F009         	goto	l5116
  1313   001440                     u5160:
  1314   001440                     
  1315                           ; BSR set to: 0
  1316                           ;main.c: 64:     }
  1317   001440  2BF4               	incf	main@i_522& (0+255),f,b
  1318   001442                     
  1319                           ; BSR set to: 0
  1320   001442  0E03               	movlw	3
  1321   001444  65F4               	cpfsgt	main@i_522& (0+255),b
  1322   001446  EF27  F00A         	goto	u5171
  1323   00144A  EF29  F00A         	goto	u5170
  1324   00144E                     u5171:
  1325   00144E  EF8C  F009         	goto	l5110
  1326   001452                     u5170:
  1327   001452                     l5138:
  1328                           
  1329                           ;main.c: 68:     {;main.c: 70:         if(Destination)
  1330   001452  0100               	movlb	0	; () banked
  1331   001454  519C               	movf	_Destination& (0+255),w,b	;volatile
  1332   001456  B4D8               	btfsc	status,2,c
  1333   001458  EF30  F00A         	goto	u5181
  1334   00145C  EF32  F00A         	goto	u5180
  1335   001460                     u5181:
  1336   001460  EF67  F00A         	goto	l5162
  1337   001464                     u5180:
  1338   001464  EF48  F00A         	goto	l5158
  1339   001468                     l5142:
  1340                           
  1341                           ; BSR set to: 0
  1342   001468  8C81               	bsf	129,6,c	;volatile
  1343   00146A                     
  1344                           ; BSR set to: 0
  1345   00146A  0E01               	movlw	1
  1346   00146C  6F9E               	movwf	_flag1& (0+255),b
  1347   00146E  EF65  F00A         	goto	l5160
  1348   001472                     l5146:
  1349                           
  1350                           ; BSR set to: 0
  1351   001472  9C81               	bcf	129,6,c	;volatile
  1352   001474                     
  1353                           ; BSR set to: 0
  1354   001474  0E00               	movlw	0
  1355   001476  6F9E               	movwf	_flag1& (0+255),b
  1356   001478  EF65  F00A         	goto	l5160
  1357   00147C                     l5150:
  1358                           
  1359                           ; BSR set to: 0
  1360   00147C  8E81               	bsf	129,7,c	;volatile
  1361   00147E                     
  1362                           ; BSR set to: 0
  1363   00147E  0E01               	movlw	1
  1364   001480  6F9D               	movwf	_flag2& (0+255),b
  1365   001482  EF65  F00A         	goto	l5160
  1366   001486                     l5154:
  1367                           
  1368                           ; BSR set to: 0
  1369   001486  9E81               	bcf	129,7,c	;volatile
  1370   001488                     
  1371                           ; BSR set to: 0
  1372   001488  0E00               	movlw	0
  1373   00148A  6F9D               	movwf	_flag2& (0+255),b
  1374   00148C  EF65  F00A         	goto	l5160
  1375   001490                     l5158:
  1376                           
  1377                           ; BSR set to: 0
  1378   001490  519C               	movf	_Destination& (0+255),w,b	;volatile
  1379   001492  6E5C               	movwf	??_main^0,c
  1380   001494  6A5D               	clrf	(??_main+1)^0,c
  1381                           
  1382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1383                           ; Switch size 1, requested type "simple"
  1384                           ; Number of cases is 1, Range of values is 0 to 0
  1385                           ; switch strategies available:
  1386                           ; Name         Instructions Cycles
  1387                           ; simple_byte            4     3 (average)
  1388                           ;	Chosen strategy is simple_byte
  1389   001496  505D               	movf	(??_main+1)^0,w,c
  1390   001498  0A00               	xorlw	0	; case 0
  1391   00149A  B4D8               	btfsc	status,2,c
  1392   00149C  EF52  F00A         	goto	l5488
  1393   0014A0  EF65  F00A         	goto	l5160
  1394   0014A4                     l5488:
  1395                           
  1396                           ; BSR set to: 0
  1397                           ; Switch size 1, requested type "simple"
  1398                           ; Number of cases is 4, Range of values is 65 to 68
  1399                           ; switch strategies available:
  1400                           ; Name         Instructions Cycles
  1401                           ; simple_byte           13     7 (average)
  1402                           ;	Chosen strategy is simple_byte
  1403   0014A4  505C               	movf	??_main^0,w,c
  1404   0014A6  0A41               	xorlw	65	; case 65
  1405   0014A8  B4D8               	btfsc	status,2,c
  1406   0014AA  EF34  F00A         	goto	l5142
  1407   0014AE  0A03               	xorlw	3	; case 66
  1408   0014B0  B4D8               	btfsc	status,2,c
  1409   0014B2  EF39  F00A         	goto	l5146
  1410   0014B6  0A01               	xorlw	1	; case 67
  1411   0014B8  B4D8               	btfsc	status,2,c
  1412   0014BA  EF3E  F00A         	goto	l5150
  1413   0014BE  0A07               	xorlw	7	; case 68
  1414   0014C0  B4D8               	btfsc	status,2,c
  1415   0014C2  EF43  F00A         	goto	l5154
  1416   0014C6  EF65  F00A         	goto	l5160
  1417   0014CA                     l5160:
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;main.c: 80:             Destination = 0;
  1421   0014CA  0E00               	movlw	0
  1422   0014CC  6F9C               	movwf	_Destination& (0+255),b	;volatile
  1423   0014CE                     l5162:
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;main.c: 83:         if(((PORTB & (1<<2))? 1:0))
  1427   0014CE  A481               	btfss	129,2,c	;volatile
  1428   0014D0  EF6C  F00A         	goto	u5191
  1429   0014D4  EF6E  F00A         	goto	u5190
  1430   0014D8                     u5191:
  1431   0014D8  EF98  F00A         	goto	l5182
  1432   0014DC                     u5190:
  1433   0014DC                     
  1434                           ; BSR set to: 0
  1435                           ;main.c: 84:         {;main.c: 85:             _delay((unsigned long)((5)*(8000000UL/400
      +                          0.0)));
  1436   0014DC  0E0D               	movlw	13
  1437   0014DE  6E5C               	movwf	??_main^0,c
  1438   0014E0  0EFC               	movlw	252
  1439   0014E2                     u5287:
  1440   0014E2  2EE8               	decfsz	wreg,f,c
  1441   0014E4  D7FE               	bra	u5287
  1442   0014E6  2E5C               	decfsz	??_main^0,f,c
  1443   0014E8  D7FC               	bra	u5287
  1444   0014EA                     l457:
  1445   0014EA  B481               	btfsc	129,2,c	;volatile
  1446   0014EC  EF7A  F00A         	goto	u5201
  1447   0014F0  EF7C  F00A         	goto	u5200
  1448   0014F4                     u5201:
  1449   0014F4  EF75  F00A         	goto	l457
  1450   0014F8                     u5200:
  1451   0014F8                     
  1452                           ;main.c: 88:             LCD_clear();
  1453   0014F8  EC5F  F023         	call	_LCD_clear	;wreg free
  1454   0014FC                     
  1455                           ;main.c: 90:             Screen_Num ++;
  1456   0014FC  0100               	movlb	0	; () banked
  1457   0014FE  2BF8               	incf	_Screen_Num& (0+255),f,b
  1458   001500                     
  1459                           ; BSR set to: 0
  1460                           ;main.c: 91:             if(Screen_Num > 3) Screen_Num = 1;
  1461   001500  0E03               	movlw	3
  1462   001502  65F8               	cpfsgt	_Screen_Num& (0+255),b
  1463   001504  EF86  F00A         	goto	u5211
  1464   001508  EF88  F00A         	goto	u5210
  1465   00150C                     u5211:
  1466   00150C  EF98  F00A         	goto	l5182
  1467   001510                     u5210:
  1468   001510                     
  1469                           ; BSR set to: 0
  1470   001510  0E01               	movlw	1
  1471   001512  6FF8               	movwf	_Screen_Num& (0+255),b
  1472   001514  EF98  F00A         	goto	l5182
  1473   001518                     l5174:
  1474                           
  1475                           ; BSR set to: 0
  1476   001518  ECB0  F014         	call	_Screen_Date_Time	;wreg free
  1477   00151C  EFB1  F00A         	goto	l5184
  1478   001520                     l5176:
  1479                           
  1480                           ; BSR set to: 0
  1481   001520  EC9F  F00F         	call	_Screen_Device_1	;wreg free
  1482   001524  EFB1  F00A         	goto	l5184
  1483   001528                     l5178:
  1484                           
  1485                           ; BSR set to: 0
  1486   001528  EC9A  F00D         	call	_Screen_Device_2	;wreg free
  1487   00152C  EFB1  F00A         	goto	l5184
  1488   001530                     l5182:
  1489                           
  1490                           ; BSR set to: 0
  1491   001530  51F8               	movf	_Screen_Num& (0+255),w,b
  1492   001532  6E5C               	movwf	??_main^0,c
  1493   001534  6A5D               	clrf	(??_main+1)^0,c
  1494                           
  1495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1496                           ; Switch size 1, requested type "simple"
  1497                           ; Number of cases is 1, Range of values is 0 to 0
  1498                           ; switch strategies available:
  1499                           ; Name         Instructions Cycles
  1500                           ; simple_byte            4     3 (average)
  1501                           ;	Chosen strategy is simple_byte
  1502   001536  505D               	movf	(??_main+1)^0,w,c
  1503   001538  0A00               	xorlw	0	; case 0
  1504   00153A  B4D8               	btfsc	status,2,c
  1505   00153C  EFA2  F00A         	goto	l5490
  1506   001540  EF8C  F00A         	goto	l5174
  1507   001544                     l5490:
  1508                           
  1509                           ; BSR set to: 0
  1510                           ; Switch size 1, requested type "simple"
  1511                           ; Number of cases is 3, Range of values is 1 to 3
  1512                           ; switch strategies available:
  1513                           ; Name         Instructions Cycles
  1514                           ; simple_byte           10     6 (average)
  1515                           ;	Chosen strategy is simple_byte
  1516   001544  505C               	movf	??_main^0,w,c
  1517   001546  0A01               	xorlw	1	; case 1
  1518   001548  B4D8               	btfsc	status,2,c
  1519   00154A  EF8C  F00A         	goto	l5174
  1520   00154E  0A03               	xorlw	3	; case 2
  1521   001550  B4D8               	btfsc	status,2,c
  1522   001552  EF90  F00A         	goto	l5176
  1523   001556  0A01               	xorlw	1	; case 3
  1524   001558  B4D8               	btfsc	status,2,c
  1525   00155A  EF94  F00A         	goto	l5178
  1526   00155E  EF8C  F00A         	goto	l5174
  1527   001562                     l5184:
  1528                           
  1529                           ;main.c: 102:         for (char i = 0; i < 4; i++)
  1530   001562  0E00               	movlw	0
  1531   001564  0100               	movlb	0	; () banked
  1532   001566  6FF5               	movwf	main@i_528& (0+255),b
  1533   001568                     l5190:
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;main.c: 103:         {;main.c: 104:             for (char j = 0; j < 8; j++)
  1537   001568  0E00               	movlw	0
  1538   00156A  6FF7               	movwf	main@j_529& (0+255),b
  1539   00156C                     l5196:
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;main.c: 105:             {;main.c: 106:                 if (j == 2 || j == 5) continue;
  1543   00156C  0E02               	movlw	2
  1544   00156E  19F7               	xorwf	main@j_529& (0+255),w,b
  1545   001570  B4D8               	btfsc	status,2,c
  1546   001572  EFBD  F00A         	goto	u5221
  1547   001576  EFBF  F00A         	goto	u5220
  1548   00157A                     u5221:
  1549   00157A  EF42  F00B         	goto	l5210
  1550   00157E                     u5220:
  1551   00157E                     
  1552                           ; BSR set to: 0
  1553   00157E  0E05               	movlw	5
  1554   001580  19F7               	xorwf	main@j_529& (0+255),w,b
  1555   001582  A4D8               	btfss	status,2,c
  1556   001584  EFC6  F00A         	goto	u5231
  1557   001588  EFC8  F00A         	goto	u5230
  1558   00158C                     u5231:
  1559   00158C  EF25  F00B         	goto	l5208
  1560   001590                     u5230:
  1561   001590  EF42  F00B         	goto	l5210
  1562   001594                     l5200:
  1563                           
  1564                           ; BSR set to: 0
  1565   001594  51F5               	movf	main@i_528& (0+255),w,b
  1566   001596  0D08               	mullw	8
  1567   001598  0EC0               	movlw	low _time1
  1568   00159A  24F3               	addwf	243,w,c
  1569   00159C  6E5C               	movwf	??_main^0,c
  1570   00159E  0E00               	movlw	high _time1
  1571   0015A0  20F4               	addwfc	prodh,w,c
  1572   0015A2  6E5D               	movwf	(??_main+1)^0,c
  1573   0015A4  51F7               	movf	main@j_529& (0+255),w,b
  1574   0015A6  245C               	addwf	??_main^0,w,c
  1575   0015A8  6ED9               	movwf	fsr2l,c
  1576   0015AA  0E00               	movlw	0
  1577   0015AC  205D               	addwfc	(??_main+1)^0,w,c
  1578   0015AE  6EDA               	movwf	fsr2h,c
  1579   0015B0  50DF               	movf	indf2,w,c
  1580   0015B2  6E01               	movwf	EEPROM_Write@data^0,c
  1581   0015B4  51F5               	movf	main@i_528& (0+255),w,b
  1582   0015B6  25F7               	addwf	main@j_529& (0+255),w,b
  1583   0015B8  ECCC  F022         	call	_EEPROM_Write
  1584   0015BC  EF42  F00B         	goto	l5210
  1585   0015C0                     l5202:
  1586                           
  1587                           ; BSR set to: 0
  1588   0015C0  51F5               	movf	main@i_528& (0+255),w,b
  1589   0015C2  0D08               	mullw	8
  1590   0015C4  0EC0               	movlw	low _time1
  1591   0015C6  24F3               	addwf	243,w,c
  1592   0015C8  6E5C               	movwf	??_main^0,c
  1593   0015CA  0E00               	movlw	high _time1
  1594   0015CC  20F4               	addwfc	prodh,w,c
  1595   0015CE  6E5D               	movwf	(??_main+1)^0,c
  1596   0015D0  51F7               	movf	main@j_529& (0+255),w,b
  1597   0015D2  245C               	addwf	??_main^0,w,c
  1598   0015D4  6ED9               	movwf	fsr2l,c
  1599   0015D6  0E00               	movlw	0
  1600   0015D8  205D               	addwfc	(??_main+1)^0,w,c
  1601   0015DA  6EDA               	movwf	fsr2h,c
  1602   0015DC  50DF               	movf	indf2,w,c
  1603   0015DE  6E01               	movwf	EEPROM_Write@data^0,c
  1604   0015E0  51F5               	movf	main@i_528& (0+255),w,b
  1605   0015E2  25F7               	addwf	main@j_529& (0+255),w,b
  1606   0015E4  0F07               	addlw	7
  1607   0015E6  ECCC  F022         	call	_EEPROM_Write
  1608   0015EA  EF42  F00B         	goto	l5210
  1609   0015EE                     l5204:
  1610                           
  1611                           ; BSR set to: 0
  1612   0015EE  51F5               	movf	main@i_528& (0+255),w,b
  1613   0015F0  0D08               	mullw	8
  1614   0015F2  0EC0               	movlw	low _time1
  1615   0015F4  24F3               	addwf	243,w,c
  1616   0015F6  6E5C               	movwf	??_main^0,c
  1617   0015F8  0E00               	movlw	high _time1
  1618   0015FA  20F4               	addwfc	prodh,w,c
  1619   0015FC  6E5D               	movwf	(??_main+1)^0,c
  1620   0015FE  51F7               	movf	main@j_529& (0+255),w,b
  1621   001600  245C               	addwf	??_main^0,w,c
  1622   001602  6ED9               	movwf	fsr2l,c
  1623   001604  0E00               	movlw	0
  1624   001606  205D               	addwfc	(??_main+1)^0,w,c
  1625   001608  6EDA               	movwf	fsr2h,c
  1626   00160A  50DF               	movf	indf2,w,c
  1627   00160C  6E01               	movwf	EEPROM_Write@data^0,c
  1628   00160E  51F5               	movf	main@i_528& (0+255),w,b
  1629   001610  25F7               	addwf	main@j_529& (0+255),w,b
  1630   001612  0F0E               	addlw	14
  1631   001614  ECCC  F022         	call	_EEPROM_Write
  1632   001618  EF42  F00B         	goto	l5210
  1633   00161C                     l5206:
  1634                           
  1635                           ; BSR set to: 0
  1636   00161C  51F5               	movf	main@i_528& (0+255),w,b
  1637   00161E  0D08               	mullw	8
  1638   001620  0EC0               	movlw	low _time1
  1639   001622  24F3               	addwf	243,w,c
  1640   001624  6E5C               	movwf	??_main^0,c
  1641   001626  0E00               	movlw	high _time1
  1642   001628  20F4               	addwfc	prodh,w,c
  1643   00162A  6E5D               	movwf	(??_main+1)^0,c
  1644   00162C  51F7               	movf	main@j_529& (0+255),w,b
  1645   00162E  245C               	addwf	??_main^0,w,c
  1646   001630  6ED9               	movwf	fsr2l,c
  1647   001632  0E00               	movlw	0
  1648   001634  205D               	addwfc	(??_main+1)^0,w,c
  1649   001636  6EDA               	movwf	fsr2h,c
  1650   001638  50DF               	movf	indf2,w,c
  1651   00163A  6E01               	movwf	EEPROM_Write@data^0,c
  1652   00163C  51F5               	movf	main@i_528& (0+255),w,b
  1653   00163E  25F7               	addwf	main@j_529& (0+255),w,b
  1654   001640  0F15               	addlw	21
  1655   001642  ECCC  F022         	call	_EEPROM_Write
  1656   001646  EF42  F00B         	goto	l5210
  1657   00164A                     l5208:
  1658                           
  1659                           ; BSR set to: 0
  1660   00164A  51F5               	movf	main@i_528& (0+255),w,b
  1661   00164C  6E5C               	movwf	??_main^0,c
  1662   00164E  6A5D               	clrf	(??_main+1)^0,c
  1663                           
  1664                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1665                           ; Switch size 1, requested type "simple"
  1666                           ; Number of cases is 1, Range of values is 0 to 0
  1667                           ; switch strategies available:
  1668                           ; Name         Instructions Cycles
  1669                           ; simple_byte            4     3 (average)
  1670                           ;	Chosen strategy is simple_byte
  1671   001650  505D               	movf	(??_main+1)^0,w,c
  1672   001652  0A00               	xorlw	0	; case 0
  1673   001654  B4D8               	btfsc	status,2,c
  1674   001656  EF2F  F00B         	goto	l5492
  1675   00165A  EF42  F00B         	goto	l5210
  1676   00165E                     l5492:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ; Switch size 1, requested type "simple"
  1680                           ; Number of cases is 4, Range of values is 0 to 3
  1681                           ; switch strategies available:
  1682                           ; Name         Instructions Cycles
  1683                           ; simple_byte           13     7 (average)
  1684                           ;	Chosen strategy is simple_byte
  1685   00165E  505C               	movf	??_main^0,w,c
  1686   001660  0A00               	xorlw	0	; case 0
  1687   001662  B4D8               	btfsc	status,2,c
  1688   001664  EFCA  F00A         	goto	l5200
  1689   001668  0A01               	xorlw	1	; case 1
  1690   00166A  B4D8               	btfsc	status,2,c
  1691   00166C  EFE0  F00A         	goto	l5202
  1692   001670  0A03               	xorlw	3	; case 2
  1693   001672  B4D8               	btfsc	status,2,c
  1694   001674  EFF7  F00A         	goto	l5204
  1695   001678  0A01               	xorlw	1	; case 3
  1696   00167A  B4D8               	btfsc	status,2,c
  1697   00167C  EF0E  F00B         	goto	l5206
  1698   001680  EF42  F00B         	goto	l5210
  1699   001684                     l5210:
  1700   001684  0100               	movlb	0	; () banked
  1701   001686  2BF7               	incf	main@j_529& (0+255),f,b
  1702   001688                     
  1703                           ; BSR set to: 0
  1704   001688  0E07               	movlw	7
  1705   00168A  65F7               	cpfsgt	main@j_529& (0+255),b
  1706   00168C  EF4A  F00B         	goto	u5241
  1707   001690  EF4C  F00B         	goto	u5240
  1708   001694                     u5241:
  1709   001694  EFB6  F00A         	goto	l5196
  1710   001698                     u5240:
  1711   001698                     
  1712                           ; BSR set to: 0
  1713                           ;main.c: 117:         }
  1714   001698  2BF5               	incf	main@i_528& (0+255),f,b
  1715   00169A                     
  1716                           ; BSR set to: 0
  1717   00169A  0E03               	movlw	3
  1718   00169C  65F5               	cpfsgt	main@i_528& (0+255),b
  1719   00169E  EF53  F00B         	goto	u5251
  1720   0016A2  EF55  F00B         	goto	u5250
  1721   0016A6                     u5251:
  1722   0016A6  EFB4  F00A         	goto	l5190
  1723   0016AA                     u5250:
  1724   0016AA                     
  1725                           ; BSR set to: 0
  1726                           ;main.c: 119:         Check(0);
  1727   0016AA  0E00               	movlw	0
  1728   0016AC  6E02               	movwf	(Check@Num+1)^0,c
  1729   0016AE  0E00               	movlw	0
  1730   0016B0  6E01               	movwf	Check@Num^0,c
  1731   0016B2  EC29  F01B         	call	_Check	;wreg free
  1732                           
  1733                           ;main.c: 120:         Check(1);
  1734   0016B6  0E00               	movlw	0
  1735   0016B8  6E02               	movwf	(Check@Num+1)^0,c
  1736   0016BA  0E01               	movlw	1
  1737   0016BC  6E01               	movwf	Check@Num^0,c
  1738   0016BE  EC29  F01B         	call	_Check	;wreg free
  1739   0016C2                     
  1740                           ;main.c: 121:         Compare(0, 1);
  1741   0016C2  0E00               	movlw	0
  1742   0016C4  6E0E               	movwf	(Compare@Num1+1)^0,c
  1743   0016C6  0E00               	movlw	0
  1744   0016C8  6E0D               	movwf	Compare@Num1^0,c
  1745   0016CA  0E00               	movlw	0
  1746   0016CC  6E10               	movwf	(Compare@Num2+1)^0,c
  1747   0016CE  0E01               	movlw	1
  1748   0016D0  6E0F               	movwf	Compare@Num2^0,c
  1749   0016D2  ECDD  F015         	call	_Compare	;wreg free
  1750   0016D6                     
  1751                           ;main.c: 122:         Check(2);
  1752   0016D6  0E00               	movlw	0
  1753   0016D8  6E02               	movwf	(Check@Num+1)^0,c
  1754   0016DA  0E02               	movlw	2
  1755   0016DC  6E01               	movwf	Check@Num^0,c
  1756   0016DE  EC29  F01B         	call	_Check	;wreg free
  1757   0016E2                     
  1758                           ;main.c: 123:         Check(3);
  1759   0016E2  0E00               	movlw	0
  1760   0016E4  6E02               	movwf	(Check@Num+1)^0,c
  1761   0016E6  0E03               	movlw	3
  1762   0016E8  6E01               	movwf	Check@Num^0,c
  1763   0016EA  EC29  F01B         	call	_Check	;wreg free
  1764   0016EE                     
  1765                           ;main.c: 124:         Compare(2, 3);
  1766   0016EE  0E00               	movlw	0
  1767   0016F0  6E0E               	movwf	(Compare@Num1+1)^0,c
  1768   0016F2  0E02               	movlw	2
  1769   0016F4  6E0D               	movwf	Compare@Num1^0,c
  1770   0016F6  0E00               	movlw	0
  1771   0016F8  6E10               	movwf	(Compare@Num2+1)^0,c
  1772   0016FA  0E03               	movlw	3
  1773   0016FC  6E0F               	movwf	Compare@Num2^0,c
  1774   0016FE  ECDD  F015         	call	_Compare	;wreg free
  1775   001702  EF29  F00A         	goto	l5138
  1776   001706  EF07  F000         	goto	start
  1777   00170A                     __end_of_main:
  1778                           	callstack 0
  1779                           
  1780 ;; *************** function _USART_init *****************
  1781 ;; Defined at:
  1782 ;;		line 13 in file "UART_Driver.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  baud_rate       4   80[COMRAM] long 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  temp            4   84[COMRAM] float 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1796 ;;      Params:         4       0       0       0       0       0       0       0       0
  1797 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1799 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1800 ;;Total ram usage:        8 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 2
  1803 ;; This function calls:
  1804 ;;		___fladd
  1805 ;;		___fldiv
  1806 ;;		___flge
  1807 ;;		___flmul
  1808 ;;		___fltol
  1809 ;;		___xxtofl
  1810 ;; This function is called by:
  1811 ;;		_main
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text1
  1816   003AAA                     __ptext1:
  1817                           	callstack 0
  1818   003AAA                     _USART_init:
  1819                           	callstack 28
  1820   003AAA                     
  1821                           ;UART_Driver.c: 13: void USART_init(long baud_rate);UART_Driver.c: 14: {;UART_Driver.c: 
      +                          15:     float temp;;UART_Driver.c: 17:     SYNC = 0;
  1822   003AAA  98AC               	bcf	4012,4,c	;volatile
  1823                           
  1824                           ;UART_Driver.c: 18:     SPEN = 1;
  1825   003AAC  8EAB               	bsf	4011,7,c	;volatile
  1826                           
  1827                           ;UART_Driver.c: 20:     TRISC6=1;
  1828   003AAE  8C94               	bsf	3988,6,c	;volatile
  1829                           
  1830                           ;UART_Driver.c: 21:     TRISC7=1;
  1831   003AB0  8E94               	bsf	3988,7,c	;volatile
  1832   003AB2                     
  1833                           ;UART_Driver.c: 24:     temp = (((float) (8000000UL) / (64*(float) baud_rate)) - 1);
  1834   003AB2  0E00               	movlw	0
  1835   003AB4  6E13               	movwf	___flmul@a^0,c
  1836   003AB6  0E00               	movlw	0
  1837   003AB8  6E14               	movwf	(___flmul@a+1)^0,c
  1838   003ABA  0E80               	movlw	128
  1839   003ABC  6E15               	movwf	(___flmul@a+2)^0,c
  1840   003ABE  0E42               	movlw	66
  1841   003AC0  6E16               	movwf	(___flmul@a+3)^0,c
  1842   003AC2  C051  F001         	movff	USART_init@baud_rate,___xxtofl@val
  1843   003AC6  C052  F002         	movff	USART_init@baud_rate+1,___xxtofl@val+1
  1844   003ACA  C053  F003         	movff	USART_init@baud_rate+2,___xxtofl@val+2
  1845   003ACE  C054  F004         	movff	USART_init@baud_rate+3,___xxtofl@val+3
  1846   003AD2  0E01               	movlw	1
  1847   003AD4  EC0E  F018         	call	___xxtofl
  1848   003AD8  C001  F00F         	movff	?___xxtofl,___flmul@b
  1849   003ADC  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1850   003AE0  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1851   003AE4  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1852   003AE8  EC85  F00B         	call	___flmul	;wreg free
  1853   003AEC  C00F  F02C         	movff	?___flmul,___fldiv@a
  1854   003AF0  C010  F02D         	movff	?___flmul+1,___fldiv@a+1
  1855   003AF4  C011  F02E         	movff	?___flmul+2,___fldiv@a+2
  1856   003AF8  C012  F02F         	movff	?___flmul+3,___fldiv@a+3
  1857   003AFC  0E00               	movlw	0
  1858   003AFE  6E28               	movwf	___fldiv@b^0,c
  1859   003B00  0E24               	movlw	36
  1860   003B02  6E29               	movwf	(___fldiv@b+1)^0,c
  1861   003B04  0EF4               	movlw	244
  1862   003B06  6E2A               	movwf	(___fldiv@b+2)^0,c
  1863   003B08  0E4A               	movlw	74
  1864   003B0A  6E2B               	movwf	(___fldiv@b+3)^0,c
  1865   003B0C  ECA4  F011         	call	___fldiv	;wreg free
  1866   003B10  C028  F041         	movff	?___fldiv,___fladd@b
  1867   003B14  C029  F042         	movff	?___fldiv+1,___fladd@b+1
  1868   003B18  C02A  F043         	movff	?___fldiv+2,___fladd@b+2
  1869   003B1C  C02B  F044         	movff	?___fldiv+3,___fladd@b+3
  1870   003B20  0E00               	movlw	0
  1871   003B22  6E45               	movwf	___fladd@a^0,c
  1872   003B24  0E00               	movlw	0
  1873   003B26  6E46               	movwf	(___fladd@a+1)^0,c
  1874   003B28  0E80               	movlw	128
  1875   003B2A  6E47               	movwf	(___fladd@a+2)^0,c
  1876   003B2C  0EBF               	movlw	191
  1877   003B2E  6E48               	movwf	(___fladd@a+3)^0,c
  1878   003B30  ECE5  F006         	call	___fladd	;wreg free
  1879   003B34  C041  F055         	movff	?___fladd,USART_init@temp
  1880   003B38  C042  F056         	movff	?___fladd+1,USART_init@temp+1
  1881   003B3C  C043  F057         	movff	?___fladd+2,USART_init@temp+2
  1882   003B40  C044  F058         	movff	?___fladd+3,USART_init@temp+3
  1883   003B44                     
  1884                           ;UART_Driver.c: 25:     if (temp>255) BRGH = 1;
  1885   003B44  0E00               	movlw	0
  1886   003B46  6E01               	movwf	___flge@ff1^0,c
  1887   003B48  0E00               	movlw	0
  1888   003B4A  6E02               	movwf	(___flge@ff1+1)^0,c
  1889   003B4C  0E7F               	movlw	127
  1890   003B4E  6E03               	movwf	(___flge@ff1+2)^0,c
  1891   003B50  0E43               	movlw	67
  1892   003B52  6E04               	movwf	(___flge@ff1+3)^0,c
  1893   003B54  C055  F005         	movff	USART_init@temp,___flge@ff2
  1894   003B58  C056  F006         	movff	USART_init@temp+1,___flge@ff2+1
  1895   003B5C  C057  F007         	movff	USART_init@temp+2,___flge@ff2+2
  1896   003B60  C058  F008         	movff	USART_init@temp+3,___flge@ff2+3
  1897   003B64  ECD3  F01C         	call	___flge	;wreg free
  1898   003B68  B0D8               	btfsc	status,0,c
  1899   003B6A  EFB9  F01D         	goto	u5071
  1900   003B6E  EFBB  F01D         	goto	u5070
  1901   003B72                     u5071:
  1902   003B72  EFBC  F01D         	goto	l5010
  1903   003B76                     u5070:
  1904   003B76  84AC               	bsf	4012,2,c	;volatile
  1905   003B78                     l5010:
  1906                           
  1907                           ;UART_Driver.c: 26:     SPBRG = (unsigned char)temp;
  1908   003B78  C055  F001         	movff	USART_init@temp,___fltol@f1
  1909   003B7C  C056  F002         	movff	USART_init@temp+1,___fltol@f1+1
  1910   003B80  C057  F003         	movff	USART_init@temp+2,___fltol@f1+2
  1911   003B84  C058  F004         	movff	USART_init@temp+3,___fltol@f1+3
  1912   003B88  EC50  F01C         	call	___fltol	;wreg free
  1913   003B8C  5001               	movf	?___fltol^0,w,c
  1914   003B8E  6EAF               	movwf	175,c	;volatile
  1915   003B90                     
  1916                           ;UART_Driver.c: 28:     TXSTA = 0x20;
  1917   003B90  0E20               	movlw	32
  1918   003B92  6EAC               	movwf	172,c	;volatile
  1919   003B94                     
  1920                           ;UART_Driver.c: 29:     RCSTA = 0x90;
  1921   003B94  0E90               	movlw	144
  1922   003B96  6EAB               	movwf	171,c	;volatile
  1923   003B98                     
  1924                           ;UART_Driver.c: 31:     CREN = 1;
  1925   003B98  88AB               	bsf	4011,4,c	;volatile
  1926   003B9A                     
  1927                           ;UART_Driver.c: 32:     TXEN = 1;
  1928   003B9A  8AAC               	bsf	4012,5,c	;volatile
  1929   003B9C  0012               	return		;funcret
  1930   003B9E                     __end_of_USART_init:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function ___xxtofl *****************
  1934 ;; Defined at:
  1935 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  sign            1    wreg     unsigned char 
  1938 ;;  val             4    0[COMRAM] long 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  sign            1    8[COMRAM] unsigned char 
  1941 ;;  arg             4   10[COMRAM] unsigned long 
  1942 ;;  exp             1    9[COMRAM] unsigned char 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  4    0[COMRAM] unsigned char 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2, status,0
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1952 ;;      Params:         4       0       0       0       0       0       0       0       0
  1953 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1954 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1955 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1956 ;;Total ram usage:       14 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 1
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_USART_init
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text2
  1967   00301C                     __ptext2:
  1968                           	callstack 0
  1969   00301C                     ___xxtofl:
  1970                           	callstack 28
  1971                           
  1972                           ;incstack = 0
  1973                           ;___xxtofl@sign stored from wreg
  1974   00301C  6E09               	movwf	___xxtofl@sign^0,c
  1975   00301E  5009               	movf	___xxtofl@sign^0,w,c
  1976   003020  B4D8               	btfsc	status,2,c
  1977   003022  EF15  F018         	goto	u4641
  1978   003026  EF17  F018         	goto	u4640
  1979   00302A                     u4641:
  1980   00302A  EF39  F018         	goto	l1331
  1981   00302E                     u4640:
  1982   00302E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1983   003030  EF1E  F018         	goto	u4650
  1984   003034  EF1C  F018         	goto	u4651
  1985   003038                     u4651:
  1986   003038  EF39  F018         	goto	l1331
  1987   00303C                     u4650:
  1988   00303C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1989   003040  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1990   003044  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1991   003048  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1992   00304C  1E05               	comf	??___xxtofl^0,f,c
  1993   00304E  1E06               	comf	(??___xxtofl+1)^0,f,c
  1994   003050  1E07               	comf	(??___xxtofl+2)^0,f,c
  1995   003052  1E08               	comf	(??___xxtofl+3)^0,f,c
  1996   003054  2A05               	incf	??___xxtofl^0,f,c
  1997   003056  0E00               	movlw	0
  1998   003058  2206               	addwfc	(??___xxtofl+1)^0,f,c
  1999   00305A  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2000   00305C  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2001   00305E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2002   003062  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2003   003066  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2004   00306A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2005   00306E  EF41  F018         	goto	l4640
  2006   003072                     l1331:
  2007   003072  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2008   003076  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2009   00307A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2010   00307E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2011   003082                     l4640:
  2012   003082  5001               	movf	___xxtofl@val^0,w,c
  2013   003084  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2014   003086  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2015   003088  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2016   00308A  A4D8               	btfss	status,2,c
  2017   00308C  EF4A  F018         	goto	u4661
  2018   003090  EF4C  F018         	goto	u4660
  2019   003094                     u4661:
  2020   003094  EF56  F018         	goto	l4646
  2021   003098                     u4660:
  2022   003098  0E00               	movlw	0
  2023   00309A  6E01               	movwf	?___xxtofl^0,c
  2024   00309C  0E00               	movlw	0
  2025   00309E  6E02               	movwf	(?___xxtofl+1)^0,c
  2026   0030A0  0E00               	movlw	0
  2027   0030A2  6E03               	movwf	(?___xxtofl+2)^0,c
  2028   0030A4  0E00               	movlw	0
  2029   0030A6  6E04               	movwf	(?___xxtofl+3)^0,c
  2030   0030A8  EFE7  F018         	goto	l1334
  2031   0030AC                     l4646:
  2032   0030AC  0E96               	movlw	150
  2033   0030AE  6E0A               	movwf	___xxtofl@exp^0,c
  2034   0030B0  EF60  F018         	goto	l4650
  2035   0030B4                     l4648:
  2036   0030B4  2A0A               	incf	___xxtofl@exp^0,f,c
  2037   0030B6  90D8               	bcf	status,0,c
  2038   0030B8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2039   0030BA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2040   0030BC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2041   0030BE  320B               	rrcf	___xxtofl@arg^0,f,c
  2042   0030C0                     l4650:
  2043   0030C0  0E00               	movlw	0
  2044   0030C2  140B               	andwf	___xxtofl@arg^0,w,c
  2045   0030C4  6E05               	movwf	??___xxtofl^0,c
  2046   0030C6  0E00               	movlw	0
  2047   0030C8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2048   0030CA  6E06               	movwf	(??___xxtofl+1)^0,c
  2049   0030CC  0E00               	movlw	0
  2050   0030CE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2051   0030D0  6E07               	movwf	(??___xxtofl+2)^0,c
  2052   0030D2  0EFE               	movlw	254
  2053   0030D4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2054   0030D6  6E08               	movwf	(??___xxtofl+3)^0,c
  2055   0030D8  5005               	movf	??___xxtofl^0,w,c
  2056   0030DA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2057   0030DC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2058   0030DE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2059   0030E0  A4D8               	btfss	status,2,c
  2060   0030E2  EF75  F018         	goto	u4671
  2061   0030E6  EF77  F018         	goto	u4670
  2062   0030EA                     u4671:
  2063   0030EA  EF5A  F018         	goto	l4648
  2064   0030EE                     u4670:
  2065   0030EE  EF85  F018         	goto	l1338
  2066   0030F2                     l4652:
  2067   0030F2  2A0A               	incf	___xxtofl@exp^0,f,c
  2068   0030F4  0E01               	movlw	1
  2069   0030F6  260B               	addwf	___xxtofl@arg^0,f,c
  2070   0030F8  0E00               	movlw	0
  2071   0030FA  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2072   0030FC  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2073   0030FE  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2074   003100  90D8               	bcf	status,0,c
  2075   003102  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2076   003104  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2077   003106  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2078   003108  320B               	rrcf	___xxtofl@arg^0,f,c
  2079   00310A                     l1338:
  2080   00310A  0E00               	movlw	0
  2081   00310C  140B               	andwf	___xxtofl@arg^0,w,c
  2082   00310E  6E05               	movwf	??___xxtofl^0,c
  2083   003110  0E00               	movlw	0
  2084   003112  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2085   003114  6E06               	movwf	(??___xxtofl+1)^0,c
  2086   003116  0E00               	movlw	0
  2087   003118  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2088   00311A  6E07               	movwf	(??___xxtofl+2)^0,c
  2089   00311C  0EFF               	movlw	255
  2090   00311E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2091   003120  6E08               	movwf	(??___xxtofl+3)^0,c
  2092   003122  5005               	movf	??___xxtofl^0,w,c
  2093   003124  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2094   003126  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2095   003128  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2096   00312A  A4D8               	btfss	status,2,c
  2097   00312C  EF9A  F018         	goto	u4681
  2098   003130  EF9C  F018         	goto	u4680
  2099   003134                     u4681:
  2100   003134  EF79  F018         	goto	l4652
  2101   003138                     u4680:
  2102   003138  EFA4  F018         	goto	l4660
  2103   00313C                     l4658:
  2104   00313C  060A               	decf	___xxtofl@exp^0,f,c
  2105   00313E  90D8               	bcf	status,0,c
  2106   003140  360B               	rlcf	___xxtofl@arg^0,f,c
  2107   003142  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2108   003144  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2109   003146  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2110   003148                     l4660:
  2111   003148  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2112   00314A  EFA9  F018         	goto	u4691
  2113   00314E  EFAB  F018         	goto	u4690
  2114   003152                     u4691:
  2115   003152  EFB3  F018         	goto	l1345
  2116   003156                     u4690:
  2117   003156  0E02               	movlw	2
  2118   003158  600A               	cpfslt	___xxtofl@exp^0,c
  2119   00315A  EFB1  F018         	goto	u4701
  2120   00315E  EFB3  F018         	goto	u4700
  2121   003162                     u4701:
  2122   003162  EF9E  F018         	goto	l4658
  2123   003166                     u4700:
  2124   003166                     l1345:
  2125   003166  B00A               	btfsc	___xxtofl@exp^0,0,c
  2126   003168  EFB8  F018         	goto	u4711
  2127   00316C  EFBA  F018         	goto	u4710
  2128   003170                     u4711:
  2129   003170  EFBB  F018         	goto	l4666
  2130   003174                     u4710:
  2131   003174  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2132   003176                     l4666:
  2133   003176  90D8               	bcf	status,0,c
  2134   003178  320A               	rrcf	___xxtofl@exp^0,f,c
  2135   00317A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2136   00317E  6A06               	clrf	(??___xxtofl+1)^0,c
  2137   003180  6A07               	clrf	(??___xxtofl+2)^0,c
  2138   003182  6A08               	clrf	(??___xxtofl+3)^0,c
  2139   003184  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2140   003188  6A07               	clrf	(??___xxtofl+2)^0,c
  2141   00318A  6A06               	clrf	(??___xxtofl+1)^0,c
  2142   00318C  6A05               	clrf	??___xxtofl^0,c
  2143   00318E  5005               	movf	??___xxtofl^0,w,c
  2144   003190  120B               	iorwf	___xxtofl@arg^0,f,c
  2145   003192  5006               	movf	(??___xxtofl+1)^0,w,c
  2146   003194  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2147   003196  5007               	movf	(??___xxtofl+2)^0,w,c
  2148   003198  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2149   00319A  5008               	movf	(??___xxtofl+3)^0,w,c
  2150   00319C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2151   00319E  5009               	movf	___xxtofl@sign^0,w,c
  2152   0031A0  B4D8               	btfsc	status,2,c
  2153   0031A2  EFD5  F018         	goto	u4721
  2154   0031A6  EFD7  F018         	goto	u4720
  2155   0031AA                     u4721:
  2156   0031AA  EFDF  F018         	goto	l4676
  2157   0031AE                     u4720:
  2158   0031AE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2159   0031B0  EFDE  F018         	goto	u4730
  2160   0031B4  EFDC  F018         	goto	u4731
  2161   0031B8                     u4731:
  2162   0031B8  EFDF  F018         	goto	l4676
  2163   0031BC                     u4730:
  2164   0031BC  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2165   0031BE                     l4676:
  2166   0031BE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2167   0031C2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2168   0031C6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2169   0031CA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2170   0031CE                     l1334:
  2171   0031CE  0012               	return		;funcret
  2172   0031D0                     __end_of___xxtofl:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function ___fltol *****************
  2176 ;; Defined at:
  2177 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  f1              4    0[COMRAM] unsigned char 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  exp1            1    9[COMRAM] unsigned char 
  2182 ;;  sign1           1    8[COMRAM] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  4    0[COMRAM] long 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2192 ;;      Params:         4       0       0       0       0       0       0       0       0
  2193 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2194 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2195 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2196 ;;Total ram usage:       10 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 1
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_USART_init
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text3
  2207   0038A0                     __ptext3:
  2208                           	callstack 0
  2209   0038A0                     ___fltol:
  2210                           	callstack 28
  2211   0038A0  3403               	rlcf	(___fltol@f1+2)^0,w,c
  2212   0038A2  3404               	rlcf	(___fltol@f1+3)^0,w,c
  2213   0038A4  6E0A               	movwf	___fltol@exp1^0,c
  2214   0038A6  500A               	movf	___fltol@exp1^0,w,c
  2215   0038A8  A4D8               	btfss	status,2,c
  2216   0038AA  EF59  F01C         	goto	u4571
  2217   0038AE  EF5B  F01C         	goto	u4570
  2218   0038B2                     u4571:
  2219   0038B2  EF65  F01C         	goto	l4596
  2220   0038B6                     u4570:
  2221   0038B6                     l4592:
  2222   0038B6  0E00               	movlw	0
  2223   0038B8  6E01               	movwf	?___fltol^0,c
  2224   0038BA  0E00               	movlw	0
  2225   0038BC  6E02               	movwf	(?___fltol+1)^0,c
  2226   0038BE  0E00               	movlw	0
  2227   0038C0  6E03               	movwf	(?___fltol+2)^0,c
  2228   0038C2  0E00               	movlw	0
  2229   0038C4  6E04               	movwf	(?___fltol+3)^0,c
  2230   0038C6  EFD2  F01C         	goto	l973
  2231   0038CA                     l4596:
  2232   0038CA  C001  F005         	movff	___fltol@f1,??___fltol
  2233   0038CE  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  2234   0038D2  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  2235   0038D6  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  2236   0038DA  0E20               	movlw	32
  2237   0038DC  EF75  F01C         	goto	u4580
  2238   0038E0                     u4585:
  2239   0038E0  90D8               	bcf	status,0,c
  2240   0038E2  3208               	rrcf	(??___fltol+3)^0,f,c
  2241   0038E4  3207               	rrcf	(??___fltol+2)^0,f,c
  2242   0038E6  3206               	rrcf	(??___fltol+1)^0,f,c
  2243   0038E8  3205               	rrcf	??___fltol^0,f,c
  2244   0038EA                     u4580:
  2245   0038EA  2EE8               	decfsz	wreg,f,c
  2246   0038EC  EF70  F01C         	goto	u4585
  2247   0038F0  5005               	movf	??___fltol^0,w,c
  2248   0038F2  6E09               	movwf	___fltol@sign1^0,c
  2249   0038F4  8E03               	bsf	(___fltol@f1+2)^0,7,c
  2250   0038F6  0EFF               	movlw	255
  2251   0038F8  1601               	andwf	___fltol@f1^0,f,c
  2252   0038FA  0EFF               	movlw	255
  2253   0038FC  1602               	andwf	(___fltol@f1+1)^0,f,c
  2254   0038FE  0EFF               	movlw	255
  2255   003900  1603               	andwf	(___fltol@f1+2)^0,f,c
  2256   003902  0E00               	movlw	0
  2257   003904  1604               	andwf	(___fltol@f1+3)^0,f,c
  2258   003906  0E96               	movlw	150
  2259   003908  5E0A               	subwf	___fltol@exp1^0,f,c
  2260   00390A  BE0A               	btfsc	___fltol@exp1^0,7,c
  2261   00390C  EF8C  F01C         	goto	u4590
  2262   003910  EF8A  F01C         	goto	u4591
  2263   003914                     u4591:
  2264   003914  EFA2  F01C         	goto	l4616
  2265   003918                     u4590:
  2266   003918  500A               	movf	___fltol@exp1^0,w,c
  2267   00391A  0A80               	xorlw	128
  2268   00391C  0F97               	addlw	151
  2269   00391E  B0D8               	btfsc	status,0,c
  2270   003920  EF94  F01C         	goto	u4601
  2271   003924  EF96  F01C         	goto	u4600
  2272   003928                     u4601:
  2273   003928  EF98  F01C         	goto	l4612
  2274   00392C                     u4600:
  2275   00392C  EF5B  F01C         	goto	l4592
  2276   003930                     l4612:
  2277   003930  90D8               	bcf	status,0,c
  2278   003932  3204               	rrcf	(___fltol@f1+3)^0,f,c
  2279   003934  3203               	rrcf	(___fltol@f1+2)^0,f,c
  2280   003936  3202               	rrcf	(___fltol@f1+1)^0,f,c
  2281   003938  3201               	rrcf	___fltol@f1^0,f,c
  2282   00393A  3E0A               	incfsz	___fltol@exp1^0,f,c
  2283   00393C  EF98  F01C         	goto	l4612
  2284   003940  EFBA  F01C         	goto	l4626
  2285   003944                     l4616:
  2286   003944  0E1F               	movlw	31
  2287   003946  640A               	cpfsgt	___fltol@exp1^0,c
  2288   003948  EFA8  F01C         	goto	u4611
  2289   00394C  EFAA  F01C         	goto	u4610
  2290   003950                     u4611:
  2291   003950  EFB2  F01C         	goto	l4624
  2292   003954                     u4610:
  2293   003954  EF5B  F01C         	goto	l4592
  2294   003958                     l4622:
  2295   003958  90D8               	bcf	status,0,c
  2296   00395A  3601               	rlcf	___fltol@f1^0,f,c
  2297   00395C  3602               	rlcf	(___fltol@f1+1)^0,f,c
  2298   00395E  3603               	rlcf	(___fltol@f1+2)^0,f,c
  2299   003960  3604               	rlcf	(___fltol@f1+3)^0,f,c
  2300   003962  060A               	decf	___fltol@exp1^0,f,c
  2301   003964                     l4624:
  2302   003964  500A               	movf	___fltol@exp1^0,w,c
  2303   003966  A4D8               	btfss	status,2,c
  2304   003968  EFB8  F01C         	goto	u4621
  2305   00396C  EFBA  F01C         	goto	u4620
  2306   003970                     u4621:
  2307   003970  EFAC  F01C         	goto	l4622
  2308   003974                     u4620:
  2309   003974                     l4626:
  2310   003974  5009               	movf	___fltol@sign1^0,w,c
  2311   003976  B4D8               	btfsc	status,2,c
  2312   003978  EFC0  F01C         	goto	u4631
  2313   00397C  EFC2  F01C         	goto	u4630
  2314   003980                     u4631:
  2315   003980  EFCA  F01C         	goto	l4630
  2316   003984                     u4630:
  2317   003984  1E04               	comf	(___fltol@f1+3)^0,f,c
  2318   003986  1E03               	comf	(___fltol@f1+2)^0,f,c
  2319   003988  1E02               	comf	(___fltol@f1+1)^0,f,c
  2320   00398A  6C01               	negf	___fltol@f1^0,c
  2321   00398C  0E00               	movlw	0
  2322   00398E  2202               	addwfc	(___fltol@f1+1)^0,f,c
  2323   003990  2203               	addwfc	(___fltol@f1+2)^0,f,c
  2324   003992  2204               	addwfc	(___fltol@f1+3)^0,f,c
  2325   003994                     l4630:
  2326   003994  C001  F001         	movff	___fltol@f1,?___fltol
  2327   003998  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  2328   00399C  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  2329   0039A0  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  2330   0039A4                     l973:
  2331   0039A4  0012               	return		;funcret
  2332   0039A6                     __end_of___fltol:
  2333                           	callstack 0
  2334                           
  2335 ;; *************** function ___flmul *****************
  2336 ;; Defined at:
  2337 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  b               4   14[COMRAM] long 
  2340 ;;  a               4   18[COMRAM] long 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  prod            4   33[COMRAM] struct .
  2343 ;;  grs             4   27[COMRAM] unsigned long 
  2344 ;;  temp            2   37[COMRAM] struct .
  2345 ;;  bexp            1   32[COMRAM] unsigned char 
  2346 ;;  aexp            1   31[COMRAM] unsigned char 
  2347 ;;  sign            1   26[COMRAM] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  4   14[COMRAM] unsigned char 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0, prodl, prodh
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2357 ;;      Params:         8       0       0       0       0       0       0       0       0
  2358 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2359 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2360 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2361 ;;Total ram usage:       25 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 1
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_USART_init
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text4
  2372   00170A                     __ptext4:
  2373                           	callstack 0
  2374   00170A                     ___flmul:
  2375                           	callstack 28
  2376   00170A  5012               	movf	(___flmul@b+3)^0,w,c
  2377   00170C  0B80               	andlw	128
  2378   00170E  6E1B               	movwf	___flmul@sign^0,c
  2379   001710  5012               	movf	(___flmul@b+3)^0,w,c
  2380   001712  2412               	addwf	(___flmul@b+3)^0,w,c
  2381   001714  6E21               	movwf	___flmul@bexp^0,c
  2382   001716  AE11               	btfss	(___flmul@b+2)^0,7,c
  2383   001718  EF90  F00B         	goto	u4211
  2384   00171C  EF92  F00B         	goto	u4210
  2385   001720                     u4211:
  2386   001720  EF93  F00B         	goto	l4364
  2387   001724                     u4210:
  2388   001724  8021               	bsf	___flmul@bexp^0,0,c
  2389   001726                     l4364:
  2390   001726  5021               	movf	___flmul@bexp^0,w,c
  2391   001728  B4D8               	btfsc	status,2,c
  2392   00172A  EF99  F00B         	goto	u4221
  2393   00172E  EF9B  F00B         	goto	u4220
  2394   001732                     u4221:
  2395   001732  EFAE  F00B         	goto	l4372
  2396   001736                     u4220:
  2397   001736  2821               	incf	___flmul@bexp^0,w,c
  2398   001738  A4D8               	btfss	status,2,c
  2399   00173A  EFA1  F00B         	goto	u4231
  2400   00173E  EFA3  F00B         	goto	u4230
  2401   001742                     u4231:
  2402   001742  EFAB  F00B         	goto	l4370
  2403   001746                     u4230:
  2404   001746  0E00               	movlw	0
  2405   001748  6E0F               	movwf	___flmul@b^0,c
  2406   00174A  0E00               	movlw	0
  2407   00174C  6E10               	movwf	(___flmul@b+1)^0,c
  2408   00174E  0E00               	movlw	0
  2409   001750  6E11               	movwf	(___flmul@b+2)^0,c
  2410   001752  0E00               	movlw	0
  2411   001754  6E12               	movwf	(___flmul@b+3)^0,c
  2412   001756                     l4370:
  2413   001756  8E11               	bsf	(___flmul@b+2)^0,7,c
  2414   001758  EFB6  F00B         	goto	l4374
  2415   00175C                     l4372:
  2416   00175C  0E00               	movlw	0
  2417   00175E  6E0F               	movwf	___flmul@b^0,c
  2418   001760  0E00               	movlw	0
  2419   001762  6E10               	movwf	(___flmul@b+1)^0,c
  2420   001764  0E00               	movlw	0
  2421   001766  6E11               	movwf	(___flmul@b+2)^0,c
  2422   001768  0E00               	movlw	0
  2423   00176A  6E12               	movwf	(___flmul@b+3)^0,c
  2424   00176C                     l4374:
  2425   00176C  5016               	movf	(___flmul@a+3)^0,w,c
  2426   00176E  0B80               	andlw	128
  2427   001770  1A1B               	xorwf	___flmul@sign^0,f,c
  2428   001772  5016               	movf	(___flmul@a+3)^0,w,c
  2429   001774  2416               	addwf	(___flmul@a+3)^0,w,c
  2430   001776  6E20               	movwf	___flmul@aexp^0,c
  2431   001778  AE15               	btfss	(___flmul@a+2)^0,7,c
  2432   00177A  EFC1  F00B         	goto	u4241
  2433   00177E  EFC3  F00B         	goto	u4240
  2434   001782                     u4241:
  2435   001782  EFC4  F00B         	goto	l4382
  2436   001786                     u4240:
  2437   001786  8020               	bsf	___flmul@aexp^0,0,c
  2438   001788                     l4382:
  2439   001788  5020               	movf	___flmul@aexp^0,w,c
  2440   00178A  B4D8               	btfsc	status,2,c
  2441   00178C  EFCA  F00B         	goto	u4251
  2442   001790  EFCC  F00B         	goto	u4250
  2443   001794                     u4251:
  2444   001794  EFDF  F00B         	goto	l4390
  2445   001798                     u4250:
  2446   001798  2820               	incf	___flmul@aexp^0,w,c
  2447   00179A  A4D8               	btfss	status,2,c
  2448   00179C  EFD2  F00B         	goto	u4261
  2449   0017A0  EFD4  F00B         	goto	u4260
  2450   0017A4                     u4261:
  2451   0017A4  EFDC  F00B         	goto	l4388
  2452   0017A8                     u4260:
  2453   0017A8  0E00               	movlw	0
  2454   0017AA  6E13               	movwf	___flmul@a^0,c
  2455   0017AC  0E00               	movlw	0
  2456   0017AE  6E14               	movwf	(___flmul@a+1)^0,c
  2457   0017B0  0E00               	movlw	0
  2458   0017B2  6E15               	movwf	(___flmul@a+2)^0,c
  2459   0017B4  0E00               	movlw	0
  2460   0017B6  6E16               	movwf	(___flmul@a+3)^0,c
  2461   0017B8                     l4388:
  2462   0017B8  8E15               	bsf	(___flmul@a+2)^0,7,c
  2463   0017BA  EFE7  F00B         	goto	l1290
  2464   0017BE                     l4390:
  2465   0017BE  0E00               	movlw	0
  2466   0017C0  6E13               	movwf	___flmul@a^0,c
  2467   0017C2  0E00               	movlw	0
  2468   0017C4  6E14               	movwf	(___flmul@a+1)^0,c
  2469   0017C6  0E00               	movlw	0
  2470   0017C8  6E15               	movwf	(___flmul@a+2)^0,c
  2471   0017CA  0E00               	movlw	0
  2472   0017CC  6E16               	movwf	(___flmul@a+3)^0,c
  2473   0017CE                     l1290:
  2474   0017CE  5020               	movf	___flmul@aexp^0,w,c
  2475   0017D0  B4D8               	btfsc	status,2,c
  2476   0017D2  EFED  F00B         	goto	u4271
  2477   0017D6  EFEF  F00B         	goto	u4270
  2478   0017DA                     u4271:
  2479   0017DA  EFF7  F00B         	goto	l4394
  2480   0017DE                     u4270:
  2481   0017DE  5021               	movf	___flmul@bexp^0,w,c
  2482   0017E0  A4D8               	btfss	status,2,c
  2483   0017E2  EFF5  F00B         	goto	u4281
  2484   0017E6  EFF7  F00B         	goto	u4280
  2485   0017EA                     u4281:
  2486   0017EA  EF01  F00C         	goto	l4398
  2487   0017EE                     u4280:
  2488   0017EE                     l4394:
  2489   0017EE  0E00               	movlw	0
  2490   0017F0  6E0F               	movwf	?___flmul^0,c
  2491   0017F2  0E00               	movlw	0
  2492   0017F4  6E10               	movwf	(?___flmul+1)^0,c
  2493   0017F6  0E00               	movlw	0
  2494   0017F8  6E11               	movwf	(?___flmul+2)^0,c
  2495   0017FA  0E00               	movlw	0
  2496   0017FC  6E12               	movwf	(?___flmul+3)^0,c
  2497   0017FE  EF99  F00D         	goto	l1294
  2498   001802                     l4398:
  2499   001802  5015               	movf	(___flmul@a+2)^0,w,c
  2500   001804  020F               	mulwf	___flmul@b^0,c
  2501   001806  CFF3 F026          	movff	prodl,___flmul@temp
  2502   00180A  CFF4 F027          	movff	prodh,___flmul@temp+1
  2503   00180E  5026               	movf	___flmul@temp^0,w,c
  2504   001810  6E1C               	movwf	___flmul@grs^0,c
  2505   001812  6A1D               	clrf	(___flmul@grs+1)^0,c
  2506   001814  6A1E               	clrf	(___flmul@grs+2)^0,c
  2507   001816  6A1F               	clrf	(___flmul@grs+3)^0,c
  2508   001818  5027               	movf	(___flmul@temp+1)^0,w,c
  2509   00181A  6E22               	movwf	___flmul@prod^0,c
  2510   00181C  6A23               	clrf	(___flmul@prod+1)^0,c
  2511   00181E  6A24               	clrf	(___flmul@prod+2)^0,c
  2512   001820  6A25               	clrf	(___flmul@prod+3)^0,c
  2513   001822  5014               	movf	(___flmul@a+1)^0,w,c
  2514   001824  0210               	mulwf	(___flmul@b+1)^0,c
  2515   001826  CFF3 F026          	movff	prodl,___flmul@temp
  2516   00182A  CFF4 F027          	movff	prodh,___flmul@temp+1
  2517   00182E  5026               	movf	___flmul@temp^0,w,c
  2518   001830  261C               	addwf	___flmul@grs^0,f,c
  2519   001832  0E00               	movlw	0
  2520   001834  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2521   001836  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2522   001838  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2523   00183A  5027               	movf	(___flmul@temp+1)^0,w,c
  2524   00183C  2622               	addwf	___flmul@prod^0,f,c
  2525   00183E  0E00               	movlw	0
  2526   001840  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2527   001842  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2528   001844  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2529   001846  5013               	movf	___flmul@a^0,w,c
  2530   001848  0211               	mulwf	(___flmul@b+2)^0,c
  2531   00184A  CFF3 F026          	movff	prodl,___flmul@temp
  2532   00184E  CFF4 F027          	movff	prodh,___flmul@temp+1
  2533   001852  5026               	movf	___flmul@temp^0,w,c
  2534   001854  261C               	addwf	___flmul@grs^0,f,c
  2535   001856  0E00               	movlw	0
  2536   001858  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2537   00185A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2538   00185C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2539   00185E  5027               	movf	(___flmul@temp+1)^0,w,c
  2540   001860  2622               	addwf	___flmul@prod^0,f,c
  2541   001862  0E00               	movlw	0
  2542   001864  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2543   001866  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2544   001868  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2545   00186A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2546   00186E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2547   001872  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2548   001876  6A1C               	clrf	___flmul@grs^0,c
  2549   001878  5013               	movf	___flmul@a^0,w,c
  2550   00187A  0210               	mulwf	(___flmul@b+1)^0,c
  2551   00187C  CFF3 F026          	movff	prodl,___flmul@temp
  2552   001880  CFF4 F027          	movff	prodh,___flmul@temp+1
  2553   001884  5026               	movf	___flmul@temp^0,w,c
  2554   001886  261C               	addwf	___flmul@grs^0,f,c
  2555   001888  5027               	movf	(___flmul@temp+1)^0,w,c
  2556   00188A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2557   00188C  0E00               	movlw	0
  2558   00188E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2559   001890  0E00               	movlw	0
  2560   001892  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2561   001894  5014               	movf	(___flmul@a+1)^0,w,c
  2562   001896  020F               	mulwf	___flmul@b^0,c
  2563   001898  CFF3 F026          	movff	prodl,___flmul@temp
  2564   00189C  CFF4 F027          	movff	prodh,___flmul@temp+1
  2565   0018A0  5026               	movf	___flmul@temp^0,w,c
  2566   0018A2  261C               	addwf	___flmul@grs^0,f,c
  2567   0018A4  5027               	movf	(___flmul@temp+1)^0,w,c
  2568   0018A6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2569   0018A8  0E00               	movlw	0
  2570   0018AA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2571   0018AC  0E00               	movlw	0
  2572   0018AE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2573   0018B0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2574   0018B4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2575   0018B8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2576   0018BC  6A1C               	clrf	___flmul@grs^0,c
  2577   0018BE  5013               	movf	___flmul@a^0,w,c
  2578   0018C0  020F               	mulwf	___flmul@b^0,c
  2579   0018C2  CFF3 F026          	movff	prodl,___flmul@temp
  2580   0018C6  CFF4 F027          	movff	prodh,___flmul@temp+1
  2581   0018CA  5026               	movf	___flmul@temp^0,w,c
  2582   0018CC  261C               	addwf	___flmul@grs^0,f,c
  2583   0018CE  5027               	movf	(___flmul@temp+1)^0,w,c
  2584   0018D0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2585   0018D2  0E00               	movlw	0
  2586   0018D4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2587   0018D6  0E00               	movlw	0
  2588   0018D8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2589   0018DA  5015               	movf	(___flmul@a+2)^0,w,c
  2590   0018DC  0210               	mulwf	(___flmul@b+1)^0,c
  2591   0018DE  CFF3 F026          	movff	prodl,___flmul@temp
  2592   0018E2  CFF4 F027          	movff	prodh,___flmul@temp+1
  2593   0018E6  5026               	movf	___flmul@temp^0,w,c
  2594   0018E8  2622               	addwf	___flmul@prod^0,f,c
  2595   0018EA  5027               	movf	(___flmul@temp+1)^0,w,c
  2596   0018EC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2597   0018EE  0E00               	movlw	0
  2598   0018F0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2599   0018F2  0E00               	movlw	0
  2600   0018F4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2601   0018F6  5014               	movf	(___flmul@a+1)^0,w,c
  2602   0018F8  0211               	mulwf	(___flmul@b+2)^0,c
  2603   0018FA  CFF3 F026          	movff	prodl,___flmul@temp
  2604   0018FE  CFF4 F027          	movff	prodh,___flmul@temp+1
  2605   001902  5026               	movf	___flmul@temp^0,w,c
  2606   001904  2622               	addwf	___flmul@prod^0,f,c
  2607   001906  5027               	movf	(___flmul@temp+1)^0,w,c
  2608   001908  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2609   00190A  0E00               	movlw	0
  2610   00190C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2611   00190E  0E00               	movlw	0
  2612   001910  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2613   001912  5015               	movf	(___flmul@a+2)^0,w,c
  2614   001914  0211               	mulwf	(___flmul@b+2)^0,c
  2615   001916  CFF3 F026          	movff	prodl,___flmul@temp
  2616   00191A  CFF4 F027          	movff	prodh,___flmul@temp+1
  2617   00191E  5026               	movf	___flmul@temp^0,w,c
  2618   001920  6E17               	movwf	??___flmul^0,c
  2619   001922  5027               	movf	(___flmul@temp+1)^0,w,c
  2620   001924  6E18               	movwf	(??___flmul+1)^0,c
  2621   001926  6A19               	clrf	(??___flmul+2)^0,c
  2622   001928  6A1A               	clrf	(??___flmul+3)^0,c
  2623   00192A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  2624   00192E  C018  F019         	movff	??___flmul+1,??___flmul+2
  2625   001932  C017  F018         	movff	??___flmul,??___flmul+1
  2626   001936  6A17               	clrf	??___flmul^0,c
  2627   001938  5017               	movf	??___flmul^0,w,c
  2628   00193A  2622               	addwf	___flmul@prod^0,f,c
  2629   00193C  5018               	movf	(??___flmul+1)^0,w,c
  2630   00193E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2631   001940  5019               	movf	(??___flmul+2)^0,w,c
  2632   001942  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2633   001944  501A               	movf	(??___flmul+3)^0,w,c
  2634   001946  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2635   001948  C01C  F017         	movff	___flmul@grs,??___flmul
  2636   00194C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  2637   001950  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  2638   001954  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  2639   001958  0E19               	movlw	25
  2640   00195A  EFB4  F00C         	goto	u4290
  2641   00195E                     u4295:
  2642   00195E  90D8               	bcf	status,0,c
  2643   001960  321A               	rrcf	(??___flmul+3)^0,f,c
  2644   001962  3219               	rrcf	(??___flmul+2)^0,f,c
  2645   001964  3218               	rrcf	(??___flmul+1)^0,f,c
  2646   001966  3217               	rrcf	??___flmul^0,f,c
  2647   001968                     u4290:
  2648   001968  2EE8               	decfsz	wreg,f,c
  2649   00196A  EFAF  F00C         	goto	u4295
  2650   00196E  5017               	movf	??___flmul^0,w,c
  2651   001970  2622               	addwf	___flmul@prod^0,f,c
  2652   001972  5018               	movf	(??___flmul+1)^0,w,c
  2653   001974  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2654   001976  5019               	movf	(??___flmul+2)^0,w,c
  2655   001978  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2656   00197A  501A               	movf	(??___flmul+3)^0,w,c
  2657   00197C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2658   00197E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2659   001982  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2660   001986  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2661   00198A  6A1C               	clrf	___flmul@grs^0,c
  2662   00198C  5020               	movf	___flmul@aexp^0,w,c
  2663   00198E  C021  F017         	movff	___flmul@bexp,??___flmul
  2664   001992  6A18               	clrf	(??___flmul+1)^0,c
  2665   001994  2617               	addwf	??___flmul^0,f,c
  2666   001996  0E00               	movlw	0
  2667   001998  2218               	addwfc	(??___flmul+1)^0,f,c
  2668   00199A  0E82               	movlw	130
  2669   00199C  2417               	addwf	??___flmul^0,w,c
  2670   00199E  6E26               	movwf	___flmul@temp^0,c
  2671   0019A0  0EFF               	movlw	255
  2672   0019A2  2018               	addwfc	(??___flmul+1)^0,w,c
  2673   0019A4  6E27               	movwf	(___flmul@temp+1)^0,c
  2674   0019A6  EFEA  F00C         	goto	l4446
  2675   0019AA                     l4440:
  2676   0019AA  90D8               	bcf	status,0,c
  2677   0019AC  3622               	rlcf	___flmul@prod^0,f,c
  2678   0019AE  3623               	rlcf	(___flmul@prod+1)^0,f,c
  2679   0019B0  3624               	rlcf	(___flmul@prod+2)^0,f,c
  2680   0019B2  3625               	rlcf	(___flmul@prod+3)^0,f,c
  2681   0019B4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  2682   0019B6  EFDF  F00C         	goto	u4301
  2683   0019BA  EFE1  F00C         	goto	u4300
  2684   0019BE                     u4301:
  2685   0019BE  EFE2  F00C         	goto	l1297
  2686   0019C2                     u4300:
  2687   0019C2  8022               	bsf	___flmul@prod^0,0,c
  2688   0019C4                     l1297:
  2689   0019C4  90D8               	bcf	status,0,c
  2690   0019C6  361C               	rlcf	___flmul@grs^0,f,c
  2691   0019C8  361D               	rlcf	(___flmul@grs+1)^0,f,c
  2692   0019CA  361E               	rlcf	(___flmul@grs+2)^0,f,c
  2693   0019CC  361F               	rlcf	(___flmul@grs+3)^0,f,c
  2694   0019CE  0626               	decf	___flmul@temp^0,f,c
  2695   0019D0  A0D8               	btfss	status,0,c
  2696   0019D2  0627               	decf	(___flmul@temp+1)^0,f,c
  2697   0019D4                     l4446:
  2698   0019D4  AE24               	btfss	(___flmul@prod+2)^0,7,c
  2699   0019D6  EFEF  F00C         	goto	u4311
  2700   0019DA  EFF1  F00C         	goto	u4310
  2701   0019DE                     u4311:
  2702   0019DE  EFD5  F00C         	goto	l4440
  2703   0019E2                     u4310:
  2704   0019E2  0E00               	movlw	0
  2705   0019E4  6E20               	movwf	___flmul@aexp^0,c
  2706   0019E6  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  2707   0019E8  EFF8  F00C         	goto	u4321
  2708   0019EC  EFFA  F00C         	goto	u4320
  2709   0019F0                     u4321:
  2710   0019F0  EF1E  F00D         	goto	l1299
  2711   0019F4                     u4320:
  2712   0019F4  0EFF               	movlw	255
  2713   0019F6  141C               	andwf	___flmul@grs^0,w,c
  2714   0019F8  6E17               	movwf	??___flmul^0,c
  2715   0019FA  0EFF               	movlw	255
  2716   0019FC  141D               	andwf	(___flmul@grs+1)^0,w,c
  2717   0019FE  6E18               	movwf	(??___flmul+1)^0,c
  2718   001A00  0EFF               	movlw	255
  2719   001A02  141E               	andwf	(___flmul@grs+2)^0,w,c
  2720   001A04  6E19               	movwf	(??___flmul+2)^0,c
  2721   001A06  0E7F               	movlw	127
  2722   001A08  141F               	andwf	(___flmul@grs+3)^0,w,c
  2723   001A0A  6E1A               	movwf	(??___flmul+3)^0,c
  2724   001A0C  5017               	movf	??___flmul^0,w,c
  2725   001A0E  1018               	iorwf	(??___flmul+1)^0,w,c
  2726   001A10  1019               	iorwf	(??___flmul+2)^0,w,c
  2727   001A12  101A               	iorwf	(??___flmul+3)^0,w,c
  2728   001A14  B4D8               	btfsc	status,2,c
  2729   001A16  EF0F  F00D         	goto	u4331
  2730   001A1A  EF11  F00D         	goto	u4330
  2731   001A1E                     u4331:
  2732   001A1E  EF15  F00D         	goto	l1300
  2733   001A22                     u4330:
  2734   001A22                     l4454:
  2735   001A22  0E01               	movlw	1
  2736   001A24  6E20               	movwf	___flmul@aexp^0,c
  2737   001A26  EF1E  F00D         	goto	l1299
  2738   001A2A                     l1300:
  2739   001A2A  A022               	btfss	___flmul@prod^0,0,c
  2740   001A2C  EF1A  F00D         	goto	u4341
  2741   001A30  EF1C  F00D         	goto	u4340
  2742   001A34                     u4341:
  2743   001A34  EF1E  F00D         	goto	l1299
  2744   001A38                     u4340:
  2745   001A38  EF11  F00D         	goto	l4454
  2746   001A3C                     l1299:
  2747   001A3C  5020               	movf	___flmul@aexp^0,w,c
  2748   001A3E  B4D8               	btfsc	status,2,c
  2749   001A40  EF24  F00D         	goto	u4351
  2750   001A44  EF26  F00D         	goto	u4350
  2751   001A48                     u4351:
  2752   001A48  EF4A  F00D         	goto	l4466
  2753   001A4C                     u4350:
  2754   001A4C  0E01               	movlw	1
  2755   001A4E  2622               	addwf	___flmul@prod^0,f,c
  2756   001A50  0E00               	movlw	0
  2757   001A52  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2758   001A54  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2759   001A56  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2760   001A58  A025               	btfss	(___flmul@prod+3)^0,0,c
  2761   001A5A  EF31  F00D         	goto	u4361
  2762   001A5E  EF33  F00D         	goto	u4360
  2763   001A62                     u4361:
  2764   001A62  EF4A  F00D         	goto	l4466
  2765   001A66                     u4360:
  2766   001A66  C022  F017         	movff	___flmul@prod,??___flmul
  2767   001A6A  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  2768   001A6E  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  2769   001A72  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  2770   001A76  341A               	rlcf	(??___flmul+3)^0,w,c
  2771   001A78  321A               	rrcf	(??___flmul+3)^0,f,c
  2772   001A7A  3219               	rrcf	(??___flmul+2)^0,f,c
  2773   001A7C  3218               	rrcf	(??___flmul+1)^0,f,c
  2774   001A7E  3217               	rrcf	??___flmul^0,f,c
  2775   001A80  C017  F022         	movff	??___flmul,___flmul@prod
  2776   001A84  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  2777   001A88  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  2778   001A8C  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  2779   001A90  4A26               	infsnz	___flmul@temp^0,f,c
  2780   001A92  2A27               	incf	(___flmul@temp+1)^0,f,c
  2781   001A94                     l4466:
  2782   001A94  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  2783   001A96  EF55  F00D         	goto	u4371
  2784   001A9A  5027               	movf	(___flmul@temp+1)^0,w,c
  2785   001A9C  E108               	bnz	u4370
  2786   001A9E  2826               	incf	___flmul@temp^0,w,c
  2787   001AA0  A0D8               	btfss	status,0,c
  2788   001AA2  EF55  F00D         	goto	u4371
  2789   001AA6  EF57  F00D         	goto	u4370
  2790   001AAA                     u4371:
  2791   001AAA  EF61  F00D         	goto	l4470
  2792   001AAE                     u4370:
  2793   001AAE  0E00               	movlw	0
  2794   001AB0  6E22               	movwf	___flmul@prod^0,c
  2795   001AB2  0E00               	movlw	0
  2796   001AB4  6E23               	movwf	(___flmul@prod+1)^0,c
  2797   001AB6  0E80               	movlw	128
  2798   001AB8  6E24               	movwf	(___flmul@prod+2)^0,c
  2799   001ABA  0E7F               	movlw	127
  2800   001ABC  6E25               	movwf	(___flmul@prod+3)^0,c
  2801   001ABE  EF8F  F00D         	goto	l4482
  2802   001AC2                     l4470:
  2803   001AC2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  2804   001AC4  EF6E  F00D         	goto	u4380
  2805   001AC8  5027               	movf	(___flmul@temp+1)^0,w,c
  2806   001ACA  E106               	bnz	u4381
  2807   001ACC  0426               	decf	___flmul@temp^0,w,c
  2808   001ACE  B0D8               	btfsc	status,0,c
  2809   001AD0  EF6C  F00D         	goto	u4381
  2810   001AD4  EF6E  F00D         	goto	u4380
  2811   001AD8                     u4381:
  2812   001AD8  EF7A  F00D         	goto	l1307
  2813   001ADC                     u4380:
  2814   001ADC  0E00               	movlw	0
  2815   001ADE  6E22               	movwf	___flmul@prod^0,c
  2816   001AE0  0E00               	movlw	0
  2817   001AE2  6E23               	movwf	(___flmul@prod+1)^0,c
  2818   001AE4  0E00               	movlw	0
  2819   001AE6  6E24               	movwf	(___flmul@prod+2)^0,c
  2820   001AE8  0E00               	movlw	0
  2821   001AEA  6E25               	movwf	(___flmul@prod+3)^0,c
  2822   001AEC  0E00               	movlw	0
  2823   001AEE  6E1B               	movwf	___flmul@sign^0,c
  2824   001AF0  EF8F  F00D         	goto	l4482
  2825   001AF4                     l1307:
  2826   001AF4  C026  F021         	movff	___flmul@temp,___flmul@bexp
  2827   001AF8  0EFF               	movlw	255
  2828   001AFA  1622               	andwf	___flmul@prod^0,f,c
  2829   001AFC  0EFF               	movlw	255
  2830   001AFE  1623               	andwf	(___flmul@prod+1)^0,f,c
  2831   001B00  0E7F               	movlw	127
  2832   001B02  1624               	andwf	(___flmul@prod+2)^0,f,c
  2833   001B04  0E00               	movlw	0
  2834   001B06  1625               	andwf	(___flmul@prod+3)^0,f,c
  2835   001B08  A021               	btfss	___flmul@bexp^0,0,c
  2836   001B0A  EF89  F00D         	goto	u4391
  2837   001B0E  EF8B  F00D         	goto	u4390
  2838   001B12                     u4391:
  2839   001B12  EF8C  F00D         	goto	l4480
  2840   001B16                     u4390:
  2841   001B16  8E24               	bsf	(___flmul@prod+2)^0,7,c
  2842   001B18                     l4480:
  2843   001B18  90D8               	bcf	status,0,c
  2844   001B1A  3021               	rrcf	___flmul@bexp^0,w,c
  2845   001B1C  6E25               	movwf	(___flmul@prod+3)^0,c
  2846   001B1E                     l4482:
  2847   001B1E  501B               	movf	___flmul@sign^0,w,c
  2848   001B20  1225               	iorwf	(___flmul@prod+3)^0,f,c
  2849   001B22  C022  F00F         	movff	___flmul@prod,?___flmul
  2850   001B26  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  2851   001B2A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  2852   001B2E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  2853   001B32                     l1294:
  2854   001B32  0012               	return		;funcret
  2855   001B34                     __end_of___flmul:
  2856                           	callstack 0
  2857                           
  2858 ;; *************** function ___flge *****************
  2859 ;; Defined at:
  2860 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  ff1             4    0[COMRAM] unsigned char 
  2863 ;;  ff2             4    4[COMRAM] unsigned char 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;		None               void
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2875 ;;      Params:         8       0       0       0       0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2877 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2878 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2879 ;;Total ram usage:       12 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 1
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_USART_init
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text5
  2890   0039A6                     __ptext5:
  2891                           	callstack 0
  2892   0039A6                     ___flge:
  2893                           	callstack 28
  2894   0039A6  0E00               	movlw	0
  2895   0039A8  1401               	andwf	___flge@ff1^0,w,c
  2896   0039AA  6E09               	movwf	??___flge^0,c
  2897   0039AC  0E00               	movlw	0
  2898   0039AE  1402               	andwf	(___flge@ff1+1)^0,w,c
  2899   0039B0  6E0A               	movwf	(??___flge+1)^0,c
  2900   0039B2  0E80               	movlw	128
  2901   0039B4  1403               	andwf	(___flge@ff1+2)^0,w,c
  2902   0039B6  6E0B               	movwf	(??___flge+2)^0,c
  2903   0039B8  0E7F               	movlw	127
  2904   0039BA  1404               	andwf	(___flge@ff1+3)^0,w,c
  2905   0039BC  6E0C               	movwf	(??___flge+3)^0,c
  2906   0039BE  5009               	movf	??___flge^0,w,c
  2907   0039C0  100A               	iorwf	(??___flge+1)^0,w,c
  2908   0039C2  100B               	iorwf	(??___flge+2)^0,w,c
  2909   0039C4  100C               	iorwf	(??___flge+3)^0,w,c
  2910   0039C6  A4D8               	btfss	status,2,c
  2911   0039C8  EFE8  F01C         	goto	u4521
  2912   0039CC  EFEA  F01C         	goto	u4520
  2913   0039D0                     u4521:
  2914   0039D0  EFF2  F01C         	goto	l4572
  2915   0039D4                     u4520:
  2916   0039D4  0E00               	movlw	0
  2917   0039D6  6E01               	movwf	___flge@ff1^0,c
  2918   0039D8  0E00               	movlw	0
  2919   0039DA  6E02               	movwf	(___flge@ff1+1)^0,c
  2920   0039DC  0E00               	movlw	0
  2921   0039DE  6E03               	movwf	(___flge@ff1+2)^0,c
  2922   0039E0  0E00               	movlw	0
  2923   0039E2  6E04               	movwf	(___flge@ff1+3)^0,c
  2924   0039E4                     l4572:
  2925   0039E4  0E00               	movlw	0
  2926   0039E6  1405               	andwf	___flge@ff2^0,w,c
  2927   0039E8  6E09               	movwf	??___flge^0,c
  2928   0039EA  0E00               	movlw	0
  2929   0039EC  1406               	andwf	(___flge@ff2+1)^0,w,c
  2930   0039EE  6E0A               	movwf	(??___flge+1)^0,c
  2931   0039F0  0E80               	movlw	128
  2932   0039F2  1407               	andwf	(___flge@ff2+2)^0,w,c
  2933   0039F4  6E0B               	movwf	(??___flge+2)^0,c
  2934   0039F6  0E7F               	movlw	127
  2935   0039F8  1408               	andwf	(___flge@ff2+3)^0,w,c
  2936   0039FA  6E0C               	movwf	(??___flge+3)^0,c
  2937   0039FC  5009               	movf	??___flge^0,w,c
  2938   0039FE  100A               	iorwf	(??___flge+1)^0,w,c
  2939   003A00  100B               	iorwf	(??___flge+2)^0,w,c
  2940   003A02  100C               	iorwf	(??___flge+3)^0,w,c
  2941   003A04  A4D8               	btfss	status,2,c
  2942   003A06  EF07  F01D         	goto	u4531
  2943   003A0A  EF09  F01D         	goto	u4530
  2944   003A0E                     u4531:
  2945   003A0E  EF11  F01D         	goto	l4576
  2946   003A12                     u4530:
  2947   003A12  0E00               	movlw	0
  2948   003A14  6E05               	movwf	___flge@ff2^0,c
  2949   003A16  0E00               	movlw	0
  2950   003A18  6E06               	movwf	(___flge@ff2+1)^0,c
  2951   003A1A  0E00               	movlw	0
  2952   003A1C  6E07               	movwf	(___flge@ff2+2)^0,c
  2953   003A1E  0E00               	movlw	0
  2954   003A20  6E08               	movwf	(___flge@ff2+3)^0,c
  2955   003A22                     l4576:
  2956   003A22  AE04               	btfss	(___flge@ff1+3)^0,7,c
  2957   003A24  EF16  F01D         	goto	u4541
  2958   003A28  EF18  F01D         	goto	u4540
  2959   003A2C                     u4541:
  2960   003A2C  EF21  F01D         	goto	l4580
  2961   003A30                     u4540:
  2962   003A30  6C01               	negf	___flge@ff1^0,c
  2963   003A32  1E02               	comf	(___flge@ff1+1)^0,f,c
  2964   003A34  B0D8               	btfsc	status,0,c
  2965   003A36  2A02               	incf	(___flge@ff1+1)^0,f,c
  2966   003A38  1E03               	comf	(___flge@ff1+2)^0,f,c
  2967   003A3A  B0D8               	btfsc	status,0,c
  2968   003A3C  2A03               	incf	(___flge@ff1+2)^0,f,c
  2969   003A3E  0E80               	movlw	128
  2970   003A40  5604               	subfwb	(___flge@ff1+3)^0,f,c
  2971   003A42                     l4580:
  2972   003A42  AE08               	btfss	(___flge@ff2+3)^0,7,c
  2973   003A44  EF26  F01D         	goto	u4551
  2974   003A48  EF28  F01D         	goto	u4550
  2975   003A4C                     u4551:
  2976   003A4C  EF31  F01D         	goto	l941
  2977   003A50                     u4550:
  2978   003A50  6C05               	negf	___flge@ff2^0,c
  2979   003A52  1E06               	comf	(___flge@ff2+1)^0,f,c
  2980   003A54  B0D8               	btfsc	status,0,c
  2981   003A56  2A06               	incf	(___flge@ff2+1)^0,f,c
  2982   003A58  1E07               	comf	(___flge@ff2+2)^0,f,c
  2983   003A5A  B0D8               	btfsc	status,0,c
  2984   003A5C  2A07               	incf	(___flge@ff2+2)^0,f,c
  2985   003A5E  0E80               	movlw	128
  2986   003A60  5608               	subfwb	(___flge@ff2+3)^0,f,c
  2987   003A62                     l941:
  2988   003A62  0E00               	movlw	0
  2989   003A64  1A01               	xorwf	___flge@ff1^0,f,c
  2990   003A66  0E00               	movlw	0
  2991   003A68  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  2992   003A6A  0E00               	movlw	0
  2993   003A6C  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  2994   003A6E  0E80               	movlw	128
  2995   003A70  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  2996   003A72  0E00               	movlw	0
  2997   003A74  1A05               	xorwf	___flge@ff2^0,f,c
  2998   003A76  0E00               	movlw	0
  2999   003A78  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  3000   003A7A  0E00               	movlw	0
  3001   003A7C  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  3002   003A7E  0E80               	movlw	128
  3003   003A80  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  3004   003A82  5005               	movf	___flge@ff2^0,w,c
  3005   003A84  5C01               	subwf	___flge@ff1^0,w,c
  3006   003A86  5006               	movf	(___flge@ff2+1)^0,w,c
  3007   003A88  5802               	subwfb	(___flge@ff1+1)^0,w,c
  3008   003A8A  5007               	movf	(___flge@ff2+2)^0,w,c
  3009   003A8C  5803               	subwfb	(___flge@ff1+2)^0,w,c
  3010   003A8E  5008               	movf	(___flge@ff2+3)^0,w,c
  3011   003A90  5804               	subwfb	(___flge@ff1+3)^0,w,c
  3012   003A92  B0D8               	btfsc	status,0,c
  3013   003A94  EF4E  F01D         	goto	u4561
  3014   003A98  EF50  F01D         	goto	u4560
  3015   003A9C                     u4561:
  3016   003A9C  EF53  F01D         	goto	l4586
  3017   003AA0                     u4560:
  3018   003AA0  90D8               	bcf	status,0,c
  3019   003AA2  EF54  F01D         	goto	l946
  3020   003AA6                     l4586:
  3021   003AA6  80D8               	bsf	status,0,c
  3022   003AA8                     l946:
  3023   003AA8  0012               	return		;funcret
  3024   003AAA                     __end_of___flge:
  3025                           	callstack 0
  3026                           
  3027 ;; *************** function ___fldiv *****************
  3028 ;; Defined at:
  3029 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  b               4   39[COMRAM] unsigned char 
  3032 ;;  a               4   43[COMRAM] unsigned char 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  grs             4   58[COMRAM] unsigned long 
  3035 ;;  rem             4   51[COMRAM] unsigned long 
  3036 ;;  new_exp         2   56[COMRAM] short 
  3037 ;;  aexp            1   63[COMRAM] unsigned char 
  3038 ;;  bexp            1   62[COMRAM] unsigned char 
  3039 ;;  sign            1   55[COMRAM] unsigned char 
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  4   39[COMRAM] unsigned char 
  3042 ;; Registers used:
  3043 ;;		wreg, status,2, status,0
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3049 ;;      Params:         8       0       0       0       0       0       0       0       0
  3050 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3051 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3052 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3053 ;;Total ram usage:       25 bytes
  3054 ;; Hardware stack levels used: 1
  3055 ;; Hardware stack levels required when called: 1
  3056 ;; This function calls:
  3057 ;;		Nothing
  3058 ;; This function is called by:
  3059 ;;		_USART_init
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text6
  3064   002348                     __ptext6:
  3065                           	callstack 0
  3066   002348                     ___fldiv:
  3067                           	callstack 28
  3068   002348  502B               	movf	(___fldiv@b+3)^0,w,c
  3069   00234A  0B80               	andlw	128
  3070   00234C  6E38               	movwf	___fldiv@sign^0,c
  3071   00234E  502B               	movf	(___fldiv@b+3)^0,w,c
  3072   002350  242B               	addwf	(___fldiv@b+3)^0,w,c
  3073   002352  6E3F               	movwf	___fldiv@bexp^0,c
  3074   002354  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  3075   002356  EFAF  F011         	goto	u3981
  3076   00235A  EFB1  F011         	goto	u3980
  3077   00235E                     u3981:
  3078   00235E  EFB2  F011         	goto	l4226
  3079   002362                     u3980:
  3080   002362  803F               	bsf	___fldiv@bexp^0,0,c
  3081   002364                     l4226:
  3082   002364  503F               	movf	___fldiv@bexp^0,w,c
  3083   002366  B4D8               	btfsc	status,2,c
  3084   002368  EFB8  F011         	goto	u3991
  3085   00236C  EFBA  F011         	goto	u3990
  3086   002370                     u3991:
  3087   002370  EFCF  F011         	goto	l4236
  3088   002374                     u3990:
  3089   002374  283F               	incf	___fldiv@bexp^0,w,c
  3090   002376  A4D8               	btfss	status,2,c
  3091   002378  EFC0  F011         	goto	u4001
  3092   00237C  EFC2  F011         	goto	u4000
  3093   002380                     u4001:
  3094   002380  EFCA  F011         	goto	l4232
  3095   002384                     u4000:
  3096   002384  0E00               	movlw	0
  3097   002386  6E28               	movwf	___fldiv@b^0,c
  3098   002388  0E00               	movlw	0
  3099   00238A  6E29               	movwf	(___fldiv@b+1)^0,c
  3100   00238C  0E00               	movlw	0
  3101   00238E  6E2A               	movwf	(___fldiv@b+2)^0,c
  3102   002390  0E00               	movlw	0
  3103   002392  6E2B               	movwf	(___fldiv@b+3)^0,c
  3104   002394                     l4232:
  3105   002394  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  3106   002396  0E00               	movlw	0
  3107   002398  6E2B               	movwf	(___fldiv@b+3)^0,c
  3108   00239A  EFD7  F011         	goto	l4238
  3109   00239E                     l4236:
  3110   00239E  0E00               	movlw	0
  3111   0023A0  6E28               	movwf	___fldiv@b^0,c
  3112   0023A2  0E00               	movlw	0
  3113   0023A4  6E29               	movwf	(___fldiv@b+1)^0,c
  3114   0023A6  0E00               	movlw	0
  3115   0023A8  6E2A               	movwf	(___fldiv@b+2)^0,c
  3116   0023AA  0E00               	movlw	0
  3117   0023AC  6E2B               	movwf	(___fldiv@b+3)^0,c
  3118   0023AE                     l4238:
  3119   0023AE  502F               	movf	(___fldiv@a+3)^0,w,c
  3120   0023B0  0B80               	andlw	128
  3121   0023B2  1A38               	xorwf	___fldiv@sign^0,f,c
  3122   0023B4  502F               	movf	(___fldiv@a+3)^0,w,c
  3123   0023B6  242F               	addwf	(___fldiv@a+3)^0,w,c
  3124   0023B8  6E40               	movwf	___fldiv@aexp^0,c
  3125   0023BA  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  3126   0023BC  EFE2  F011         	goto	u4011
  3127   0023C0  EFE4  F011         	goto	u4010
  3128   0023C4                     u4011:
  3129   0023C4  EFE5  F011         	goto	l4246
  3130   0023C8                     u4010:
  3131   0023C8  8040               	bsf	___fldiv@aexp^0,0,c
  3132   0023CA                     l4246:
  3133   0023CA  5040               	movf	___fldiv@aexp^0,w,c
  3134   0023CC  B4D8               	btfsc	status,2,c
  3135   0023CE  EFEB  F011         	goto	u4021
  3136   0023D2  EFED  F011         	goto	u4020
  3137   0023D6                     u4021:
  3138   0023D6  EF02  F012         	goto	l4256
  3139   0023DA                     u4020:
  3140   0023DA  2840               	incf	___fldiv@aexp^0,w,c
  3141   0023DC  A4D8               	btfss	status,2,c
  3142   0023DE  EFF3  F011         	goto	u4031
  3143   0023E2  EFF5  F011         	goto	u4030
  3144   0023E6                     u4031:
  3145   0023E6  EFFD  F011         	goto	l4252
  3146   0023EA                     u4030:
  3147   0023EA  0E00               	movlw	0
  3148   0023EC  6E2C               	movwf	___fldiv@a^0,c
  3149   0023EE  0E00               	movlw	0
  3150   0023F0  6E2D               	movwf	(___fldiv@a+1)^0,c
  3151   0023F2  0E00               	movlw	0
  3152   0023F4  6E2E               	movwf	(___fldiv@a+2)^0,c
  3153   0023F6  0E00               	movlw	0
  3154   0023F8  6E2F               	movwf	(___fldiv@a+3)^0,c
  3155   0023FA                     l4252:
  3156   0023FA  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  3157   0023FC  0E00               	movlw	0
  3158   0023FE  6E2F               	movwf	(___fldiv@a+3)^0,c
  3159   002400  EF0A  F012         	goto	l4258
  3160   002404                     l4256:
  3161   002404  0E00               	movlw	0
  3162   002406  6E2C               	movwf	___fldiv@a^0,c
  3163   002408  0E00               	movlw	0
  3164   00240A  6E2D               	movwf	(___fldiv@a+1)^0,c
  3165   00240C  0E00               	movlw	0
  3166   00240E  6E2E               	movwf	(___fldiv@a+2)^0,c
  3167   002410  0E00               	movlw	0
  3168   002412  6E2F               	movwf	(___fldiv@a+3)^0,c
  3169   002414                     l4258:
  3170   002414  502C               	movf	___fldiv@a^0,w,c
  3171   002416  102D               	iorwf	(___fldiv@a+1)^0,w,c
  3172   002418  102E               	iorwf	(___fldiv@a+2)^0,w,c
  3173   00241A  102F               	iorwf	(___fldiv@a+3)^0,w,c
  3174   00241C  A4D8               	btfss	status,2,c
  3175   00241E  EF13  F012         	goto	u4041
  3176   002422  EF15  F012         	goto	u4040
  3177   002426                     u4041:
  3178   002426  EF2D  F012         	goto	l4270
  3179   00242A                     u4040:
  3180   00242A  0E00               	movlw	0
  3181   00242C  6E28               	movwf	___fldiv@b^0,c
  3182   00242E  0E00               	movlw	0
  3183   002430  6E29               	movwf	(___fldiv@b+1)^0,c
  3184   002432  0E00               	movlw	0
  3185   002434  6E2A               	movwf	(___fldiv@b+2)^0,c
  3186   002436  0E00               	movlw	0
  3187   002438  6E2B               	movwf	(___fldiv@b+3)^0,c
  3188   00243A  0E80               	movlw	128
  3189   00243C  122A               	iorwf	(___fldiv@b+2)^0,f,c
  3190   00243E  0E7F               	movlw	127
  3191   002440  122B               	iorwf	(___fldiv@b+3)^0,f,c
  3192   002442                     l4264:
  3193   002442  5038               	movf	___fldiv@sign^0,w,c
  3194   002444  122B               	iorwf	(___fldiv@b+3)^0,f,c
  3195   002446  C028  F028         	movff	___fldiv@b,?___fldiv
  3196   00244A  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  3197   00244E  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  3198   002452  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  3199   002456  EF70  F013         	goto	l1258
  3200   00245A                     l4270:
  3201   00245A  503F               	movf	___fldiv@bexp^0,w,c
  3202   00245C  A4D8               	btfss	status,2,c
  3203   00245E  EF33  F012         	goto	u4051
  3204   002462  EF35  F012         	goto	u4050
  3205   002466                     u4051:
  3206   002466  EF3F  F012         	goto	l4278
  3207   00246A                     u4050:
  3208   00246A  0E00               	movlw	0
  3209   00246C  6E28               	movwf	?___fldiv^0,c
  3210   00246E  0E00               	movlw	0
  3211   002470  6E29               	movwf	(?___fldiv+1)^0,c
  3212   002472  0E00               	movlw	0
  3213   002474  6E2A               	movwf	(?___fldiv+2)^0,c
  3214   002476  0E00               	movlw	0
  3215   002478  6E2B               	movwf	(?___fldiv+3)^0,c
  3216   00247A  EF70  F013         	goto	l1258
  3217   00247E                     l4278:
  3218   00247E  5040               	movf	___fldiv@aexp^0,w,c
  3219   002480  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  3220   002484  6A31               	clrf	(??___fldiv+1)^0,c
  3221   002486  5E30               	subwf	??___fldiv^0,f,c
  3222   002488  0E00               	movlw	0
  3223   00248A  5A31               	subwfb	(??___fldiv+1)^0,f,c
  3224   00248C  0E7F               	movlw	127
  3225   00248E  2430               	addwf	??___fldiv^0,w,c
  3226   002490  6E39               	movwf	___fldiv@new_exp^0,c
  3227   002492  0E00               	movlw	0
  3228   002494  2031               	addwfc	(??___fldiv+1)^0,w,c
  3229   002496  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  3230   002498  C028  F034         	movff	___fldiv@b,___fldiv@rem
  3231   00249C  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  3232   0024A0  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  3233   0024A4  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  3234   0024A8  0E00               	movlw	0
  3235   0024AA  6E28               	movwf	___fldiv@b^0,c
  3236   0024AC  0E00               	movlw	0
  3237   0024AE  6E29               	movwf	(___fldiv@b+1)^0,c
  3238   0024B0  0E00               	movlw	0
  3239   0024B2  6E2A               	movwf	(___fldiv@b+2)^0,c
  3240   0024B4  0E00               	movlw	0
  3241   0024B6  6E2B               	movwf	(___fldiv@b+3)^0,c
  3242   0024B8  0E00               	movlw	0
  3243   0024BA  6E3B               	movwf	___fldiv@grs^0,c
  3244   0024BC  0E00               	movlw	0
  3245   0024BE  6E3C               	movwf	(___fldiv@grs+1)^0,c
  3246   0024C0  0E00               	movlw	0
  3247   0024C2  6E3D               	movwf	(___fldiv@grs+2)^0,c
  3248   0024C4  0E00               	movlw	0
  3249   0024C6  6E3E               	movwf	(___fldiv@grs+3)^0,c
  3250   0024C8  0E00               	movlw	0
  3251   0024CA  6E40               	movwf	___fldiv@aexp^0,c
  3252   0024CC  EFA0  F012         	goto	l1260
  3253   0024D0                     l4288:
  3254   0024D0  5040               	movf	___fldiv@aexp^0,w,c
  3255   0024D2  B4D8               	btfsc	status,2,c
  3256   0024D4  EF6E  F012         	goto	u4061
  3257   0024D8  EF70  F012         	goto	u4060
  3258   0024DC                     u4061:
  3259   0024DC  EF87  F012         	goto	l4296
  3260   0024E0                     u4060:
  3261   0024E0  90D8               	bcf	status,0,c
  3262   0024E2  3634               	rlcf	___fldiv@rem^0,f,c
  3263   0024E4  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  3264   0024E6  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  3265   0024E8  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  3266   0024EA  90D8               	bcf	status,0,c
  3267   0024EC  3628               	rlcf	___fldiv@b^0,f,c
  3268   0024EE  3629               	rlcf	(___fldiv@b+1)^0,f,c
  3269   0024F0  362A               	rlcf	(___fldiv@b+2)^0,f,c
  3270   0024F2  362B               	rlcf	(___fldiv@b+3)^0,f,c
  3271   0024F4  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  3272   0024F6  EF7F  F012         	goto	u4071
  3273   0024FA  EF81  F012         	goto	u4070
  3274   0024FE                     u4071:
  3275   0024FE  EF82  F012         	goto	l1263
  3276   002502                     u4070:
  3277   002502  8028               	bsf	___fldiv@b^0,0,c
  3278   002504                     l1263:
  3279   002504  90D8               	bcf	status,0,c
  3280   002506  363B               	rlcf	___fldiv@grs^0,f,c
  3281   002508  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  3282   00250A  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  3283   00250C  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  3284   00250E                     l4296:
  3285   00250E  502C               	movf	___fldiv@a^0,w,c
  3286   002510  5C34               	subwf	___fldiv@rem^0,w,c
  3287   002512  502D               	movf	(___fldiv@a+1)^0,w,c
  3288   002514  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  3289   002516  502E               	movf	(___fldiv@a+2)^0,w,c
  3290   002518  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  3291   00251A  502F               	movf	(___fldiv@a+3)^0,w,c
  3292   00251C  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  3293   00251E  A0D8               	btfss	status,0,c
  3294   002520  EF94  F012         	goto	u4081
  3295   002524  EF96  F012         	goto	u4080
  3296   002528                     u4081:
  3297   002528  EF9F  F012         	goto	l4302
  3298   00252C                     u4080:
  3299   00252C  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  3300   00252E  502C               	movf	___fldiv@a^0,w,c
  3301   002530  5E34               	subwf	___fldiv@rem^0,f,c
  3302   002532  502D               	movf	(___fldiv@a+1)^0,w,c
  3303   002534  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  3304   002536  502E               	movf	(___fldiv@a+2)^0,w,c
  3305   002538  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  3306   00253A  502F               	movf	(___fldiv@a+3)^0,w,c
  3307   00253C  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  3308   00253E                     l4302:
  3309   00253E  2A40               	incf	___fldiv@aexp^0,f,c
  3310   002540                     l1260:
  3311   002540  0E19               	movlw	25
  3312   002542  6440               	cpfsgt	___fldiv@aexp^0,c
  3313   002544  EFA6  F012         	goto	u4091
  3314   002548  EFA8  F012         	goto	u4090
  3315   00254C                     u4091:
  3316   00254C  EF68  F012         	goto	l4288
  3317   002550                     u4090:
  3318   002550  5034               	movf	___fldiv@rem^0,w,c
  3319   002552  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  3320   002554  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  3321   002556  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  3322   002558  B4D8               	btfsc	status,2,c
  3323   00255A  EFB1  F012         	goto	u4101
  3324   00255E  EFB3  F012         	goto	u4100
  3325   002562                     u4101:
  3326   002562  EFCB  F012         	goto	l4314
  3327   002566                     u4100:
  3328   002566  803B               	bsf	___fldiv@grs^0,0,c
  3329   002568  EFCB  F012         	goto	l4314
  3330   00256C                     l4308:
  3331   00256C  90D8               	bcf	status,0,c
  3332   00256E  3628               	rlcf	___fldiv@b^0,f,c
  3333   002570  3629               	rlcf	(___fldiv@b+1)^0,f,c
  3334   002572  362A               	rlcf	(___fldiv@b+2)^0,f,c
  3335   002574  362B               	rlcf	(___fldiv@b+3)^0,f,c
  3336   002576  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  3337   002578  EFC0  F012         	goto	u4111
  3338   00257C  EFC2  F012         	goto	u4110
  3339   002580                     u4111:
  3340   002580  EFC3  F012         	goto	l1269
  3341   002584                     u4110:
  3342   002584  8028               	bsf	___fldiv@b^0,0,c
  3343   002586                     l1269:
  3344   002586  90D8               	bcf	status,0,c
  3345   002588  363B               	rlcf	___fldiv@grs^0,f,c
  3346   00258A  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  3347   00258C  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  3348   00258E  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  3349   002590  0639               	decf	___fldiv@new_exp^0,f,c
  3350   002592  A0D8               	btfss	status,0,c
  3351   002594  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  3352   002596                     l4314:
  3353   002596  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  3354   002598  EFD0  F012         	goto	u4121
  3355   00259C  EFD2  F012         	goto	u4120
  3356   0025A0                     u4121:
  3357   0025A0  EFB6  F012         	goto	l4308
  3358   0025A4                     u4120:
  3359   0025A4  0E00               	movlw	0
  3360   0025A6  6E40               	movwf	___fldiv@aexp^0,c
  3361   0025A8  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  3362   0025AA  EFD9  F012         	goto	u4131
  3363   0025AE  EFDB  F012         	goto	u4130
  3364   0025B2                     u4131:
  3365   0025B2  EFFF  F012         	goto	l1271
  3366   0025B6                     u4130:
  3367   0025B6  0EFF               	movlw	255
  3368   0025B8  143B               	andwf	___fldiv@grs^0,w,c
  3369   0025BA  6E30               	movwf	??___fldiv^0,c
  3370   0025BC  0EFF               	movlw	255
  3371   0025BE  143C               	andwf	(___fldiv@grs+1)^0,w,c
  3372   0025C0  6E31               	movwf	(??___fldiv+1)^0,c
  3373   0025C2  0EFF               	movlw	255
  3374   0025C4  143D               	andwf	(___fldiv@grs+2)^0,w,c
  3375   0025C6  6E32               	movwf	(??___fldiv+2)^0,c
  3376   0025C8  0E7F               	movlw	127
  3377   0025CA  143E               	andwf	(___fldiv@grs+3)^0,w,c
  3378   0025CC  6E33               	movwf	(??___fldiv+3)^0,c
  3379   0025CE  5030               	movf	??___fldiv^0,w,c
  3380   0025D0  1031               	iorwf	(??___fldiv+1)^0,w,c
  3381   0025D2  1032               	iorwf	(??___fldiv+2)^0,w,c
  3382   0025D4  1033               	iorwf	(??___fldiv+3)^0,w,c
  3383   0025D6  B4D8               	btfsc	status,2,c
  3384   0025D8  EFF0  F012         	goto	u4141
  3385   0025DC  EFF2  F012         	goto	u4140
  3386   0025E0                     u4141:
  3387   0025E0  EFF6  F012         	goto	l1272
  3388   0025E4                     u4140:
  3389   0025E4                     l4322:
  3390   0025E4  0E01               	movlw	1
  3391   0025E6  6E40               	movwf	___fldiv@aexp^0,c
  3392   0025E8  EFFF  F012         	goto	l1271
  3393   0025EC                     l1272:
  3394   0025EC  A028               	btfss	___fldiv@b^0,0,c
  3395   0025EE  EFFB  F012         	goto	u4151
  3396   0025F2  EFFD  F012         	goto	u4150
  3397   0025F6                     u4151:
  3398   0025F6  EFFF  F012         	goto	l1271
  3399   0025FA                     u4150:
  3400   0025FA  EFF2  F012         	goto	l4322
  3401   0025FE                     l1271:
  3402   0025FE  5040               	movf	___fldiv@aexp^0,w,c
  3403   002600  B4D8               	btfsc	status,2,c
  3404   002602  EF05  F013         	goto	u4161
  3405   002606  EF07  F013         	goto	u4160
  3406   00260A                     u4161:
  3407   00260A  EF2B  F013         	goto	l4334
  3408   00260E                     u4160:
  3409   00260E  0E01               	movlw	1
  3410   002610  2628               	addwf	___fldiv@b^0,f,c
  3411   002612  0E00               	movlw	0
  3412   002614  2229               	addwfc	(___fldiv@b+1)^0,f,c
  3413   002616  222A               	addwfc	(___fldiv@b+2)^0,f,c
  3414   002618  222B               	addwfc	(___fldiv@b+3)^0,f,c
  3415   00261A  A02B               	btfss	(___fldiv@b+3)^0,0,c
  3416   00261C  EF12  F013         	goto	u4171
  3417   002620  EF14  F013         	goto	u4170
  3418   002624                     u4171:
  3419   002624  EF2B  F013         	goto	l4334
  3420   002628                     u4170:
  3421   002628  C028  F030         	movff	___fldiv@b,??___fldiv
  3422   00262C  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  3423   002630  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  3424   002634  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  3425   002638  3433               	rlcf	(??___fldiv+3)^0,w,c
  3426   00263A  3233               	rrcf	(??___fldiv+3)^0,f,c
  3427   00263C  3232               	rrcf	(??___fldiv+2)^0,f,c
  3428   00263E  3231               	rrcf	(??___fldiv+1)^0,f,c
  3429   002640  3230               	rrcf	??___fldiv^0,f,c
  3430   002642  C030  F028         	movff	??___fldiv,___fldiv@b
  3431   002646  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  3432   00264A  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  3433   00264E  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  3434   002652  4A39               	infsnz	___fldiv@new_exp^0,f,c
  3435   002654  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  3436   002656                     l4334:
  3437   002656  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3438   002658  EF36  F013         	goto	u4181
  3439   00265C  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  3440   00265E  E108               	bnz	u4180
  3441   002660  2839               	incf	___fldiv@new_exp^0,w,c
  3442   002662  A0D8               	btfss	status,0,c
  3443   002664  EF36  F013         	goto	u4181
  3444   002668  EF38  F013         	goto	u4180
  3445   00266C                     u4181:
  3446   00266C  EF43  F013         	goto	l4338
  3447   002670                     u4180:
  3448   002670  0E00               	movlw	0
  3449   002672  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  3450   002674  6839               	setf	___fldiv@new_exp^0,c
  3451   002676  0E00               	movlw	0
  3452   002678  6E28               	movwf	___fldiv@b^0,c
  3453   00267A  0E00               	movlw	0
  3454   00267C  6E29               	movwf	(___fldiv@b+1)^0,c
  3455   00267E  0E00               	movlw	0
  3456   002680  6E2A               	movwf	(___fldiv@b+2)^0,c
  3457   002682  0E00               	movlw	0
  3458   002684  6E2B               	movwf	(___fldiv@b+3)^0,c
  3459   002686                     l4338:
  3460   002686  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3461   002688  EF50  F013         	goto	u4190
  3462   00268C  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  3463   00268E  E106               	bnz	u4191
  3464   002690  0439               	decf	___fldiv@new_exp^0,w,c
  3465   002692  B0D8               	btfsc	status,0,c
  3466   002694  EF4E  F013         	goto	u4191
  3467   002698  EF50  F013         	goto	u4190
  3468   00269C                     u4191:
  3469   00269C  EF5E  F013         	goto	l4342
  3470   0026A0                     u4190:
  3471   0026A0  0E00               	movlw	0
  3472   0026A2  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  3473   0026A4  0E00               	movlw	0
  3474   0026A6  6E39               	movwf	___fldiv@new_exp^0,c
  3475   0026A8  0E00               	movlw	0
  3476   0026AA  6E28               	movwf	___fldiv@b^0,c
  3477   0026AC  0E00               	movlw	0
  3478   0026AE  6E29               	movwf	(___fldiv@b+1)^0,c
  3479   0026B0  0E00               	movlw	0
  3480   0026B2  6E2A               	movwf	(___fldiv@b+2)^0,c
  3481   0026B4  0E00               	movlw	0
  3482   0026B6  6E2B               	movwf	(___fldiv@b+3)^0,c
  3483   0026B8  0E00               	movlw	0
  3484   0026BA  6E38               	movwf	___fldiv@sign^0,c
  3485   0026BC                     l4342:
  3486   0026BC  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  3487   0026C0  A03F               	btfss	___fldiv@bexp^0,0,c
  3488   0026C2  EF65  F013         	goto	u4201
  3489   0026C6  EF67  F013         	goto	u4200
  3490   0026CA                     u4201:
  3491   0026CA  EF6A  F013         	goto	l4348
  3492   0026CE                     u4200:
  3493   0026CE  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  3494   0026D0  EF6B  F013         	goto	l4350
  3495   0026D4                     l4348:
  3496   0026D4  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  3497   0026D6                     l4350:
  3498   0026D6  90D8               	bcf	status,0,c
  3499   0026D8  303F               	rrcf	___fldiv@bexp^0,w,c
  3500   0026DA  6E2B               	movwf	(___fldiv@b+3)^0,c
  3501   0026DC  EF21  F012         	goto	l4264
  3502   0026E0                     l1258:
  3503   0026E0  0012               	return		;funcret
  3504   0026E2                     __end_of___fldiv:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function ___fladd *****************
  3508 ;; Defined at:
  3509 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  b               4   64[COMRAM] unsigned char 
  3512 ;;  a               4   68[COMRAM] unsigned char 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  grs             1   79[COMRAM] unsigned char 
  3515 ;;  bexp            1   78[COMRAM] unsigned char 
  3516 ;;  aexp            1   77[COMRAM] unsigned char 
  3517 ;;  signs           1   76[COMRAM] unsigned char 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  4   64[COMRAM] unsigned char 
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, status,0
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3527 ;;      Params:         8       0       0       0       0       0       0       0       0
  3528 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3529 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3530 ;;      Totals:        16       0       0       0       0       0       0       0       0
  3531 ;;Total ram usage:       16 bytes
  3532 ;; Hardware stack levels used: 1
  3533 ;; Hardware stack levels required when called: 1
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_USART_init
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text7
  3542   000DCA                     __ptext7:
  3543                           	callstack 0
  3544   000DCA                     ___fladd:
  3545                           	callstack 28
  3546   000DCA  5044               	movf	(___fladd@b+3)^0,w,c
  3547   000DCC  0B80               	andlw	128
  3548   000DCE  6E4D               	movwf	___fladd@signs^0,c
  3549   000DD0  5044               	movf	(___fladd@b+3)^0,w,c
  3550   000DD2  2444               	addwf	(___fladd@b+3)^0,w,c
  3551   000DD4  6E4F               	movwf	___fladd@bexp^0,c
  3552   000DD6  AE43               	btfss	(___fladd@b+2)^0,7,c
  3553   000DD8  EFF0  F006         	goto	u3591
  3554   000DDC  EFF2  F006         	goto	u3590
  3555   000DE0                     u3591:
  3556   000DE0  EFF3  F006         	goto	l4024
  3557   000DE4                     u3590:
  3558   000DE4  804F               	bsf	___fladd@bexp^0,0,c
  3559   000DE6                     l4024:
  3560   000DE6  504F               	movf	___fladd@bexp^0,w,c
  3561   000DE8  B4D8               	btfsc	status,2,c
  3562   000DEA  EFF9  F006         	goto	u3601
  3563   000DEE  EFFB  F006         	goto	u3600
  3564   000DF2                     u3601:
  3565   000DF2  EF10  F007         	goto	l4034
  3566   000DF6                     u3600:
  3567   000DF6  284F               	incf	___fladd@bexp^0,w,c
  3568   000DF8  A4D8               	btfss	status,2,c
  3569   000DFA  EF01  F007         	goto	u3611
  3570   000DFE  EF03  F007         	goto	u3610
  3571   000E02                     u3611:
  3572   000E02  EF0B  F007         	goto	l4030
  3573   000E06                     u3610:
  3574   000E06  0E00               	movlw	0
  3575   000E08  6E41               	movwf	___fladd@b^0,c
  3576   000E0A  0E00               	movlw	0
  3577   000E0C  6E42               	movwf	(___fladd@b+1)^0,c
  3578   000E0E  0E00               	movlw	0
  3579   000E10  6E43               	movwf	(___fladd@b+2)^0,c
  3580   000E12  0E00               	movlw	0
  3581   000E14  6E44               	movwf	(___fladd@b+3)^0,c
  3582   000E16                     l4030:
  3583   000E16  8E43               	bsf	(___fladd@b+2)^0,7,c
  3584   000E18  0E00               	movlw	0
  3585   000E1A  6E44               	movwf	(___fladd@b+3)^0,c
  3586   000E1C  EF18  F007         	goto	l4036
  3587   000E20                     l4034:
  3588   000E20  0E00               	movlw	0
  3589   000E22  6E41               	movwf	___fladd@b^0,c
  3590   000E24  0E00               	movlw	0
  3591   000E26  6E42               	movwf	(___fladd@b+1)^0,c
  3592   000E28  0E00               	movlw	0
  3593   000E2A  6E43               	movwf	(___fladd@b+2)^0,c
  3594   000E2C  0E00               	movlw	0
  3595   000E2E  6E44               	movwf	(___fladd@b+3)^0,c
  3596   000E30                     l4036:
  3597   000E30  5048               	movf	(___fladd@a+3)^0,w,c
  3598   000E32  0B80               	andlw	128
  3599   000E34  6E4E               	movwf	___fladd@aexp^0,c
  3600   000E36  504D               	movf	___fladd@signs^0,w,c
  3601   000E38  184E               	xorwf	___fladd@aexp^0,w,c
  3602   000E3A  B4D8               	btfsc	status,2,c
  3603   000E3C  EF22  F007         	goto	u3621
  3604   000E40  EF24  F007         	goto	u3620
  3605   000E44                     u3621:
  3606   000E44  EF25  F007         	goto	l4042
  3607   000E48                     u3620:
  3608   000E48  8C4D               	bsf	___fladd@signs^0,6,c
  3609   000E4A                     l4042:
  3610   000E4A  5048               	movf	(___fladd@a+3)^0,w,c
  3611   000E4C  2448               	addwf	(___fladd@a+3)^0,w,c
  3612   000E4E  6E4E               	movwf	___fladd@aexp^0,c
  3613   000E50  AE47               	btfss	(___fladd@a+2)^0,7,c
  3614   000E52  EF2D  F007         	goto	u3631
  3615   000E56  EF2F  F007         	goto	u3630
  3616   000E5A                     u3631:
  3617   000E5A  EF30  F007         	goto	l4048
  3618   000E5E                     u3630:
  3619   000E5E  804E               	bsf	___fladd@aexp^0,0,c
  3620   000E60                     l4048:
  3621   000E60  504E               	movf	___fladd@aexp^0,w,c
  3622   000E62  B4D8               	btfsc	status,2,c
  3623   000E64  EF36  F007         	goto	u3641
  3624   000E68  EF38  F007         	goto	u3640
  3625   000E6C                     u3641:
  3626   000E6C  EF4D  F007         	goto	l4058
  3627   000E70                     u3640:
  3628   000E70  284E               	incf	___fladd@aexp^0,w,c
  3629   000E72  A4D8               	btfss	status,2,c
  3630   000E74  EF3E  F007         	goto	u3651
  3631   000E78  EF40  F007         	goto	u3650
  3632   000E7C                     u3651:
  3633   000E7C  EF48  F007         	goto	l4054
  3634   000E80                     u3650:
  3635   000E80  0E00               	movlw	0
  3636   000E82  6E45               	movwf	___fladd@a^0,c
  3637   000E84  0E00               	movlw	0
  3638   000E86  6E46               	movwf	(___fladd@a+1)^0,c
  3639   000E88  0E00               	movlw	0
  3640   000E8A  6E47               	movwf	(___fladd@a+2)^0,c
  3641   000E8C  0E00               	movlw	0
  3642   000E8E  6E48               	movwf	(___fladd@a+3)^0,c
  3643   000E90                     l4054:
  3644   000E90  8E47               	bsf	(___fladd@a+2)^0,7,c
  3645   000E92  0E00               	movlw	0
  3646   000E94  6E48               	movwf	(___fladd@a+3)^0,c
  3647   000E96  EF55  F007         	goto	l4060
  3648   000E9A                     l4058:
  3649   000E9A  0E00               	movlw	0
  3650   000E9C  6E45               	movwf	___fladd@a^0,c
  3651   000E9E  0E00               	movlw	0
  3652   000EA0  6E46               	movwf	(___fladd@a+1)^0,c
  3653   000EA2  0E00               	movlw	0
  3654   000EA4  6E47               	movwf	(___fladd@a+2)^0,c
  3655   000EA6  0E00               	movlw	0
  3656   000EA8  6E48               	movwf	(___fladd@a+3)^0,c
  3657   000EAA                     l4060:
  3658   000EAA  504F               	movf	___fladd@bexp^0,w,c
  3659   000EAC  5C4E               	subwf	___fladd@aexp^0,w,c
  3660   000EAE  B0D8               	btfsc	status,0,c
  3661   000EB0  EF5C  F007         	goto	u3661
  3662   000EB4  EF5E  F007         	goto	u3660
  3663   000EB8                     u3661:
  3664   000EB8  EF85  F007         	goto	l4096
  3665   000EBC                     u3660:
  3666   000EBC  AC4D               	btfss	___fladd@signs^0,6,c
  3667   000EBE  EF63  F007         	goto	u3671
  3668   000EC2  EF65  F007         	goto	u3670
  3669   000EC6                     u3671:
  3670   000EC6  EF67  F007         	goto	l4066
  3671   000ECA                     u3670:
  3672   000ECA  0E80               	movlw	128
  3673   000ECC  1A4D               	xorwf	___fladd@signs^0,f,c
  3674   000ECE                     l4066:
  3675   000ECE  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  3676   000ED2  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  3677   000ED6  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  3678   000EDA  C041  F050         	movff	___fladd@b,___fladd@grs
  3679   000EDE  C045  F041         	movff	___fladd@a,___fladd@b
  3680   000EE2  C050  F045         	movff	___fladd@grs,___fladd@a
  3681   000EE6  C042  F050         	movff	___fladd@b+1,___fladd@grs
  3682   000EEA  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  3683   000EEE  C050  F046         	movff	___fladd@grs,___fladd@a+1
  3684   000EF2  C043  F050         	movff	___fladd@b+2,___fladd@grs
  3685   000EF6  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  3686   000EFA  C050  F047         	movff	___fladd@grs,___fladd@a+2
  3687   000EFE  C044  F050         	movff	___fladd@b+3,___fladd@grs
  3688   000F02  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  3689   000F06  C050  F048         	movff	___fladd@grs,___fladd@a+3
  3690   000F0A                     l4096:
  3691   000F0A  0E00               	movlw	0
  3692   000F0C  6E50               	movwf	___fladd@grs^0,c
  3693   000F0E  504F               	movf	___fladd@bexp^0,w,c
  3694   000F10  C04E  F049         	movff	___fladd@aexp,??___fladd
  3695   000F14  6A4A               	clrf	(??___fladd+1)^0,c
  3696   000F16  5E49               	subwf	??___fladd^0,f,c
  3697   000F18  0E00               	movlw	0
  3698   000F1A  5A4A               	subwfb	(??___fladd+1)^0,f,c
  3699   000F1C  BE4A               	btfsc	(??___fladd+1)^0,7,c
  3700   000F1E  EF9A  F007         	goto	u3681
  3701   000F22  504A               	movf	(??___fladd+1)^0,w,c
  3702   000F24  E109               	bnz	u3680
  3703   000F26  0E1A               	movlw	26
  3704   000F28  5C49               	subwf	??___fladd^0,w,c
  3705   000F2A  A0D8               	btfss	status,0,c
  3706   000F2C  EF9A  F007         	goto	u3681
  3707   000F30  EF9C  F007         	goto	u3680
  3708   000F34                     u3681:
  3709   000F34  EFD3  F007         	goto	l1205
  3710   000F38                     u3680:
  3711   000F38  5041               	movf	___fladd@b^0,w,c
  3712   000F3A  1042               	iorwf	(___fladd@b+1)^0,w,c
  3713   000F3C  1043               	iorwf	(___fladd@b+2)^0,w,c
  3714   000F3E  1044               	iorwf	(___fladd@b+3)^0,w,c
  3715   000F40  A4D8               	btfss	status,2,c
  3716   000F42  EFA5  F007         	goto	u3691
  3717   000F46  EFA8  F007         	goto	u3690
  3718   000F4A                     u3691:
  3719   000F4A  0E01               	movlw	1
  3720   000F4C  EFA9  F007         	goto	u3700
  3721   000F50                     u3690:
  3722   000F50  0E00               	movlw	0
  3723   000F52                     u3700:
  3724   000F52  6E50               	movwf	___fladd@grs^0,c
  3725   000F54  0E00               	movlw	0
  3726   000F56  6E41               	movwf	___fladd@b^0,c
  3727   000F58  0E00               	movlw	0
  3728   000F5A  6E42               	movwf	(___fladd@b+1)^0,c
  3729   000F5C  0E00               	movlw	0
  3730   000F5E  6E43               	movwf	(___fladd@b+2)^0,c
  3731   000F60  0E00               	movlw	0
  3732   000F62  6E44               	movwf	(___fladd@b+3)^0,c
  3733   000F64  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  3734   000F68  EFDC  F007         	goto	l1204
  3735   000F6C                     l1206:
  3736   000F6C  A050               	btfss	___fladd@grs^0,0,c
  3737   000F6E  EFBB  F007         	goto	u3711
  3738   000F72  EFBD  F007         	goto	u3710
  3739   000F76                     u3711:
  3740   000F76  EFC3  F007         	goto	l4108
  3741   000F7A                     u3710:
  3742   000F7A  90D8               	bcf	status,0,c
  3743   000F7C  3050               	rrcf	___fladd@grs^0,w,c
  3744   000F7E  0901               	iorlw	1
  3745   000F80  6E50               	movwf	___fladd@grs^0,c
  3746   000F82  EFC5  F007         	goto	l4110
  3747   000F86                     l4108:
  3748   000F86  90D8               	bcf	status,0,c
  3749   000F88  3250               	rrcf	___fladd@grs^0,f,c
  3750   000F8A                     l4110:
  3751   000F8A  A041               	btfss	___fladd@b^0,0,c
  3752   000F8C  EFCA  F007         	goto	u3721
  3753   000F90  EFCC  F007         	goto	u3720
  3754   000F94                     u3721:
  3755   000F94  EFCD  F007         	goto	l4114
  3756   000F98                     u3720:
  3757   000F98  8E50               	bsf	___fladd@grs^0,7,c
  3758   000F9A                     l4114:
  3759   000F9A  3444               	rlcf	(___fladd@b+3)^0,w,c
  3760   000F9C  3244               	rrcf	(___fladd@b+3)^0,f,c
  3761   000F9E  3243               	rrcf	(___fladd@b+2)^0,f,c
  3762   000FA0  3242               	rrcf	(___fladd@b+1)^0,f,c
  3763   000FA2  3241               	rrcf	___fladd@b^0,f,c
  3764   000FA4  2A4F               	incf	___fladd@bexp^0,f,c
  3765   000FA6                     l1205:
  3766   000FA6  504E               	movf	___fladd@aexp^0,w,c
  3767   000FA8  5C4F               	subwf	___fladd@bexp^0,w,c
  3768   000FAA  A0D8               	btfss	status,0,c
  3769   000FAC  EFDA  F007         	goto	u3731
  3770   000FB0  EFDC  F007         	goto	u3730
  3771   000FB4                     u3731:
  3772   000FB4  EFB6  F007         	goto	l1206
  3773   000FB8                     u3730:
  3774   000FB8                     l1204:
  3775   000FB8  BC4D               	btfsc	___fladd@signs^0,6,c
  3776   000FBA  EFE1  F007         	goto	u3741
  3777   000FBE  EFE3  F007         	goto	u3740
  3778   000FC2                     u3741:
  3779   000FC2  EF23  F008         	goto	l4142
  3780   000FC6                     u3740:
  3781   000FC6  504F               	movf	___fladd@bexp^0,w,c
  3782   000FC8  A4D8               	btfss	status,2,c
  3783   000FCA  EFE9  F007         	goto	u3751
  3784   000FCE  EFEB  F007         	goto	u3750
  3785   000FD2                     u3751:
  3786   000FD2  EFF5  F007         	goto	l4124
  3787   000FD6                     u3750:
  3788   000FD6  0E00               	movlw	0
  3789   000FD8  6E41               	movwf	?___fladd^0,c
  3790   000FDA  0E00               	movlw	0
  3791   000FDC  6E42               	movwf	(?___fladd+1)^0,c
  3792   000FDE  0E00               	movlw	0
  3793   000FE0  6E43               	movwf	(?___fladd+2)^0,c
  3794   000FE2  0E00               	movlw	0
  3795   000FE4  6E44               	movwf	(?___fladd+3)^0,c
  3796   000FE6  EF44  F009         	goto	l1213
  3797   000FEA                     l4124:
  3798   000FEA  5045               	movf	___fladd@a^0,w,c
  3799   000FEC  2641               	addwf	___fladd@b^0,f,c
  3800   000FEE  5046               	movf	(___fladd@a+1)^0,w,c
  3801   000FF0  2242               	addwfc	(___fladd@b+1)^0,f,c
  3802   000FF2  5047               	movf	(___fladd@a+2)^0,w,c
  3803   000FF4  2243               	addwfc	(___fladd@b+2)^0,f,c
  3804   000FF6  5048               	movf	(___fladd@a+3)^0,w,c
  3805   000FF8  2244               	addwfc	(___fladd@b+3)^0,f,c
  3806   000FFA  A044               	btfss	(___fladd@b+3)^0,0,c
  3807   000FFC  EF02  F008         	goto	u3761
  3808   001000  EF04  F008         	goto	u3760
  3809   001004                     u3761:
  3810   001004  EFB0  F008         	goto	l4178
  3811   001008                     u3760:
  3812   001008  A050               	btfss	___fladd@grs^0,0,c
  3813   00100A  EF09  F008         	goto	u3771
  3814   00100E  EF0B  F008         	goto	u3770
  3815   001012                     u3771:
  3816   001012  EF11  F008         	goto	l4132
  3817   001016                     u3770:
  3818   001016  90D8               	bcf	status,0,c
  3819   001018  3050               	rrcf	___fladd@grs^0,w,c
  3820   00101A  0901               	iorlw	1
  3821   00101C  6E50               	movwf	___fladd@grs^0,c
  3822   00101E  EF13  F008         	goto	l4134
  3823   001022                     l4132:
  3824   001022  90D8               	bcf	status,0,c
  3825   001024  3250               	rrcf	___fladd@grs^0,f,c
  3826   001026                     l4134:
  3827   001026  A041               	btfss	___fladd@b^0,0,c
  3828   001028  EF18  F008         	goto	u3781
  3829   00102C  EF1A  F008         	goto	u3780
  3830   001030                     u3781:
  3831   001030  EF1B  F008         	goto	l4138
  3832   001034                     u3780:
  3833   001034  8E50               	bsf	___fladd@grs^0,7,c
  3834   001036                     l4138:
  3835   001036  3444               	rlcf	(___fladd@b+3)^0,w,c
  3836   001038  3244               	rrcf	(___fladd@b+3)^0,f,c
  3837   00103A  3243               	rrcf	(___fladd@b+2)^0,f,c
  3838   00103C  3242               	rrcf	(___fladd@b+1)^0,f,c
  3839   00103E  3241               	rrcf	___fladd@b^0,f,c
  3840   001040  2A4F               	incf	___fladd@bexp^0,f,c
  3841   001042  EFB0  F008         	goto	l4178
  3842   001046                     l4142:
  3843   001046  5045               	movf	___fladd@a^0,w,c
  3844   001048  5C41               	subwf	___fladd@b^0,w,c
  3845   00104A  5046               	movf	(___fladd@a+1)^0,w,c
  3846   00104C  5842               	subwfb	(___fladd@b+1)^0,w,c
  3847   00104E  5047               	movf	(___fladd@a+2)^0,w,c
  3848   001050  5843               	subwfb	(___fladd@b+2)^0,w,c
  3849   001052  5044               	movf	(___fladd@b+3)^0,w,c
  3850   001054  0A80               	xorlw	128
  3851   001056  6E49               	movwf	??___fladd^0,c
  3852   001058  5048               	movf	(___fladd@a+3)^0,w,c
  3853   00105A  0A80               	xorlw	128
  3854   00105C  5849               	subwfb	??___fladd^0,w,c
  3855   00105E  B0D8               	btfsc	status,0,c
  3856   001060  EF34  F008         	goto	u3791
  3857   001064  EF36  F008         	goto	u3790
  3858   001068                     u3791:
  3859   001068  EF61  F008         	goto	l4152
  3860   00106C                     u3790:
  3861   00106C  5041               	movf	___fladd@b^0,w,c
  3862   00106E  5C45               	subwf	___fladd@a^0,w,c
  3863   001070  6E49               	movwf	??___fladd^0,c
  3864   001072  5042               	movf	(___fladd@b+1)^0,w,c
  3865   001074  5846               	subwfb	(___fladd@a+1)^0,w,c
  3866   001076  6E4A               	movwf	(??___fladd+1)^0,c
  3867   001078  5043               	movf	(___fladd@b+2)^0,w,c
  3868   00107A  5847               	subwfb	(___fladd@a+2)^0,w,c
  3869   00107C  6E4B               	movwf	(??___fladd+2)^0,c
  3870   00107E  5044               	movf	(___fladd@b+3)^0,w,c
  3871   001080  5848               	subwfb	(___fladd@a+3)^0,w,c
  3872   001082  6E4C               	movwf	(??___fladd+3)^0,c
  3873   001084  0EFF               	movlw	255
  3874   001086  2449               	addwf	??___fladd^0,w,c
  3875   001088  6E41               	movwf	___fladd@b^0,c
  3876   00108A  0EFF               	movlw	255
  3877   00108C  204A               	addwfc	(??___fladd+1)^0,w,c
  3878   00108E  6E42               	movwf	(___fladd@b+1)^0,c
  3879   001090  0EFF               	movlw	255
  3880   001092  204B               	addwfc	(??___fladd+2)^0,w,c
  3881   001094  6E43               	movwf	(___fladd@b+2)^0,c
  3882   001096  0EFF               	movlw	255
  3883   001098  204C               	addwfc	(??___fladd+3)^0,w,c
  3884   00109A  6E44               	movwf	(___fladd@b+3)^0,c
  3885   00109C  0E80               	movlw	128
  3886   00109E  1A4D               	xorwf	___fladd@signs^0,f,c
  3887   0010A0  6C50               	negf	___fladd@grs^0,c
  3888   0010A2  5050               	movf	___fladd@grs^0,w,c
  3889   0010A4  A4D8               	btfss	status,2,c
  3890   0010A6  EF57  F008         	goto	u3801
  3891   0010AA  EF59  F008         	goto	u3800
  3892   0010AE                     u3801:
  3893   0010AE  EF69  F008         	goto	l1221
  3894   0010B2                     u3800:
  3895   0010B2  0E01               	movlw	1
  3896   0010B4  2641               	addwf	___fladd@b^0,f,c
  3897   0010B6  0E00               	movlw	0
  3898   0010B8  2242               	addwfc	(___fladd@b+1)^0,f,c
  3899   0010BA  2243               	addwfc	(___fladd@b+2)^0,f,c
  3900   0010BC  2244               	addwfc	(___fladd@b+3)^0,f,c
  3901   0010BE  EF69  F008         	goto	l1221
  3902   0010C2                     l4152:
  3903   0010C2  5045               	movf	___fladd@a^0,w,c
  3904   0010C4  5E41               	subwf	___fladd@b^0,f,c
  3905   0010C6  5046               	movf	(___fladd@a+1)^0,w,c
  3906   0010C8  5A42               	subwfb	(___fladd@b+1)^0,f,c
  3907   0010CA  5047               	movf	(___fladd@a+2)^0,w,c
  3908   0010CC  5A43               	subwfb	(___fladd@b+2)^0,f,c
  3909   0010CE  5048               	movf	(___fladd@a+3)^0,w,c
  3910   0010D0  5A44               	subwfb	(___fladd@b+3)^0,f,c
  3911   0010D2                     l1221:
  3912   0010D2  5041               	movf	___fladd@b^0,w,c
  3913   0010D4  1042               	iorwf	(___fladd@b+1)^0,w,c
  3914   0010D6  1043               	iorwf	(___fladd@b+2)^0,w,c
  3915   0010D8  1044               	iorwf	(___fladd@b+3)^0,w,c
  3916   0010DA  A4D8               	btfss	status,2,c
  3917   0010DC  EF72  F008         	goto	u3811
  3918   0010E0  EF74  F008         	goto	u3810
  3919   0010E4                     u3811:
  3920   0010E4  EFA9  F008         	goto	l4176
  3921   0010E8                     u3810:
  3922   0010E8  5050               	movf	___fladd@grs^0,w,c
  3923   0010EA  A4D8               	btfss	status,2,c
  3924   0010EC  EF7A  F008         	goto	u3821
  3925   0010F0  EF7C  F008         	goto	u3820
  3926   0010F4                     u3821:
  3927   0010F4  EFA9  F008         	goto	l4176
  3928   0010F8                     u3820:
  3929   0010F8  0E00               	movlw	0
  3930   0010FA  6E41               	movwf	?___fladd^0,c
  3931   0010FC  0E00               	movlw	0
  3932   0010FE  6E42               	movwf	(?___fladd+1)^0,c
  3933   001100  0E00               	movlw	0
  3934   001102  6E43               	movwf	(?___fladd+2)^0,c
  3935   001104  0E00               	movlw	0
  3936   001106  6E44               	movwf	(?___fladd+3)^0,c
  3937   001108  EF44  F009         	goto	l1213
  3938   00110C                     l4160:
  3939   00110C  90D8               	bcf	status,0,c
  3940   00110E  3641               	rlcf	___fladd@b^0,f,c
  3941   001110  3642               	rlcf	(___fladd@b+1)^0,f,c
  3942   001112  3643               	rlcf	(___fladd@b+2)^0,f,c
  3943   001114  3644               	rlcf	(___fladd@b+3)^0,f,c
  3944   001116  AE50               	btfss	___fladd@grs^0,7,c
  3945   001118  EF90  F008         	goto	u3831
  3946   00111C  EF92  F008         	goto	u3830
  3947   001120                     u3831:
  3948   001120  EF93  F008         	goto	l4166
  3949   001124                     u3830:
  3950   001124  8041               	bsf	___fladd@b^0,0,c
  3951   001126                     l4166:
  3952   001126  A050               	btfss	___fladd@grs^0,0,c
  3953   001128  EF98  F008         	goto	u3841
  3954   00112C  EF9A  F008         	goto	u3840
  3955   001130                     u3841:
  3956   001130  EF9E  F008         	goto	l4170
  3957   001134                     u3840:
  3958   001134  80D8               	bsf	status,0,c
  3959   001136  3650               	rlcf	___fladd@grs^0,f,c
  3960   001138  EFA0  F008         	goto	l4172
  3961   00113C                     l4170:
  3962   00113C  90D8               	bcf	status,0,c
  3963   00113E  3650               	rlcf	___fladd@grs^0,f,c
  3964   001140                     l4172:
  3965   001140  504F               	movf	___fladd@bexp^0,w,c
  3966   001142  B4D8               	btfsc	status,2,c
  3967   001144  EFA6  F008         	goto	u3851
  3968   001148  EFA8  F008         	goto	u3850
  3969   00114C                     u3851:
  3970   00114C  EFA9  F008         	goto	l4176
  3971   001150                     u3850:
  3972   001150  064F               	decf	___fladd@bexp^0,f,c
  3973   001152                     l4176:
  3974   001152  AE43               	btfss	(___fladd@b+2)^0,7,c
  3975   001154  EFAE  F008         	goto	u3861
  3976   001158  EFB0  F008         	goto	u3860
  3977   00115C                     u3861:
  3978   00115C  EF86  F008         	goto	l4160
  3979   001160                     u3860:
  3980   001160                     l4178:
  3981   001160  0E00               	movlw	0
  3982   001162  6E4E               	movwf	___fladd@aexp^0,c
  3983   001164  AE50               	btfss	___fladd@grs^0,7,c
  3984   001166  EFB7  F008         	goto	u3871
  3985   00116A  EFB9  F008         	goto	u3870
  3986   00116E                     u3871:
  3987   00116E  EFD1  F008         	goto	l1230
  3988   001172                     u3870:
  3989   001172  C050  F049         	movff	___fladd@grs,??___fladd
  3990   001176  0E7F               	movlw	127
  3991   001178  1649               	andwf	??___fladd^0,f,c
  3992   00117A  B4D8               	btfsc	status,2,c
  3993   00117C  EFC2  F008         	goto	u3881
  3994   001180  EFC4  F008         	goto	u3880
  3995   001184                     u3881:
  3996   001184  EFC8  F008         	goto	l1231
  3997   001188                     u3880:
  3998   001188                     l4184:
  3999   001188  0E01               	movlw	1
  4000   00118A  6E4E               	movwf	___fladd@aexp^0,c
  4001   00118C  EFD1  F008         	goto	l1230
  4002   001190                     l1231:
  4003   001190  A041               	btfss	___fladd@b^0,0,c
  4004   001192  EFCD  F008         	goto	u3891
  4005   001196  EFCF  F008         	goto	u3890
  4006   00119A                     u3891:
  4007   00119A  EFD1  F008         	goto	l1230
  4008   00119E                     u3890:
  4009   00119E  EFC4  F008         	goto	l4184
  4010   0011A2                     l1230:
  4011   0011A2  504E               	movf	___fladd@aexp^0,w,c
  4012   0011A4  B4D8               	btfsc	status,2,c
  4013   0011A6  EFD7  F008         	goto	u3901
  4014   0011AA  EFD9  F008         	goto	u3900
  4015   0011AE                     u3901:
  4016   0011AE  EF04  F009         	goto	l4196
  4017   0011B2                     u3900:
  4018   0011B2  0E01               	movlw	1
  4019   0011B4  2641               	addwf	___fladd@b^0,f,c
  4020   0011B6  0E00               	movlw	0
  4021   0011B8  2242               	addwfc	(___fladd@b+1)^0,f,c
  4022   0011BA  2243               	addwfc	(___fladd@b+2)^0,f,c
  4023   0011BC  2244               	addwfc	(___fladd@b+3)^0,f,c
  4024   0011BE  A044               	btfss	(___fladd@b+3)^0,0,c
  4025   0011C0  EFE4  F008         	goto	u3911
  4026   0011C4  EFE6  F008         	goto	u3910
  4027   0011C8                     u3911:
  4028   0011C8  EF04  F009         	goto	l4196
  4029   0011CC                     u3910:
  4030   0011CC  C041  F049         	movff	___fladd@b,??___fladd
  4031   0011D0  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  4032   0011D4  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  4033   0011D8  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  4034   0011DC  344C               	rlcf	(??___fladd+3)^0,w,c
  4035   0011DE  324C               	rrcf	(??___fladd+3)^0,f,c
  4036   0011E0  324B               	rrcf	(??___fladd+2)^0,f,c
  4037   0011E2  324A               	rrcf	(??___fladd+1)^0,f,c
  4038   0011E4  3249               	rrcf	??___fladd^0,f,c
  4039   0011E6  C049  F041         	movff	??___fladd,___fladd@b
  4040   0011EA  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  4041   0011EE  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  4042   0011F2  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  4043   0011F6  284F               	incf	___fladd@bexp^0,w,c
  4044   0011F8  B4D8               	btfsc	status,2,c
  4045   0011FA  EF01  F009         	goto	u3921
  4046   0011FE  EF03  F009         	goto	u3920
  4047   001202                     u3921:
  4048   001202  EF04  F009         	goto	l4196
  4049   001206                     u3920:
  4050   001206  2A4F               	incf	___fladd@bexp^0,f,c
  4051   001208                     l4196:
  4052   001208  284F               	incf	___fladd@bexp^0,w,c
  4053   00120A  B4D8               	btfsc	status,2,c
  4054   00120C  EF0A  F009         	goto	u3931
  4055   001210  EF0C  F009         	goto	u3930
  4056   001214                     u3931:
  4057   001214  EF14  F009         	goto	l4200
  4058   001218                     u3930:
  4059   001218  504F               	movf	___fladd@bexp^0,w,c
  4060   00121A  A4D8               	btfss	status,2,c
  4061   00121C  EF12  F009         	goto	u3941
  4062   001220  EF14  F009         	goto	u3940
  4063   001224                     u3941:
  4064   001224  EF26  F009         	goto	l4204
  4065   001228                     u3940:
  4066   001228                     l4200:
  4067   001228  0E00               	movlw	0
  4068   00122A  6E41               	movwf	___fladd@b^0,c
  4069   00122C  0E00               	movlw	0
  4070   00122E  6E42               	movwf	(___fladd@b+1)^0,c
  4071   001230  0E00               	movlw	0
  4072   001232  6E43               	movwf	(___fladd@b+2)^0,c
  4073   001234  0E00               	movlw	0
  4074   001236  6E44               	movwf	(___fladd@b+3)^0,c
  4075   001238  504F               	movf	___fladd@bexp^0,w,c
  4076   00123A  A4D8               	btfss	status,2,c
  4077   00123C  EF22  F009         	goto	u3951
  4078   001240  EF24  F009         	goto	u3950
  4079   001244                     u3951:
  4080   001244  EF26  F009         	goto	l4204
  4081   001248                     u3950:
  4082   001248  0E00               	movlw	0
  4083   00124A  6E4D               	movwf	___fladd@signs^0,c
  4084   00124C                     l4204:
  4085   00124C  A04F               	btfss	___fladd@bexp^0,0,c
  4086   00124E  EF2B  F009         	goto	u3961
  4087   001252  EF2D  F009         	goto	u3960
  4088   001256                     u3961:
  4089   001256  EF30  F009         	goto	l4208
  4090   00125A                     u3960:
  4091   00125A  8E43               	bsf	(___fladd@b+2)^0,7,c
  4092   00125C  EF31  F009         	goto	l4210
  4093   001260                     l4208:
  4094   001260  9E43               	bcf	(___fladd@b+2)^0,7,c
  4095   001262                     l4210:
  4096   001262  90D8               	bcf	status,0,c
  4097   001264  304F               	rrcf	___fladd@bexp^0,w,c
  4098   001266  6E44               	movwf	(___fladd@b+3)^0,c
  4099   001268  AE4D               	btfss	___fladd@signs^0,7,c
  4100   00126A  EF39  F009         	goto	u3971
  4101   00126E  EF3B  F009         	goto	u3970
  4102   001272                     u3971:
  4103   001272  EF3C  F009         	goto	l4216
  4104   001276                     u3970:
  4105   001276  8E44               	bsf	(___fladd@b+3)^0,7,c
  4106   001278                     l4216:
  4107   001278  C041  F041         	movff	___fladd@b,?___fladd
  4108   00127C  C042  F042         	movff	___fladd@b+1,?___fladd+1
  4109   001280  C043  F043         	movff	___fladd@b+2,?___fladd+2
  4110   001284  C044  F044         	movff	___fladd@b+3,?___fladd+3
  4111   001288                     l1213:
  4112   001288  0012               	return		;funcret
  4113   00128A                     __end_of___fladd:
  4114                           	callstack 0
  4115                           
  4116 ;; *************** function _Screen_Device_2 *****************
  4117 ;; Defined at:
  4118 ;;		line 135 in file "LCD_Screens.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;		None
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;  i               2   19[COMRAM] int 
  4123 ;;  i               2   17[COMRAM] int 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      void 
  4126 ;; Registers used:
  4127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4133 ;;      Params:         0       0       0       0       0       0       0       0       0
  4134 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4135 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4136 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4137 ;;Total ram usage:        6 bytes
  4138 ;; Hardware stack levels used: 1
  4139 ;; Hardware stack levels required when called: 4
  4140 ;; This function calls:
  4141 ;;		_Flash
  4142 ;;		_LCD_goto_xy
  4143 ;;		_LCD_write
  4144 ;;		_LCD_write_string
  4145 ;;		_Set_Time
  4146 ;; This function is called by:
  4147 ;;		_main
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text8
  4152   001B34                     __ptext8:
  4153                           	callstack 0
  4154   001B34                     _Screen_Device_2:
  4155                           	callstack 26
  4156   001B34                     
  4157                           ;LCD_Screens.c: 137:     LCD_goto_xy(0, 0);
  4158   001B34  0E00               	movlw	0
  4159   001B36  6E03               	movwf	(LCD_goto_xy@x+1)^0,c
  4160   001B38  0E00               	movlw	0
  4161   001B3A  6E02               	movwf	LCD_goto_xy@x^0,c
  4162   001B3C  0E00               	movlw	0
  4163   001B3E  6E05               	movwf	(LCD_goto_xy@y+1)^0,c
  4164   001B40  0E00               	movlw	0
  4165   001B42  6E04               	movwf	LCD_goto_xy@y^0,c
  4166   001B44  ECB3  F01E         	call	_LCD_goto_xy	;wreg free
  4167   001B48                     
  4168                           ;LCD_Screens.c: 138:     LCD_write_string("Start2: ");
  4169   001B48  0E34               	movlw	low STR_14
  4170   001B4A  6E03               	movwf	LCD_write_string@str^0,c
  4171   001B4C  0E08               	movlw	high STR_14
  4172   001B4E  6E04               	movwf	(LCD_write_string@str+1)^0,c
  4173   001B50  EC3D  F020         	call	_LCD_write_string	;wreg free
  4174   001B54                     
  4175                           ;LCD_Screens.c: 140:     for (int i = 0; i < 8; i++)
  4176   001B54  0E00               	movlw	0
  4177   001B56  6E13               	movwf	(Screen_Device_2@i+1)^0,c
  4178   001B58  0E00               	movlw	0
  4179   001B5A  6E12               	movwf	Screen_Device_2@i^0,c
  4180   001B5C                     l4870:
  4181                           
  4182                           ;LCD_Screens.c: 141:     {;LCD_Screens.c: 142:         LCD_write(time1[2][i]);
  4183   001B5C  0ED0               	movlw	low (_time1+16)
  4184   001B5E  2412               	addwf	Screen_Device_2@i^0,w,c
  4185   001B60  6ED9               	movwf	fsr2l,c
  4186   001B62  0E00               	movlw	high (_time1+16)
  4187   001B64  2013               	addwfc	(Screen_Device_2@i+1)^0,w,c
  4188   001B66  6EDA               	movwf	fsr2h,c
  4189   001B68  50DF               	movf	indf2,w,c
  4190   001B6A  EC2D  F022         	call	_LCD_write
  4191   001B6E                     
  4192                           ;LCD_Screens.c: 143:     }
  4193   001B6E  4A12               	infsnz	Screen_Device_2@i^0,f,c
  4194   001B70  2A13               	incf	(Screen_Device_2@i+1)^0,f,c
  4195   001B72  BE13               	btfsc	(Screen_Device_2@i+1)^0,7,c
  4196   001B74  EFC5  F00D         	goto	u4931
  4197   001B78  5013               	movf	(Screen_Device_2@i+1)^0,w,c
  4198   001B7A  E109               	bnz	u4930
  4199   001B7C  0E08               	movlw	8
  4200   001B7E  5C12               	subwf	Screen_Device_2@i^0,w,c
  4201   001B80  A0D8               	btfss	status,0,c
  4202   001B82  EFC5  F00D         	goto	u4931
  4203   001B86  EFC7  F00D         	goto	u4930
  4204   001B8A                     u4931:
  4205   001B8A  EFAE  F00D         	goto	l4870
  4206   001B8E                     u4930:
  4207   001B8E                     
  4208                           ;LCD_Screens.c: 145:     LCD_goto_xy(1, 0);
  4209   001B8E  0E00               	movlw	0
  4210   001B90  6E03               	movwf	(LCD_goto_xy@x+1)^0,c
  4211   001B92  0E01               	movlw	1
  4212   001B94  6E02               	movwf	LCD_goto_xy@x^0,c
  4213   001B96  0E00               	movlw	0
  4214   001B98  6E05               	movwf	(LCD_goto_xy@y+1)^0,c
  4215   001B9A  0E00               	movlw	0
  4216   001B9C  6E04               	movwf	LCD_goto_xy@y^0,c
  4217   001B9E  ECB3  F01E         	call	_LCD_goto_xy	;wreg free
  4218   001BA2                     
  4219                           ;LCD_Screens.c: 146:     LCD_write_string("Finish: ");
  4220   001BA2  0E3D               	movlw	low STR_13
  4221   001BA4  6E03               	movwf	LCD_write_string@str^0,c
  4222   001BA6  0E08               	movlw	high STR_13
  4223   001BA8  6E04               	movwf	(LCD_write_string@str+1)^0,c
  4224   001BAA  EC3D  F020         	call	_LCD_write_string	;wreg free
  4225   001BAE                     
  4226                           ;LCD_Screens.c: 148:     for (int i = 0; i < 8; i++)
  4227   001BAE  0E00               	movlw	0
  4228   001BB0  6E15               	movwf	(Screen_Device_2@i_158+1)^0,c
  4229   001BB2  0E00               	movlw	0
  4230   001BB4  6E14               	movwf	Screen_Device_2@i_158^0,c
  4231   001BB6                     l4886:
  4232                           
  4233                           ;LCD_Screens.c: 149:     {;LCD_Screens.c: 150:         LCD_write(time1[3][i]);
  4234   001BB6  0ED8               	movlw	low (_time1+24)
  4235   001BB8  2414               	addwf	Screen_Device_2@i_158^0,w,c
  4236   001BBA  6ED9               	movwf	fsr2l,c
  4237   001BBC  0E00               	movlw	high (_time1+24)
  4238   001BBE  2015               	addwfc	(Screen_Device_2@i_158+1)^0,w,c
  4239   001BC0  6EDA               	movwf	fsr2h,c
  4240   001BC2  50DF               	movf	indf2,w,c
  4241   001BC4  EC2D  F022         	call	_LCD_write
  4242   001BC8                     
  4243                           ;LCD_Screens.c: 151:     }
  4244   001BC8  4A14               	infsnz	Screen_Device_2@i_158^0,f,c
  4245   001BCA  2A15               	incf	(Screen_Device_2@i_158+1)^0,f,c
  4246   001BCC  BE15               	btfsc	(Screen_Device_2@i_158+1)^0,7,c
  4247   001BCE  EFF2  F00D         	goto	u4941
  4248   001BD2  5015               	movf	(Screen_Device_2@i_158+1)^0,w,c
  4249   001BD4  E109               	bnz	u4940
  4250   001BD6  0E08               	movlw	8
  4251   001BD8  5C14               	subwf	Screen_Device_2@i_158^0,w,c
  4252   001BDA  A0D8               	btfss	status,0,c
  4253   001BDC  EFF2  F00D         	goto	u4941
  4254   001BE0  EFF4  F00D         	goto	u4940
  4255   001BE4                     u4941:
  4256   001BE4  EFDB  F00D         	goto	l4886
  4257   001BE8                     u4940:
  4258   001BE8                     
  4259                           ;LCD_Screens.c: 152:     _delay((unsigned long)((50)*(8000000UL/4000.0)));
  4260   001BE8  0E82               	movlw	130
  4261   001BEA  6E10               	movwf	??_Screen_Device_2^0,c
  4262   001BEC  0EDE               	movlw	222
  4263   001BEE                     u5297:
  4264   001BEE  2EE8               	decfsz	wreg,f,c
  4265   001BF0  D7FE               	bra	u5297
  4266   001BF2  2E10               	decfsz	??_Screen_Device_2^0,f,c
  4267   001BF4  D7FC               	bra	u5297
  4268   001BF6                     
  4269                           ;LCD_Screens.c: 154:     if(((PORTB & (1<<3))? 1:0))
  4270   001BF6  A681               	btfss	129,3,c	;volatile
  4271   001BF8  EF00  F00E         	goto	u4951
  4272   001BFC  EF02  F00E         	goto	u4950
  4273   001C00                     u4951:
  4274   001C00  EF73  F00E         	goto	l4924
  4275   001C04                     u4950:
  4276   001C04                     
  4277                           ;LCD_Screens.c: 155:     {;LCD_Screens.c: 156:         _delay((unsigned long)((5)*(80000
      +                          00UL/4000.0)));
  4278   001C04  0E0D               	movlw	13
  4279   001C06  6E10               	movwf	??_Screen_Device_2^0,c
  4280   001C08  0EFC               	movlw	252
  4281   001C0A                     u5307:
  4282   001C0A  2EE8               	decfsz	wreg,f,c
  4283   001C0C  D7FE               	bra	u5307
  4284   001C0E  2E10               	decfsz	??_Screen_Device_2^0,f,c
  4285   001C10  D7FC               	bra	u5307
  4286   001C12                     l171:
  4287   001C12  B681               	btfsc	129,3,c	;volatile
  4288   001C14  EF0E  F00E         	goto	u4961
  4289   001C18  EF10  F00E         	goto	u4960
  4290   001C1C                     u4961:
  4291   001C1C  EF09  F00E         	goto	l171
  4292   001C20                     u4960:
  4293   001C20                     
  4294                           ;LCD_Screens.c: 159:         if(Place3<9)
  4295   001C20  0100               	movlb	0	; () banked
  4296   001C22  BF97               	btfsc	(_Place3+1)& (0+255),7,b
  4297   001C24  EF1F  F00E         	goto	u4970
  4298   001C28  5197               	movf	(_Place3+1)& (0+255),w,b
  4299   001C2A  E107               	bnz	u4971
  4300   001C2C  0E09               	movlw	9
  4301   001C2E  5D96               	subwf	_Place3& (0+255),w,b
  4302   001C30  B0D8               	btfsc	status,0,c
  4303   001C32  EF1D  F00E         	goto	u4971
  4304   001C36  EF1F  F00E         	goto	u4970
  4305   001C3A                     u4971:
  4306   001C3A  EF23  F00E         	goto	l4902
  4307   001C3E                     u4970:
  4308   001C3E                     
  4309                           ; BSR set to: 0
  4310                           ;LCD_Screens.c: 160:         {;LCD_Screens.c: 161:             Place3++;
  4311   001C3E  4B96               	infsnz	_Place3& (0+255),f,b
  4312   001C40  2B97               	incf	(_Place3+1)& (0+255),f,b
  4313                           
  4314                           ;LCD_Screens.c: 162:         }
  4315   001C42  EF25  F00E         	goto	l4904
  4316   001C46                     l4902:
  4317                           
  4318                           ; BSR set to: 0
  4319   001C46  4B94               	infsnz	_Place4& (0+255),f,b
  4320   001C48  2B95               	incf	(_Place4+1)& (0+255),f,b
  4321   001C4A                     l4904:
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;LCD_Screens.c: 165:         if(Place3==3) Place3=4;
  4325   001C4A  0E03               	movlw	3
  4326   001C4C  1996               	xorwf	_Place3& (0+255),w,b
  4327   001C4E  1197               	iorwf	(_Place3+1)& (0+255),w,b
  4328   001C50  A4D8               	btfss	status,2,c
  4329   001C52  EF2D  F00E         	goto	u4981
  4330   001C56  EF2F  F00E         	goto	u4980
  4331   001C5A                     u4981:
  4332   001C5A  EF33  F00E         	goto	l4908
  4333   001C5E                     u4980:
  4334   001C5E                     
  4335                           ; BSR set to: 0
  4336   001C5E  0E00               	movlw	0
  4337   001C60  6F97               	movwf	(_Place3+1)& (0+255),b
  4338   001C62  0E04               	movlw	4
  4339   001C64  6F96               	movwf	_Place3& (0+255),b
  4340   001C66                     l4908:
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;LCD_Screens.c: 166:         if(Place3==6) Place3=7;
  4344   001C66  0E06               	movlw	6
  4345   001C68  1996               	xorwf	_Place3& (0+255),w,b
  4346   001C6A  1197               	iorwf	(_Place3+1)& (0+255),w,b
  4347   001C6C  A4D8               	btfss	status,2,c
  4348   001C6E  EF3B  F00E         	goto	u4991
  4349   001C72  EF3D  F00E         	goto	u4990
  4350   001C76                     u4991:
  4351   001C76  EF41  F00E         	goto	l4912
  4352   001C7A                     u4990:
  4353   001C7A                     
  4354                           ; BSR set to: 0
  4355   001C7A  0E00               	movlw	0
  4356   001C7C  6F97               	movwf	(_Place3+1)& (0+255),b
  4357   001C7E  0E07               	movlw	7
  4358   001C80  6F96               	movwf	_Place3& (0+255),b
  4359   001C82                     l4912:
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;LCD_Screens.c: 167:         if(Place4==3) Place4=4;
  4363   001C82  0E03               	movlw	3
  4364   001C84  1994               	xorwf	_Place4& (0+255),w,b
  4365   001C86  1195               	iorwf	(_Place4+1)& (0+255),w,b
  4366   001C88  A4D8               	btfss	status,2,c
  4367   001C8A  EF49  F00E         	goto	u5001
  4368   001C8E  EF4B  F00E         	goto	u5000
  4369   001C92                     u5001:
  4370   001C92  EF4F  F00E         	goto	l4916
  4371   001C96                     u5000:
  4372   001C96                     
  4373                           ; BSR set to: 0
  4374   001C96  0E00               	movlw	0
  4375   001C98  6F95               	movwf	(_Place4+1)& (0+255),b
  4376   001C9A  0E04               	movlw	4
  4377   001C9C  6F94               	movwf	_Place4& (0+255),b
  4378   001C9E                     l4916:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;LCD_Screens.c: 168:         if(Place4==6) Place4=7;
  4382   001C9E  0E06               	movlw	6
  4383   001CA0  1994               	xorwf	_Place4& (0+255),w,b
  4384   001CA2  1195               	iorwf	(_Place4+1)& (0+255),w,b
  4385   001CA4  A4D8               	btfss	status,2,c
  4386   001CA6  EF57  F00E         	goto	u5011
  4387   001CAA  EF59  F00E         	goto	u5010
  4388   001CAE                     u5011:
  4389   001CAE  EF5D  F00E         	goto	l4920
  4390   001CB2                     u5010:
  4391   001CB2                     
  4392                           ; BSR set to: 0
  4393   001CB2  0E00               	movlw	0
  4394   001CB4  6F95               	movwf	(_Place4+1)& (0+255),b
  4395   001CB6  0E07               	movlw	7
  4396   001CB8  6F94               	movwf	_Place4& (0+255),b
  4397   001CBA                     l4920:
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;LCD_Screens.c: 170:         if(Place4>8)
  4401   001CBA  BF95               	btfsc	(_Place4+1)& (0+255),7,b
  4402   001CBC  EF69  F00E         	goto	u5021
  4403   001CC0  5195               	movf	(_Place4+1)& (0+255),w,b
  4404   001CC2  E109               	bnz	u5020
  4405   001CC4  0E09               	movlw	9
  4406   001CC6  5D94               	subwf	_Place4& (0+255),w,b
  4407   001CC8  A0D8               	btfss	status,0,c
  4408   001CCA  EF69  F00E         	goto	u5021
  4409   001CCE  EF6B  F00E         	goto	u5020
  4410   001CD2                     u5021:
  4411   001CD2  EF73  F00E         	goto	l4924
  4412   001CD6                     u5020:
  4413   001CD6                     
  4414                           ; BSR set to: 0
  4415                           ;LCD_Screens.c: 171:         {;LCD_Screens.c: 172:             Place3=0;
  4416   001CD6  0E00               	movlw	0
  4417   001CD8  6F97               	movwf	(_Place3+1)& (0+255),b
  4418   001CDA  0E00               	movlw	0
  4419   001CDC  6F96               	movwf	_Place3& (0+255),b
  4420                           
  4421                           ;LCD_Screens.c: 173:             Place4=0;
  4422   001CDE  0E00               	movlw	0
  4423   001CE0  6F95               	movwf	(_Place4+1)& (0+255),b
  4424   001CE2  0E00               	movlw	0
  4425   001CE4  6F94               	movwf	_Place4& (0+255),b
  4426   001CE6                     l4924:
  4427                           
  4428                           ;LCD_Screens.c: 177:         if (Place3 > 0 && Place3 < 9) {
  4429   001CE6  0100               	movlb	0	; () banked
  4430   001CE8  BF97               	btfsc	(_Place3+1)& (0+255),7,b
  4431   001CEA  EF7F  F00E         	goto	u5031
  4432   001CEE  5197               	movf	(_Place3+1)& (0+255),w,b
  4433   001CF0  E108               	bnz	u5030
  4434   001CF2  0596               	decf	_Place3& (0+255),w,b
  4435   001CF4  A0D8               	btfss	status,0,c
  4436   001CF6  EF7F  F00E         	goto	u5031
  4437   001CFA  EF81  F00E         	goto	u5030
  4438   001CFE                     u5031:
  4439   001CFE  EF9B  F00E         	goto	l4930
  4440   001D02                     u5030:
  4441   001D02                     
  4442                           ; BSR set to: 0
  4443   001D02  BF97               	btfsc	(_Place3+1)& (0+255),7,b
  4444   001D04  EF8F  F00E         	goto	u5040
  4445   001D08  5197               	movf	(_Place3+1)& (0+255),w,b
  4446   001D0A  E107               	bnz	u5041
  4447   001D0C  0E09               	movlw	9
  4448   001D0E  5D96               	subwf	_Place3& (0+255),w,b
  4449   001D10  B0D8               	btfsc	status,0,c
  4450   001D12  EF8D  F00E         	goto	u5041
  4451   001D16  EF8F  F00E         	goto	u5040
  4452   001D1A                     u5041:
  4453   001D1A  EF9B  F00E         	goto	l4930
  4454   001D1E                     u5040:
  4455   001D1E                     
  4456                           ; BSR set to: 0
  4457                           ;LCD_Screens.c: 178:         Set_Time(2, Place3);
  4458   001D1E  0E00               	movlw	0
  4459   001D20  6E02               	movwf	(Set_Time@Num+1)^0,c
  4460   001D22  0E02               	movlw	2
  4461   001D24  6E01               	movwf	Set_Time@Num^0,c
  4462   001D26  C096  F003         	movff	_Place3,Set_Time@Place
  4463   001D2A  C097  F004         	movff	_Place3+1,Set_Time@Place+1
  4464   001D2E  EC28  F004         	call	_Set_Time	;wreg free
  4465                           
  4466                           ;LCD_Screens.c: 179:     }
  4467   001D32  EF0A  F00F         	goto	l4950
  4468   001D36                     l4930:
  4469                           
  4470                           ; BSR set to: 0
  4471   001D36  BF95               	btfsc	(_Place4+1)& (0+255),7,b
  4472   001D38  EFA6  F00E         	goto	u5051
  4473   001D3C  5195               	movf	(_Place4+1)& (0+255),w,b
  4474   001D3E  E108               	bnz	u5050
  4475   001D40  0594               	decf	_Place4& (0+255),w,b
  4476   001D42  A0D8               	btfss	status,0,c
  4477   001D44  EFA6  F00E         	goto	u5051
  4478   001D48  EFA8  F00E         	goto	u5050
  4479   001D4C                     u5051:
  4480   001D4C  EF0A  F00F         	goto	l4950
  4481   001D50                     u5050:
  4482   001D50                     
  4483                           ; BSR set to: 0
  4484   001D50  BF95               	btfsc	(_Place4+1)& (0+255),7,b
  4485   001D52  EFB6  F00E         	goto	u5060
  4486   001D56  5195               	movf	(_Place4+1)& (0+255),w,b
  4487   001D58  E107               	bnz	u5061
  4488   001D5A  0E09               	movlw	9
  4489   001D5C  5D94               	subwf	_Place4& (0+255),w,b
  4490   001D5E  B0D8               	btfsc	status,0,c
  4491   001D60  EFB4  F00E         	goto	u5061
  4492   001D64  EFB6  F00E         	goto	u5060
  4493   001D68                     u5061:
  4494   001D68  EF0A  F00F         	goto	l4950
  4495   001D6C                     u5060:
  4496   001D6C                     
  4497                           ; BSR set to: 0
  4498                           ;LCD_Screens.c: 181:         Set_Time(3, Place4);
  4499   001D6C  0E00               	movlw	0
  4500   001D6E  6E02               	movwf	(Set_Time@Num+1)^0,c
  4501   001D70  0E03               	movlw	3
  4502   001D72  6E01               	movwf	Set_Time@Num^0,c
  4503   001D74  C094  F003         	movff	_Place4,Set_Time@Place
  4504   001D78  C095  F004         	movff	_Place4+1,Set_Time@Place+1
  4505   001D7C  EC28  F004         	call	_Set_Time	;wreg free
  4506   001D80  EF0A  F00F         	goto	l4950
  4507   001D84                     l4936:
  4508   001D84  0E00               	movlw	0
  4509   001D86  6E0C               	movwf	(Flash@inc+1)^0,c
  4510   001D88  0E01               	movlw	1
  4511   001D8A  6E0B               	movwf	Flash@inc^0,c
  4512   001D8C  C096  F00D         	movff	_Place3,Flash@PlaceN
  4513   001D90  C097  F00E         	movff	_Place3+1,Flash@PlaceN+1
  4514   001D94  EC5E  F021         	call	_Flash	;wreg free
  4515                           
  4516                           ;LCD_Screens.c: 186:             break;
  4517   001D98  EF78  F00F         	goto	l4966
  4518   001D9C                     l4938:
  4519   001D9C  0E00               	movlw	0
  4520   001D9E  6E0C               	movwf	(Flash@inc+1)^0,c
  4521   001DA0  0E02               	movlw	2
  4522   001DA2  6E0B               	movwf	Flash@inc^0,c
  4523   001DA4  C096  F00D         	movff	_Place3,Flash@PlaceN
  4524   001DA8  C097  F00E         	movff	_Place3+1,Flash@PlaceN+1
  4525   001DAC  EC5E  F021         	call	_Flash	;wreg free
  4526                           
  4527                           ;LCD_Screens.c: 188:             break;
  4528   001DB0  EF78  F00F         	goto	l4966
  4529   001DB4                     l4940:
  4530   001DB4  0E00               	movlw	0
  4531   001DB6  6E0C               	movwf	(Flash@inc+1)^0,c
  4532   001DB8  0E04               	movlw	4
  4533   001DBA  6E0B               	movwf	Flash@inc^0,c
  4534   001DBC  C096  F00D         	movff	_Place3,Flash@PlaceN
  4535   001DC0  C097  F00E         	movff	_Place3+1,Flash@PlaceN+1
  4536   001DC4  EC5E  F021         	call	_Flash	;wreg free
  4537                           
  4538                           ;LCD_Screens.c: 190:             break;
  4539   001DC8  EF78  F00F         	goto	l4966
  4540   001DCC                     l4942:
  4541   001DCC  0E00               	movlw	0
  4542   001DCE  6E0C               	movwf	(Flash@inc+1)^0,c
  4543   001DD0  0E05               	movlw	5
  4544   001DD2  6E0B               	movwf	Flash@inc^0,c
  4545   001DD4  C096  F00D         	movff	_Place3,Flash@PlaceN
  4546   001DD8  C097  F00E         	movff	_Place3+1,Flash@PlaceN+1
  4547   001DDC  EC5E  F021         	call	_Flash	;wreg free
  4548                           
  4549                           ;LCD_Screens.c: 192:             break;
  4550   001DE0  EF78  F00F         	goto	l4966
  4551   001DE4                     l4944:
  4552   001DE4  0E00               	movlw	0
  4553   001DE6  6E0C               	movwf	(Flash@inc+1)^0,c
  4554   001DE8  0E07               	movlw	7
  4555   001DEA  6E0B               	movwf	Flash@inc^0,c
  4556   001DEC  C096  F00D         	movff	_Place3,Flash@PlaceN
  4557   001DF0  C097  F00E         	movff	_Place3+1,Flash@PlaceN+1
  4558   001DF4  EC5E  F021         	call	_Flash	;wreg free
  4559                           
  4560                           ;LCD_Screens.c: 194:             break;
  4561   001DF8  EF78  F00F         	goto	l4966
  4562   001DFC                     l4946:
  4563   001DFC  0E00               	movlw	0
  4564   001DFE  6E0C               	movwf	(Flash@inc+1)^0,c
  4565   001E00  0E08               	movlw	8
  4566   001E02  6E0B               	movwf	Flash@inc^0,c
  4567   001E04  C096  F00D         	movff	_Place3,Flash@PlaceN
  4568   001E08  C097  F00E         	movff	_Place3+1,Flash@PlaceN+1
  4569   001E0C  EC5E  F021         	call	_Flash	;wreg free
  4570                           
  4571                           ;LCD_Screens.c: 196:             break;
  4572   001E10  EF78  F00F         	goto	l4966
  4573   001E14                     l4950:
  4574   001E14  C096  F010         	movff	_Place3,??_Screen_Device_2
  4575   001E18  C097  F011         	movff	_Place3+1,??_Screen_Device_2+1
  4576                           
  4577                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4578                           ; Switch size 1, requested type "simple"
  4579                           ; Number of cases is 1, Range of values is 0 to 0
  4580                           ; switch strategies available:
  4581                           ; Name         Instructions Cycles
  4582                           ; simple_byte            4     3 (average)
  4583                           ;	Chosen strategy is simple_byte
  4584   001E1C  5011               	movf	(??_Screen_Device_2+1)^0,w,c
  4585   001E1E  0A00               	xorlw	0	; case 0
  4586   001E20  B4D8               	btfsc	status,2,c
  4587   001E22  EF15  F00F         	goto	l5494
  4588   001E26  EF78  F00F         	goto	l4966
  4589   001E2A                     l5494:
  4590                           
  4591                           ; Switch size 1, requested type "simple"
  4592                           ; Number of cases is 6, Range of values is 1 to 8
  4593                           ; switch strategies available:
  4594                           ; Name         Instructions Cycles
  4595                           ; simple_byte           19    10 (average)
  4596                           ;	Chosen strategy is simple_byte
  4597   001E2A  5010               	movf	??_Screen_Device_2^0,w,c
  4598   001E2C  0A01               	xorlw	1	; case 1
  4599   001E2E  B4D8               	btfsc	status,2,c
  4600   001E30  EFC2  F00E         	goto	l4936
  4601   001E34  0A03               	xorlw	3	; case 2
  4602   001E36  B4D8               	btfsc	status,2,c
  4603   001E38  EFCE  F00E         	goto	l4938
  4604   001E3C  0A06               	xorlw	6	; case 4
  4605   001E3E  B4D8               	btfsc	status,2,c
  4606   001E40  EFDA  F00E         	goto	l4940
  4607   001E44  0A01               	xorlw	1	; case 5
  4608   001E46  B4D8               	btfsc	status,2,c
  4609   001E48  EFE6  F00E         	goto	l4942
  4610   001E4C  0A02               	xorlw	2	; case 7
  4611   001E4E  B4D8               	btfsc	status,2,c
  4612   001E50  EFF2  F00E         	goto	l4944
  4613   001E54  0A0F               	xorlw	15	; case 8
  4614   001E56  B4D8               	btfsc	status,2,c
  4615   001E58  EFFE  F00E         	goto	l4946
  4616   001E5C  EF78  F00F         	goto	l4966
  4617   001E60                     l4952:
  4618   001E60  0E00               	movlw	0
  4619   001E62  6E0C               	movwf	(Flash@inc+1)^0,c
  4620   001E64  0E01               	movlw	1
  4621   001E66  6E0B               	movwf	Flash@inc^0,c
  4622   001E68  C096  F00D         	movff	_Place3,Flash@PlaceN
  4623   001E6C  C097  F00E         	movff	_Place3+1,Flash@PlaceN+1
  4624   001E70  EC5E  F021         	call	_Flash	;wreg free
  4625                           
  4626                           ;LCD_Screens.c: 201:             break;
  4627   001E74  EF9E  F00F         	goto	l200
  4628   001E78                     l4954:
  4629   001E78  0E00               	movlw	0
  4630   001E7A  6E0C               	movwf	(Flash@inc+1)^0,c
  4631   001E7C  0E02               	movlw	2
  4632   001E7E  6E0B               	movwf	Flash@inc^0,c
  4633   001E80  C096  F00D         	movff	_Place3,Flash@PlaceN
  4634   001E84  C097  F00E         	movff	_Place3+1,Flash@PlaceN+1
  4635   001E88  EC5E  F021         	call	_Flash	;wreg free
  4636                           
  4637                           ;LCD_Screens.c: 203:             break;
  4638   001E8C  EF9E  F00F         	goto	l200
  4639   001E90                     l4956:
  4640   001E90  0E00               	movlw	0
  4641   001E92  6E0C               	movwf	(Flash@inc+1)^0,c
  4642   001E94  0E04               	movlw	4
  4643   001E96  6E0B               	movwf	Flash@inc^0,c
  4644   001E98  C096  F00D         	movff	_Place3,Flash@PlaceN
  4645   001E9C  C097  F00E         	movff	_Place3+1,Flash@PlaceN+1
  4646   001EA0  EC5E  F021         	call	_Flash	;wreg free
  4647                           
  4648                           ;LCD_Screens.c: 205:             break;
  4649   001EA4  EF9E  F00F         	goto	l200
  4650   001EA8                     l4958:
  4651   001EA8  0E00               	movlw	0
  4652   001EAA  6E0C               	movwf	(Flash@inc+1)^0,c
  4653   001EAC  0E05               	movlw	5
  4654   001EAE  6E0B               	movwf	Flash@inc^0,c
  4655   001EB0  C096  F00D         	movff	_Place3,Flash@PlaceN
  4656   001EB4  C097  F00E         	movff	_Place3+1,Flash@PlaceN+1
  4657   001EB8  EC5E  F021         	call	_Flash	;wreg free
  4658                           
  4659                           ;LCD_Screens.c: 207:             break;
  4660   001EBC  EF9E  F00F         	goto	l200
  4661   001EC0                     l4960:
  4662   001EC0  0E00               	movlw	0
  4663   001EC2  6E0C               	movwf	(Flash@inc+1)^0,c
  4664   001EC4  0E07               	movlw	7
  4665   001EC6  6E0B               	movwf	Flash@inc^0,c
  4666   001EC8  C096  F00D         	movff	_Place3,Flash@PlaceN
  4667   001ECC  C097  F00E         	movff	_Place3+1,Flash@PlaceN+1
  4668   001ED0  EC5E  F021         	call	_Flash	;wreg free
  4669                           
  4670                           ;LCD_Screens.c: 209:             break;
  4671   001ED4  EF9E  F00F         	goto	l200
  4672   001ED8                     l4962:
  4673   001ED8  0E00               	movlw	0
  4674   001EDA  6E0C               	movwf	(Flash@inc+1)^0,c
  4675   001EDC  0E08               	movlw	8
  4676   001EDE  6E0B               	movwf	Flash@inc^0,c
  4677   001EE0  C096  F00D         	movff	_Place3,Flash@PlaceN
  4678   001EE4  C097  F00E         	movff	_Place3+1,Flash@PlaceN+1
  4679   001EE8  EC5E  F021         	call	_Flash	;wreg free
  4680                           
  4681                           ;LCD_Screens.c: 211:             break;
  4682   001EEC  EF9E  F00F         	goto	l200
  4683   001EF0                     l4966:
  4684   001EF0  C094  F010         	movff	_Place4,??_Screen_Device_2
  4685   001EF4  C095  F011         	movff	_Place4+1,??_Screen_Device_2+1
  4686                           
  4687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4688                           ; Switch size 1, requested type "simple"
  4689                           ; Number of cases is 1, Range of values is 0 to 0
  4690                           ; switch strategies available:
  4691                           ; Name         Instructions Cycles
  4692                           ; simple_byte            4     3 (average)
  4693                           ;	Chosen strategy is simple_byte
  4694   001EF8  5011               	movf	(??_Screen_Device_2+1)^0,w,c
  4695   001EFA  0A00               	xorlw	0	; case 0
  4696   001EFC  B4D8               	btfsc	status,2,c
  4697   001EFE  EF83  F00F         	goto	l5496
  4698   001F02  EF9E  F00F         	goto	l200
  4699   001F06                     l5496:
  4700                           
  4701                           ; Switch size 1, requested type "simple"
  4702                           ; Number of cases is 6, Range of values is 1 to 8
  4703                           ; switch strategies available:
  4704                           ; Name         Instructions Cycles
  4705                           ; simple_byte           19    10 (average)
  4706                           ;	Chosen strategy is simple_byte
  4707   001F06  5010               	movf	??_Screen_Device_2^0,w,c
  4708   001F08  0A01               	xorlw	1	; case 1
  4709   001F0A  B4D8               	btfsc	status,2,c
  4710   001F0C  EF30  F00F         	goto	l4952
  4711   001F10  0A03               	xorlw	3	; case 2
  4712   001F12  B4D8               	btfsc	status,2,c
  4713   001F14  EF3C  F00F         	goto	l4954
  4714   001F18  0A06               	xorlw	6	; case 4
  4715   001F1A  B4D8               	btfsc	status,2,c
  4716   001F1C  EF48  F00F         	goto	l4956
  4717   001F20  0A01               	xorlw	1	; case 5
  4718   001F22  B4D8               	btfsc	status,2,c
  4719   001F24  EF54  F00F         	goto	l4958
  4720   001F28  0A02               	xorlw	2	; case 7
  4721   001F2A  B4D8               	btfsc	status,2,c
  4722   001F2C  EF60  F00F         	goto	l4960
  4723   001F30  0A0F               	xorlw	15	; case 8
  4724   001F32  B4D8               	btfsc	status,2,c
  4725   001F34  EF6C  F00F         	goto	l4962
  4726   001F38  EF9E  F00F         	goto	l200
  4727   001F3C                     l200:
  4728   001F3C  0012               	return		;funcret
  4729   001F3E                     __end_of_Screen_Device_2:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function _Screen_Device_1 *****************
  4733 ;; Defined at:
  4734 ;;		line 54 in file "LCD_Screens.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;		None
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  i               2   19[COMRAM] int 
  4739 ;;  i               2   17[COMRAM] int 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      void 
  4742 ;; Registers used:
  4743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4749 ;;      Params:         0       0       0       0       0       0       0       0       0
  4750 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4751 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4752 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4753 ;;Total ram usage:        6 bytes
  4754 ;; Hardware stack levels used: 1
  4755 ;; Hardware stack levels required when called: 4
  4756 ;; This function calls:
  4757 ;;		_Flash
  4758 ;;		_LCD_goto_xy
  4759 ;;		_LCD_write
  4760 ;;		_LCD_write_string
  4761 ;;		_Set_Time
  4762 ;; This function is called by:
  4763 ;;		_main
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text9
  4768   001F3E                     __ptext9:
  4769                           	callstack 0
  4770   001F3E                     _Screen_Device_1:
  4771                           	callstack 26
  4772   001F3E                     
  4773                           ;LCD_Screens.c: 56:     LCD_goto_xy(0, 0);
  4774   001F3E  0E00               	movlw	0
  4775   001F40  6E03               	movwf	(LCD_goto_xy@x+1)^0,c
  4776   001F42  0E00               	movlw	0
  4777   001F44  6E02               	movwf	LCD_goto_xy@x^0,c
  4778   001F46  0E00               	movlw	0
  4779   001F48  6E05               	movwf	(LCD_goto_xy@y+1)^0,c
  4780   001F4A  0E00               	movlw	0
  4781   001F4C  6E04               	movwf	LCD_goto_xy@y^0,c
  4782   001F4E  ECB3  F01E         	call	_LCD_goto_xy	;wreg free
  4783   001F52                     
  4784                           ;LCD_Screens.c: 57:     LCD_write_string("Start1: ");
  4785   001F52  0E2B               	movlw	low STR_12
  4786   001F54  6E03               	movwf	LCD_write_string@str^0,c
  4787   001F56  0E08               	movlw	high STR_12
  4788   001F58  6E04               	movwf	(LCD_write_string@str+1)^0,c
  4789   001F5A  EC3D  F020         	call	_LCD_write_string	;wreg free
  4790   001F5E                     
  4791                           ;LCD_Screens.c: 59:     for (int i = 0; i < 8; i++)
  4792   001F5E  0E00               	movlw	0
  4793   001F60  6E13               	movwf	(Screen_Device_1@i+1)^0,c
  4794   001F62  0E00               	movlw	0
  4795   001F64  6E12               	movwf	Screen_Device_1@i^0,c
  4796   001F66                     l4754:
  4797                           
  4798                           ;LCD_Screens.c: 60:     {;LCD_Screens.c: 61:         LCD_write(time1[0][i]);
  4799   001F66  0EC0               	movlw	low _time1
  4800   001F68  2412               	addwf	Screen_Device_1@i^0,w,c
  4801   001F6A  6ED9               	movwf	fsr2l,c
  4802   001F6C  0E00               	movlw	high _time1
  4803   001F6E  2013               	addwfc	(Screen_Device_1@i+1)^0,w,c
  4804   001F70  6EDA               	movwf	fsr2h,c
  4805   001F72  50DF               	movf	indf2,w,c
  4806   001F74  EC2D  F022         	call	_LCD_write
  4807   001F78                     
  4808                           ;LCD_Screens.c: 62:     }
  4809   001F78  4A12               	infsnz	Screen_Device_1@i^0,f,c
  4810   001F7A  2A13               	incf	(Screen_Device_1@i+1)^0,f,c
  4811   001F7C  BE13               	btfsc	(Screen_Device_1@i+1)^0,7,c
  4812   001F7E  EFCA  F00F         	goto	u4791
  4813   001F82  5013               	movf	(Screen_Device_1@i+1)^0,w,c
  4814   001F84  E109               	bnz	u4790
  4815   001F86  0E08               	movlw	8
  4816   001F88  5C12               	subwf	Screen_Device_1@i^0,w,c
  4817   001F8A  A0D8               	btfss	status,0,c
  4818   001F8C  EFCA  F00F         	goto	u4791
  4819   001F90  EFCC  F00F         	goto	u4790
  4820   001F94                     u4791:
  4821   001F94  EFB3  F00F         	goto	l4754
  4822   001F98                     u4790:
  4823   001F98                     
  4824                           ;LCD_Screens.c: 64:     LCD_goto_xy(1, 0);
  4825   001F98  0E00               	movlw	0
  4826   001F9A  6E03               	movwf	(LCD_goto_xy@x+1)^0,c
  4827   001F9C  0E01               	movlw	1
  4828   001F9E  6E02               	movwf	LCD_goto_xy@x^0,c
  4829   001FA0  0E00               	movlw	0
  4830   001FA2  6E05               	movwf	(LCD_goto_xy@y+1)^0,c
  4831   001FA4  0E00               	movlw	0
  4832   001FA6  6E04               	movwf	LCD_goto_xy@y^0,c
  4833   001FA8  ECB3  F01E         	call	_LCD_goto_xy	;wreg free
  4834   001FAC                     
  4835                           ;LCD_Screens.c: 65:     LCD_write_string("Finish: ");
  4836   001FAC  0E3D               	movlw	low STR_13
  4837   001FAE  6E03               	movwf	LCD_write_string@str^0,c
  4838   001FB0  0E08               	movlw	high STR_13
  4839   001FB2  6E04               	movwf	(LCD_write_string@str+1)^0,c
  4840   001FB4  EC3D  F020         	call	_LCD_write_string	;wreg free
  4841   001FB8                     
  4842                           ;LCD_Screens.c: 67:     for (int i = 0; i < 8; i++)
  4843   001FB8  0E00               	movlw	0
  4844   001FBA  6E15               	movwf	(Screen_Device_1@i_153+1)^0,c
  4845   001FBC  0E00               	movlw	0
  4846   001FBE  6E14               	movwf	Screen_Device_1@i_153^0,c
  4847   001FC0                     l4770:
  4848                           
  4849                           ;LCD_Screens.c: 68:     {;LCD_Screens.c: 69:         LCD_write(time1[1][i]);
  4850   001FC0  0EC8               	movlw	low (_time1+8)
  4851   001FC2  2414               	addwf	Screen_Device_1@i_153^0,w,c
  4852   001FC4  6ED9               	movwf	fsr2l,c
  4853   001FC6  0E00               	movlw	high (_time1+8)
  4854   001FC8  2015               	addwfc	(Screen_Device_1@i_153+1)^0,w,c
  4855   001FCA  6EDA               	movwf	fsr2h,c
  4856   001FCC  50DF               	movf	indf2,w,c
  4857   001FCE  EC2D  F022         	call	_LCD_write
  4858   001FD2                     
  4859                           ;LCD_Screens.c: 70:     }
  4860   001FD2  4A14               	infsnz	Screen_Device_1@i_153^0,f,c
  4861   001FD4  2A15               	incf	(Screen_Device_1@i_153+1)^0,f,c
  4862   001FD6  BE15               	btfsc	(Screen_Device_1@i_153+1)^0,7,c
  4863   001FD8  EFF7  F00F         	goto	u4801
  4864   001FDC  5015               	movf	(Screen_Device_1@i_153+1)^0,w,c
  4865   001FDE  E109               	bnz	u4800
  4866   001FE0  0E08               	movlw	8
  4867   001FE2  5C14               	subwf	Screen_Device_1@i_153^0,w,c
  4868   001FE4  A0D8               	btfss	status,0,c
  4869   001FE6  EFF7  F00F         	goto	u4801
  4870   001FEA  EFF9  F00F         	goto	u4800
  4871   001FEE                     u4801:
  4872   001FEE  EFE0  F00F         	goto	l4770
  4873   001FF2                     u4800:
  4874   001FF2                     
  4875                           ;LCD_Screens.c: 71:     _delay((unsigned long)((50)*(8000000UL/4000.0)));
  4876   001FF2  0E82               	movlw	130
  4877   001FF4  6E10               	movwf	??_Screen_Device_1^0,c
  4878   001FF6  0EDE               	movlw	222
  4879   001FF8                     u5317:
  4880   001FF8  2EE8               	decfsz	wreg,f,c
  4881   001FFA  D7FE               	bra	u5317
  4882   001FFC  2E10               	decfsz	??_Screen_Device_1^0,f,c
  4883   001FFE  D7FC               	bra	u5317
  4884   002000                     
  4885                           ;LCD_Screens.c: 73:     if(((PORTB & (1<<3))? 1:0))
  4886   002000  A681               	btfss	129,3,c	;volatile
  4887   002002  EF05  F010         	goto	u4811
  4888   002006  EF07  F010         	goto	u4810
  4889   00200A                     u4811:
  4890   00200A  EF78  F010         	goto	l4808
  4891   00200E                     u4810:
  4892   00200E                     
  4893                           ;LCD_Screens.c: 74:     {;LCD_Screens.c: 75:         _delay((unsigned long)((5)*(8000000
      +                          UL/4000.0)));
  4894   00200E  0E0D               	movlw	13
  4895   002010  6E10               	movwf	??_Screen_Device_1^0,c
  4896   002012  0EFC               	movlw	252
  4897   002014                     u5327:
  4898   002014  2EE8               	decfsz	wreg,f,c
  4899   002016  D7FE               	bra	u5327
  4900   002018  2E10               	decfsz	??_Screen_Device_1^0,f,c
  4901   00201A  D7FC               	bra	u5327
  4902   00201C                     l134:
  4903   00201C  B681               	btfsc	129,3,c	;volatile
  4904   00201E  EF13  F010         	goto	u4821
  4905   002022  EF15  F010         	goto	u4820
  4906   002026                     u4821:
  4907   002026  EF0E  F010         	goto	l134
  4908   00202A                     u4820:
  4909   00202A                     
  4910                           ;LCD_Screens.c: 78:         if(Place1<9)
  4911   00202A  0100               	movlb	0	; () banked
  4912   00202C  BF9B               	btfsc	(_Place1+1)& (0+255),7,b
  4913   00202E  EF24  F010         	goto	u4830
  4914   002032  519B               	movf	(_Place1+1)& (0+255),w,b
  4915   002034  E107               	bnz	u4831
  4916   002036  0E09               	movlw	9
  4917   002038  5D9A               	subwf	_Place1& (0+255),w,b
  4918   00203A  B0D8               	btfsc	status,0,c
  4919   00203C  EF22  F010         	goto	u4831
  4920   002040  EF24  F010         	goto	u4830
  4921   002044                     u4831:
  4922   002044  EF28  F010         	goto	l4786
  4923   002048                     u4830:
  4924   002048                     
  4925                           ; BSR set to: 0
  4926                           ;LCD_Screens.c: 79:         {;LCD_Screens.c: 80:             Place1++;
  4927   002048  4B9A               	infsnz	_Place1& (0+255),f,b
  4928   00204A  2B9B               	incf	(_Place1+1)& (0+255),f,b
  4929                           
  4930                           ;LCD_Screens.c: 81:         }
  4931   00204C  EF2A  F010         	goto	l4788
  4932   002050                     l4786:
  4933                           
  4934                           ; BSR set to: 0
  4935   002050  4B98               	infsnz	_Place2& (0+255),f,b
  4936   002052  2B99               	incf	(_Place2+1)& (0+255),f,b
  4937   002054                     l4788:
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;LCD_Screens.c: 84:         if(Place1==3) Place1=4;
  4941   002054  0E03               	movlw	3
  4942   002056  199A               	xorwf	_Place1& (0+255),w,b
  4943   002058  119B               	iorwf	(_Place1+1)& (0+255),w,b
  4944   00205A  A4D8               	btfss	status,2,c
  4945   00205C  EF32  F010         	goto	u4841
  4946   002060  EF34  F010         	goto	u4840
  4947   002064                     u4841:
  4948   002064  EF38  F010         	goto	l4792
  4949   002068                     u4840:
  4950   002068                     
  4951                           ; BSR set to: 0
  4952   002068  0E00               	movlw	0
  4953   00206A  6F9B               	movwf	(_Place1+1)& (0+255),b
  4954   00206C  0E04               	movlw	4
  4955   00206E  6F9A               	movwf	_Place1& (0+255),b
  4956   002070                     l4792:
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;LCD_Screens.c: 85:         if(Place1==6) Place1=7;
  4960   002070  0E06               	movlw	6
  4961   002072  199A               	xorwf	_Place1& (0+255),w,b
  4962   002074  119B               	iorwf	(_Place1+1)& (0+255),w,b
  4963   002076  A4D8               	btfss	status,2,c
  4964   002078  EF40  F010         	goto	u4851
  4965   00207C  EF42  F010         	goto	u4850
  4966   002080                     u4851:
  4967   002080  EF46  F010         	goto	l4796
  4968   002084                     u4850:
  4969   002084                     
  4970                           ; BSR set to: 0
  4971   002084  0E00               	movlw	0
  4972   002086  6F9B               	movwf	(_Place1+1)& (0+255),b
  4973   002088  0E07               	movlw	7
  4974   00208A  6F9A               	movwf	_Place1& (0+255),b
  4975   00208C                     l4796:
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;LCD_Screens.c: 86:         if(Place2==3) Place2=4;
  4979   00208C  0E03               	movlw	3
  4980   00208E  1998               	xorwf	_Place2& (0+255),w,b
  4981   002090  1199               	iorwf	(_Place2+1)& (0+255),w,b
  4982   002092  A4D8               	btfss	status,2,c
  4983   002094  EF4E  F010         	goto	u4861
  4984   002098  EF50  F010         	goto	u4860
  4985   00209C                     u4861:
  4986   00209C  EF54  F010         	goto	l4800
  4987   0020A0                     u4860:
  4988   0020A0                     
  4989                           ; BSR set to: 0
  4990   0020A0  0E00               	movlw	0
  4991   0020A2  6F99               	movwf	(_Place2+1)& (0+255),b
  4992   0020A4  0E04               	movlw	4
  4993   0020A6  6F98               	movwf	_Place2& (0+255),b
  4994   0020A8                     l4800:
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;LCD_Screens.c: 87:         if(Place2==6) Place2=7;
  4998   0020A8  0E06               	movlw	6
  4999   0020AA  1998               	xorwf	_Place2& (0+255),w,b
  5000   0020AC  1199               	iorwf	(_Place2+1)& (0+255),w,b
  5001   0020AE  A4D8               	btfss	status,2,c
  5002   0020B0  EF5C  F010         	goto	u4871
  5003   0020B4  EF5E  F010         	goto	u4870
  5004   0020B8                     u4871:
  5005   0020B8  EF62  F010         	goto	l4804
  5006   0020BC                     u4870:
  5007   0020BC                     
  5008                           ; BSR set to: 0
  5009   0020BC  0E00               	movlw	0
  5010   0020BE  6F99               	movwf	(_Place2+1)& (0+255),b
  5011   0020C0  0E07               	movlw	7
  5012   0020C2  6F98               	movwf	_Place2& (0+255),b
  5013   0020C4                     l4804:
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;LCD_Screens.c: 89:         if(Place2>8)
  5017   0020C4  BF99               	btfsc	(_Place2+1)& (0+255),7,b
  5018   0020C6  EF6E  F010         	goto	u4881
  5019   0020CA  5199               	movf	(_Place2+1)& (0+255),w,b
  5020   0020CC  E109               	bnz	u4880
  5021   0020CE  0E09               	movlw	9
  5022   0020D0  5D98               	subwf	_Place2& (0+255),w,b
  5023   0020D2  A0D8               	btfss	status,0,c
  5024   0020D4  EF6E  F010         	goto	u4881
  5025   0020D8  EF70  F010         	goto	u4880
  5026   0020DC                     u4881:
  5027   0020DC  EF78  F010         	goto	l4808
  5028   0020E0                     u4880:
  5029   0020E0                     
  5030                           ; BSR set to: 0
  5031                           ;LCD_Screens.c: 90:         {;LCD_Screens.c: 91:             Place1=0;
  5032   0020E0  0E00               	movlw	0
  5033   0020E2  6F9B               	movwf	(_Place1+1)& (0+255),b
  5034   0020E4  0E00               	movlw	0
  5035   0020E6  6F9A               	movwf	_Place1& (0+255),b
  5036                           
  5037                           ;LCD_Screens.c: 92:             Place2=0;
  5038   0020E8  0E00               	movlw	0
  5039   0020EA  6F99               	movwf	(_Place2+1)& (0+255),b
  5040   0020EC  0E00               	movlw	0
  5041   0020EE  6F98               	movwf	_Place2& (0+255),b
  5042   0020F0                     l4808:
  5043                           
  5044                           ;LCD_Screens.c: 96:         if (Place1 > 0 && Place1 < 9) {
  5045   0020F0  0100               	movlb	0	; () banked
  5046   0020F2  BF9B               	btfsc	(_Place1+1)& (0+255),7,b
  5047   0020F4  EF84  F010         	goto	u4891
  5048   0020F8  519B               	movf	(_Place1+1)& (0+255),w,b
  5049   0020FA  E108               	bnz	u4890
  5050   0020FC  059A               	decf	_Place1& (0+255),w,b
  5051   0020FE  A0D8               	btfss	status,0,c
  5052   002100  EF84  F010         	goto	u4891
  5053   002104  EF86  F010         	goto	u4890
  5054   002108                     u4891:
  5055   002108  EFA0  F010         	goto	l4814
  5056   00210C                     u4890:
  5057   00210C                     
  5058                           ; BSR set to: 0
  5059   00210C  BF9B               	btfsc	(_Place1+1)& (0+255),7,b
  5060   00210E  EF94  F010         	goto	u4900
  5061   002112  519B               	movf	(_Place1+1)& (0+255),w,b
  5062   002114  E107               	bnz	u4901
  5063   002116  0E09               	movlw	9
  5064   002118  5D9A               	subwf	_Place1& (0+255),w,b
  5065   00211A  B0D8               	btfsc	status,0,c
  5066   00211C  EF92  F010         	goto	u4901
  5067   002120  EF94  F010         	goto	u4900
  5068   002124                     u4901:
  5069   002124  EFA0  F010         	goto	l4814
  5070   002128                     u4900:
  5071   002128                     
  5072                           ; BSR set to: 0
  5073                           ;LCD_Screens.c: 97:         Set_Time(0, Place1);
  5074   002128  0E00               	movlw	0
  5075   00212A  6E02               	movwf	(Set_Time@Num+1)^0,c
  5076   00212C  0E00               	movlw	0
  5077   00212E  6E01               	movwf	Set_Time@Num^0,c
  5078   002130  C09A  F003         	movff	_Place1,Set_Time@Place
  5079   002134  C09B  F004         	movff	_Place1+1,Set_Time@Place+1
  5080   002138  EC28  F004         	call	_Set_Time	;wreg free
  5081                           
  5082                           ;LCD_Screens.c: 98:     }
  5083   00213C  EF0F  F011         	goto	l4834
  5084   002140                     l4814:
  5085                           
  5086                           ; BSR set to: 0
  5087   002140  BF99               	btfsc	(_Place2+1)& (0+255),7,b
  5088   002142  EFAB  F010         	goto	u4911
  5089   002146  5199               	movf	(_Place2+1)& (0+255),w,b
  5090   002148  E108               	bnz	u4910
  5091   00214A  0598               	decf	_Place2& (0+255),w,b
  5092   00214C  A0D8               	btfss	status,0,c
  5093   00214E  EFAB  F010         	goto	u4911
  5094   002152  EFAD  F010         	goto	u4910
  5095   002156                     u4911:
  5096   002156  EF0F  F011         	goto	l4834
  5097   00215A                     u4910:
  5098   00215A                     
  5099                           ; BSR set to: 0
  5100   00215A  BF99               	btfsc	(_Place2+1)& (0+255),7,b
  5101   00215C  EFBB  F010         	goto	u4920
  5102   002160  5199               	movf	(_Place2+1)& (0+255),w,b
  5103   002162  E107               	bnz	u4921
  5104   002164  0E09               	movlw	9
  5105   002166  5D98               	subwf	_Place2& (0+255),w,b
  5106   002168  B0D8               	btfsc	status,0,c
  5107   00216A  EFB9  F010         	goto	u4921
  5108   00216E  EFBB  F010         	goto	u4920
  5109   002172                     u4921:
  5110   002172  EF0F  F011         	goto	l4834
  5111   002176                     u4920:
  5112   002176                     
  5113                           ; BSR set to: 0
  5114                           ;LCD_Screens.c: 100:         Set_Time(1, Place2);
  5115   002176  0E00               	movlw	0
  5116   002178  6E02               	movwf	(Set_Time@Num+1)^0,c
  5117   00217A  0E01               	movlw	1
  5118   00217C  6E01               	movwf	Set_Time@Num^0,c
  5119   00217E  C098  F003         	movff	_Place2,Set_Time@Place
  5120   002182  C099  F004         	movff	_Place2+1,Set_Time@Place+1
  5121   002186  EC28  F004         	call	_Set_Time	;wreg free
  5122   00218A  EF0F  F011         	goto	l4834
  5123   00218E                     l4820:
  5124   00218E  0E00               	movlw	0
  5125   002190  6E0C               	movwf	(Flash@inc+1)^0,c
  5126   002192  0E01               	movlw	1
  5127   002194  6E0B               	movwf	Flash@inc^0,c
  5128   002196  C09A  F00D         	movff	_Place1,Flash@PlaceN
  5129   00219A  C09B  F00E         	movff	_Place1+1,Flash@PlaceN+1
  5130   00219E  EC5E  F021         	call	_Flash	;wreg free
  5131                           
  5132                           ;LCD_Screens.c: 105:             break;
  5133   0021A2  EF7D  F011         	goto	l4850
  5134   0021A6                     l4822:
  5135   0021A6  0E00               	movlw	0
  5136   0021A8  6E0C               	movwf	(Flash@inc+1)^0,c
  5137   0021AA  0E02               	movlw	2
  5138   0021AC  6E0B               	movwf	Flash@inc^0,c
  5139   0021AE  C09A  F00D         	movff	_Place1,Flash@PlaceN
  5140   0021B2  C09B  F00E         	movff	_Place1+1,Flash@PlaceN+1
  5141   0021B6  EC5E  F021         	call	_Flash	;wreg free
  5142                           
  5143                           ;LCD_Screens.c: 107:             break;
  5144   0021BA  EF7D  F011         	goto	l4850
  5145   0021BE                     l4824:
  5146   0021BE  0E00               	movlw	0
  5147   0021C0  6E0C               	movwf	(Flash@inc+1)^0,c
  5148   0021C2  0E04               	movlw	4
  5149   0021C4  6E0B               	movwf	Flash@inc^0,c
  5150   0021C6  C09A  F00D         	movff	_Place1,Flash@PlaceN
  5151   0021CA  C09B  F00E         	movff	_Place1+1,Flash@PlaceN+1
  5152   0021CE  EC5E  F021         	call	_Flash	;wreg free
  5153                           
  5154                           ;LCD_Screens.c: 109:             break;
  5155   0021D2  EF7D  F011         	goto	l4850
  5156   0021D6                     l4826:
  5157   0021D6  0E00               	movlw	0
  5158   0021D8  6E0C               	movwf	(Flash@inc+1)^0,c
  5159   0021DA  0E05               	movlw	5
  5160   0021DC  6E0B               	movwf	Flash@inc^0,c
  5161   0021DE  C09A  F00D         	movff	_Place1,Flash@PlaceN
  5162   0021E2  C09B  F00E         	movff	_Place1+1,Flash@PlaceN+1
  5163   0021E6  EC5E  F021         	call	_Flash	;wreg free
  5164                           
  5165                           ;LCD_Screens.c: 111:             break;
  5166   0021EA  EF7D  F011         	goto	l4850
  5167   0021EE                     l4828:
  5168   0021EE  0E00               	movlw	0
  5169   0021F0  6E0C               	movwf	(Flash@inc+1)^0,c
  5170   0021F2  0E07               	movlw	7
  5171   0021F4  6E0B               	movwf	Flash@inc^0,c
  5172   0021F6  C09A  F00D         	movff	_Place1,Flash@PlaceN
  5173   0021FA  C09B  F00E         	movff	_Place1+1,Flash@PlaceN+1
  5174   0021FE  EC5E  F021         	call	_Flash	;wreg free
  5175                           
  5176                           ;LCD_Screens.c: 113:             break;
  5177   002202  EF7D  F011         	goto	l4850
  5178   002206                     l4830:
  5179   002206  0E00               	movlw	0
  5180   002208  6E0C               	movwf	(Flash@inc+1)^0,c
  5181   00220A  0E08               	movlw	8
  5182   00220C  6E0B               	movwf	Flash@inc^0,c
  5183   00220E  C09A  F00D         	movff	_Place1,Flash@PlaceN
  5184   002212  C09B  F00E         	movff	_Place1+1,Flash@PlaceN+1
  5185   002216  EC5E  F021         	call	_Flash	;wreg free
  5186                           
  5187                           ;LCD_Screens.c: 115:             break;
  5188   00221A  EF7D  F011         	goto	l4850
  5189   00221E                     l4834:
  5190   00221E  C09A  F010         	movff	_Place1,??_Screen_Device_1
  5191   002222  C09B  F011         	movff	_Place1+1,??_Screen_Device_1+1
  5192                           
  5193                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5194                           ; Switch size 1, requested type "simple"
  5195                           ; Number of cases is 1, Range of values is 0 to 0
  5196                           ; switch strategies available:
  5197                           ; Name         Instructions Cycles
  5198                           ; simple_byte            4     3 (average)
  5199                           ;	Chosen strategy is simple_byte
  5200   002226  5011               	movf	(??_Screen_Device_1+1)^0,w,c
  5201   002228  0A00               	xorlw	0	; case 0
  5202   00222A  B4D8               	btfsc	status,2,c
  5203   00222C  EF1A  F011         	goto	l5498
  5204   002230  EF7D  F011         	goto	l4850
  5205   002234                     l5498:
  5206                           
  5207                           ; Switch size 1, requested type "simple"
  5208                           ; Number of cases is 6, Range of values is 1 to 8
  5209                           ; switch strategies available:
  5210                           ; Name         Instructions Cycles
  5211                           ; simple_byte           19    10 (average)
  5212                           ;	Chosen strategy is simple_byte
  5213   002234  5010               	movf	??_Screen_Device_1^0,w,c
  5214   002236  0A01               	xorlw	1	; case 1
  5215   002238  B4D8               	btfsc	status,2,c
  5216   00223A  EFC7  F010         	goto	l4820
  5217   00223E  0A03               	xorlw	3	; case 2
  5218   002240  B4D8               	btfsc	status,2,c
  5219   002242  EFD3  F010         	goto	l4822
  5220   002246  0A06               	xorlw	6	; case 4
  5221   002248  B4D8               	btfsc	status,2,c
  5222   00224A  EFDF  F010         	goto	l4824
  5223   00224E  0A01               	xorlw	1	; case 5
  5224   002250  B4D8               	btfsc	status,2,c
  5225   002252  EFEB  F010         	goto	l4826
  5226   002256  0A02               	xorlw	2	; case 7
  5227   002258  B4D8               	btfsc	status,2,c
  5228   00225A  EFF7  F010         	goto	l4828
  5229   00225E  0A0F               	xorlw	15	; case 8
  5230   002260  B4D8               	btfsc	status,2,c
  5231   002262  EF03  F011         	goto	l4830
  5232   002266  EF7D  F011         	goto	l4850
  5233   00226A                     l4836:
  5234   00226A  0E00               	movlw	0
  5235   00226C  6E0C               	movwf	(Flash@inc+1)^0,c
  5236   00226E  0E01               	movlw	1
  5237   002270  6E0B               	movwf	Flash@inc^0,c
  5238   002272  C09A  F00D         	movff	_Place1,Flash@PlaceN
  5239   002276  C09B  F00E         	movff	_Place1+1,Flash@PlaceN+1
  5240   00227A  EC5E  F021         	call	_Flash	;wreg free
  5241                           
  5242                           ;LCD_Screens.c: 120:             break;
  5243   00227E  EFA3  F011         	goto	l163
  5244   002282                     l4838:
  5245   002282  0E00               	movlw	0
  5246   002284  6E0C               	movwf	(Flash@inc+1)^0,c
  5247   002286  0E02               	movlw	2
  5248   002288  6E0B               	movwf	Flash@inc^0,c
  5249   00228A  C09A  F00D         	movff	_Place1,Flash@PlaceN
  5250   00228E  C09B  F00E         	movff	_Place1+1,Flash@PlaceN+1
  5251   002292  EC5E  F021         	call	_Flash	;wreg free
  5252                           
  5253                           ;LCD_Screens.c: 122:             break;
  5254   002296  EFA3  F011         	goto	l163
  5255   00229A                     l4840:
  5256   00229A  0E00               	movlw	0
  5257   00229C  6E0C               	movwf	(Flash@inc+1)^0,c
  5258   00229E  0E04               	movlw	4
  5259   0022A0  6E0B               	movwf	Flash@inc^0,c
  5260   0022A2  C09A  F00D         	movff	_Place1,Flash@PlaceN
  5261   0022A6  C09B  F00E         	movff	_Place1+1,Flash@PlaceN+1
  5262   0022AA  EC5E  F021         	call	_Flash	;wreg free
  5263                           
  5264                           ;LCD_Screens.c: 124:             break;
  5265   0022AE  EFA3  F011         	goto	l163
  5266   0022B2                     l4842:
  5267   0022B2  0E00               	movlw	0
  5268   0022B4  6E0C               	movwf	(Flash@inc+1)^0,c
  5269   0022B6  0E05               	movlw	5
  5270   0022B8  6E0B               	movwf	Flash@inc^0,c
  5271   0022BA  C09A  F00D         	movff	_Place1,Flash@PlaceN
  5272   0022BE  C09B  F00E         	movff	_Place1+1,Flash@PlaceN+1
  5273   0022C2  EC5E  F021         	call	_Flash	;wreg free
  5274                           
  5275                           ;LCD_Screens.c: 126:             break;
  5276   0022C6  EFA3  F011         	goto	l163
  5277   0022CA                     l4844:
  5278   0022CA  0E00               	movlw	0
  5279   0022CC  6E0C               	movwf	(Flash@inc+1)^0,c
  5280   0022CE  0E07               	movlw	7
  5281   0022D0  6E0B               	movwf	Flash@inc^0,c
  5282   0022D2  C09A  F00D         	movff	_Place1,Flash@PlaceN
  5283   0022D6  C09B  F00E         	movff	_Place1+1,Flash@PlaceN+1
  5284   0022DA  EC5E  F021         	call	_Flash	;wreg free
  5285                           
  5286                           ;LCD_Screens.c: 128:             break;
  5287   0022DE  EFA3  F011         	goto	l163
  5288   0022E2                     l4846:
  5289   0022E2  0E00               	movlw	0
  5290   0022E4  6E0C               	movwf	(Flash@inc+1)^0,c
  5291   0022E6  0E08               	movlw	8
  5292   0022E8  6E0B               	movwf	Flash@inc^0,c
  5293   0022EA  C09A  F00D         	movff	_Place1,Flash@PlaceN
  5294   0022EE  C09B  F00E         	movff	_Place1+1,Flash@PlaceN+1
  5295   0022F2  EC5E  F021         	call	_Flash	;wreg free
  5296                           
  5297                           ;LCD_Screens.c: 130:             break;
  5298   0022F6  EFA3  F011         	goto	l163
  5299   0022FA                     l4850:
  5300   0022FA  C098  F010         	movff	_Place2,??_Screen_Device_1
  5301   0022FE  C099  F011         	movff	_Place2+1,??_Screen_Device_1+1
  5302                           
  5303                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5304                           ; Switch size 1, requested type "simple"
  5305                           ; Number of cases is 1, Range of values is 0 to 0
  5306                           ; switch strategies available:
  5307                           ; Name         Instructions Cycles
  5308                           ; simple_byte            4     3 (average)
  5309                           ;	Chosen strategy is simple_byte
  5310   002302  5011               	movf	(??_Screen_Device_1+1)^0,w,c
  5311   002304  0A00               	xorlw	0	; case 0
  5312   002306  B4D8               	btfsc	status,2,c
  5313   002308  EF88  F011         	goto	l5500
  5314   00230C  EFA3  F011         	goto	l163
  5315   002310                     l5500:
  5316                           
  5317                           ; Switch size 1, requested type "simple"
  5318                           ; Number of cases is 6, Range of values is 1 to 8
  5319                           ; switch strategies available:
  5320                           ; Name         Instructions Cycles
  5321                           ; simple_byte           19    10 (average)
  5322                           ;	Chosen strategy is simple_byte
  5323   002310  5010               	movf	??_Screen_Device_1^0,w,c
  5324   002312  0A01               	xorlw	1	; case 1
  5325   002314  B4D8               	btfsc	status,2,c
  5326   002316  EF35  F011         	goto	l4836
  5327   00231A  0A03               	xorlw	3	; case 2
  5328   00231C  B4D8               	btfsc	status,2,c
  5329   00231E  EF41  F011         	goto	l4838
  5330   002322  0A06               	xorlw	6	; case 4
  5331   002324  B4D8               	btfsc	status,2,c
  5332   002326  EF4D  F011         	goto	l4840
  5333   00232A  0A01               	xorlw	1	; case 5
  5334   00232C  B4D8               	btfsc	status,2,c
  5335   00232E  EF59  F011         	goto	l4842
  5336   002332  0A02               	xorlw	2	; case 7
  5337   002334  B4D8               	btfsc	status,2,c
  5338   002336  EF65  F011         	goto	l4844
  5339   00233A  0A0F               	xorlw	15	; case 8
  5340   00233C  B4D8               	btfsc	status,2,c
  5341   00233E  EF71  F011         	goto	l4846
  5342   002342  EFA3  F011         	goto	l163
  5343   002346                     l163:
  5344   002346  0012               	return		;funcret
  5345   002348                     __end_of_Screen_Device_1:
  5346                           	callstack 0
  5347                           
  5348 ;; *************** function _Set_Time *****************
  5349 ;; Defined at:
  5350 ;;		line 13 in file "App_Functions.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  Num             2    0[COMRAM] int 
  5353 ;;  Place           2    2[COMRAM] int 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;		None
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      void 
  5358 ;; Registers used:
  5359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5365 ;;      Params:         4       0       0       0       0       0       0       0       0
  5366 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5367 ;;      Temps:          9       0       0       0       0       0       0       0       0
  5368 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5369 ;;Total ram usage:       13 bytes
  5370 ;; Hardware stack levels used: 1
  5371 ;; Hardware stack levels required when called: 1
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		_Screen_Device_1
  5376 ;;		_Screen_Device_2
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text10
  5381   000850                     __ptext10:
  5382                           	callstack 0
  5383   000850                     _Set_Time:
  5384                           	callstack 28
  5385   000850                     
  5386                           ;App_Functions.c: 13: void Set_Time(int Num, int Place);App_Functions.c: 14: {;App_Funct
      +                          ions.c: 15:     if(((PORTB & (1<<4))? 1:0) && Place > 0)
  5387   000850  A881               	btfss	129,4,c	;volatile
  5388   000852  EF2D  F004         	goto	u3291
  5389   000856  EF2F  F004         	goto	u3290
  5390   00085A                     u3291:
  5391   00085A  EFC2  F004         	goto	l3932
  5392   00085E                     u3290:
  5393   00085E  BE04               	btfsc	(Set_Time@Place+1)^0,7,c
  5394   000860  EF3A  F004         	goto	u3301
  5395   000864  5004               	movf	(Set_Time@Place+1)^0,w,c
  5396   000866  E108               	bnz	u3300
  5397   000868  0403               	decf	Set_Time@Place^0,w,c
  5398   00086A  A0D8               	btfss	status,0,c
  5399   00086C  EF3A  F004         	goto	u3301
  5400   000870  EF3C  F004         	goto	u3300
  5401   000874                     u3301:
  5402   000874  EFC2  F004         	goto	l3932
  5403   000878                     u3300:
  5404   000878                     
  5405                           ;App_Functions.c: 16:     {;App_Functions.c: 17:         _delay((unsigned long)((5)*(800
      +                          0000UL/4000.0)));
  5406   000878  0E0D               	movlw	13
  5407   00087A  6E05               	movwf	??_Set_Time^0,c
  5408   00087C  0EFC               	movlw	252
  5409   00087E                     u5337:
  5410   00087E  2EE8               	decfsz	wreg,f,c
  5411   000880  D7FE               	bra	u5337
  5412   000882  2E05               	decfsz	??_Set_Time^0,f,c
  5413   000884  D7FC               	bra	u5337
  5414   000886                     l550:
  5415   000886  B881               	btfsc	129,4,c	;volatile
  5416   000888  EF48  F004         	goto	u3311
  5417   00088C  EF4A  F004         	goto	u3310
  5418   000890                     u3311:
  5419   000890  EF43  F004         	goto	l550
  5420   000894                     u3310:
  5421   000894                     
  5422                           ;App_Functions.c: 20:         if (time1[Num][Place - 1] >= '0' && time1[Num][Place - 1] 
      +                          < '9')
  5423   000894  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5424   000898  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5425   00089C  90D8               	bcf	status,0,c
  5426   00089E  3605               	rlcf	??_Set_Time^0,f,c
  5427   0008A0  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5428   0008A2  90D8               	bcf	status,0,c
  5429   0008A4  3605               	rlcf	??_Set_Time^0,f,c
  5430   0008A6  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5431   0008A8  90D8               	bcf	status,0,c
  5432   0008AA  3605               	rlcf	??_Set_Time^0,f,c
  5433   0008AC  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5434   0008AE  0EBF               	movlw	low (_time1+65535)
  5435   0008B0  2405               	addwf	??_Set_Time^0,w,c
  5436   0008B2  6E07               	movwf	(??_Set_Time+2)^0,c
  5437   0008B4  0E00               	movlw	high (_time1+65535)
  5438   0008B6  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5439   0008B8  6E08               	movwf	(??_Set_Time+3)^0,c
  5440   0008BA  5003               	movf	Set_Time@Place^0,w,c
  5441   0008BC  2407               	addwf	(??_Set_Time+2)^0,w,c
  5442   0008BE  6ED9               	movwf	fsr2l,c
  5443   0008C0  5004               	movf	(Set_Time@Place+1)^0,w,c
  5444   0008C2  2008               	addwfc	(??_Set_Time+3)^0,w,c
  5445   0008C4  6EDA               	movwf	fsr2h,c
  5446   0008C6  0E2F               	movlw	47
  5447   0008C8  64DF               	cpfsgt	indf2,c
  5448   0008CA  EF69  F004         	goto	u3321
  5449   0008CE  EF6B  F004         	goto	u3320
  5450   0008D2                     u3321:
  5451   0008D2  EFC2  F004         	goto	l3932
  5452   0008D6                     u3320:
  5453   0008D6  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5454   0008DA  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5455   0008DE  90D8               	bcf	status,0,c
  5456   0008E0  3605               	rlcf	??_Set_Time^0,f,c
  5457   0008E2  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5458   0008E4  90D8               	bcf	status,0,c
  5459   0008E6  3605               	rlcf	??_Set_Time^0,f,c
  5460   0008E8  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5461   0008EA  90D8               	bcf	status,0,c
  5462   0008EC  3605               	rlcf	??_Set_Time^0,f,c
  5463   0008EE  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5464   0008F0  0EBF               	movlw	low (_time1+65535)
  5465   0008F2  2405               	addwf	??_Set_Time^0,w,c
  5466   0008F4  6E07               	movwf	(??_Set_Time+2)^0,c
  5467   0008F6  0E00               	movlw	high (_time1+65535)
  5468   0008F8  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5469   0008FA  6E08               	movwf	(??_Set_Time+3)^0,c
  5470   0008FC  5003               	movf	Set_Time@Place^0,w,c
  5471   0008FE  2407               	addwf	(??_Set_Time+2)^0,w,c
  5472   000900  6ED9               	movwf	fsr2l,c
  5473   000902  5004               	movf	(Set_Time@Place+1)^0,w,c
  5474   000904  2008               	addwfc	(??_Set_Time+3)^0,w,c
  5475   000906  6EDA               	movwf	fsr2h,c
  5476   000908  0E39               	movlw	57
  5477   00090A  60DF               	cpfslt	indf2,c
  5478   00090C  EF8A  F004         	goto	u3331
  5479   000910  EF8C  F004         	goto	u3330
  5480   000914                     u3331:
  5481   000914  EFC2  F004         	goto	l3932
  5482   000918                     u3330:
  5483   000918                     
  5484                           ;App_Functions.c: 21:         {;App_Functions.c: 22:             time1[Num][Place - 1] =
      +                           time1[Num][Place - 1] + 1;
  5485   000918  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5486   00091C  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5487   000920  90D8               	bcf	status,0,c
  5488   000922  3605               	rlcf	??_Set_Time^0,f,c
  5489   000924  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5490   000926  90D8               	bcf	status,0,c
  5491   000928  3605               	rlcf	??_Set_Time^0,f,c
  5492   00092A  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5493   00092C  90D8               	bcf	status,0,c
  5494   00092E  3605               	rlcf	??_Set_Time^0,f,c
  5495   000930  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5496   000932  0EBF               	movlw	low (_time1+65535)
  5497   000934  2405               	addwf	??_Set_Time^0,w,c
  5498   000936  6E07               	movwf	(??_Set_Time+2)^0,c
  5499   000938  0E00               	movlw	high (_time1+65535)
  5500   00093A  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5501   00093C  6E08               	movwf	(??_Set_Time+3)^0,c
  5502   00093E  5003               	movf	Set_Time@Place^0,w,c
  5503   000940  2407               	addwf	(??_Set_Time+2)^0,w,c
  5504   000942  6ED9               	movwf	fsr2l,c
  5505   000944  5004               	movf	(Set_Time@Place+1)^0,w,c
  5506   000946  2008               	addwfc	(??_Set_Time+3)^0,w,c
  5507   000948  6EDA               	movwf	fsr2h,c
  5508   00094A  C001  F009         	movff	Set_Time@Num,??_Set_Time+4
  5509   00094E  C002  F00A         	movff	Set_Time@Num+1,??_Set_Time+5
  5510   000952  90D8               	bcf	status,0,c
  5511   000954  3609               	rlcf	(??_Set_Time+4)^0,f,c
  5512   000956  360A               	rlcf	(??_Set_Time+5)^0,f,c
  5513   000958  90D8               	bcf	status,0,c
  5514   00095A  3609               	rlcf	(??_Set_Time+4)^0,f,c
  5515   00095C  360A               	rlcf	(??_Set_Time+5)^0,f,c
  5516   00095E  90D8               	bcf	status,0,c
  5517   000960  3609               	rlcf	(??_Set_Time+4)^0,f,c
  5518   000962  360A               	rlcf	(??_Set_Time+5)^0,f,c
  5519   000964  0EBF               	movlw	low (_time1+65535)
  5520   000966  2409               	addwf	(??_Set_Time+4)^0,w,c
  5521   000968  6E0B               	movwf	(??_Set_Time+6)^0,c
  5522   00096A  0E00               	movlw	high (_time1+65535)
  5523   00096C  200A               	addwfc	(??_Set_Time+5)^0,w,c
  5524   00096E  6E0C               	movwf	(??_Set_Time+7)^0,c
  5525   000970  5003               	movf	Set_Time@Place^0,w,c
  5526   000972  240B               	addwf	(??_Set_Time+6)^0,w,c
  5527   000974  6EE1               	movwf	fsr1l,c
  5528   000976  5004               	movf	(Set_Time@Place+1)^0,w,c
  5529   000978  200C               	addwfc	(??_Set_Time+7)^0,w,c
  5530   00097A  6EE2               	movwf	fsr1h,c
  5531   00097C  50E7               	movf	indf1,w,c
  5532   00097E  6E0D               	movwf	(??_Set_Time+8)^0,c
  5533   000980  280D               	incf	(??_Set_Time+8)^0,w,c
  5534   000982  6EDF               	movwf	indf2,c
  5535   000984                     l3932:
  5536                           
  5537                           ;App_Functions.c: 26:     if(((PORTB & (1<<5))? 1:0) && Place > 0)
  5538   000984  AA81               	btfss	129,5,c	;volatile
  5539   000986  EFC7  F004         	goto	u3341
  5540   00098A  EFC9  F004         	goto	u3340
  5541   00098E                     u3341:
  5542   00098E  EF5C  F005         	goto	l3944
  5543   000992                     u3340:
  5544   000992  BE04               	btfsc	(Set_Time@Place+1)^0,7,c
  5545   000994  EFD4  F004         	goto	u3351
  5546   000998  5004               	movf	(Set_Time@Place+1)^0,w,c
  5547   00099A  E108               	bnz	u3350
  5548   00099C  0403               	decf	Set_Time@Place^0,w,c
  5549   00099E  A0D8               	btfss	status,0,c
  5550   0009A0  EFD4  F004         	goto	u3351
  5551   0009A4  EFD6  F004         	goto	u3350
  5552   0009A8                     u3351:
  5553   0009A8  EF5C  F005         	goto	l3944
  5554   0009AC                     u3350:
  5555   0009AC                     
  5556                           ;App_Functions.c: 27:     {;App_Functions.c: 28:         _delay((unsigned long)((5)*(800
      +                          0000UL/4000.0)));
  5557   0009AC  0E0D               	movlw	13
  5558   0009AE  6E05               	movwf	??_Set_Time^0,c
  5559   0009B0  0EFC               	movlw	252
  5560   0009B2                     u5347:
  5561   0009B2  2EE8               	decfsz	wreg,f,c
  5562   0009B4  D7FE               	bra	u5347
  5563   0009B6  2E05               	decfsz	??_Set_Time^0,f,c
  5564   0009B8  D7FC               	bra	u5347
  5565   0009BA                     l555:
  5566   0009BA  BA81               	btfsc	129,5,c	;volatile
  5567   0009BC  EFE2  F004         	goto	u3361
  5568   0009C0  EFE4  F004         	goto	u3360
  5569   0009C4                     u3361:
  5570   0009C4  EFDD  F004         	goto	l555
  5571   0009C8                     u3360:
  5572   0009C8                     
  5573                           ;App_Functions.c: 31:         if (time1[Num][Place - 1] > '0' && time1[Num][Place - 1] <
      +                          = '9')
  5574   0009C8  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5575   0009CC  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5576   0009D0  90D8               	bcf	status,0,c
  5577   0009D2  3605               	rlcf	??_Set_Time^0,f,c
  5578   0009D4  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5579   0009D6  90D8               	bcf	status,0,c
  5580   0009D8  3605               	rlcf	??_Set_Time^0,f,c
  5581   0009DA  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5582   0009DC  90D8               	bcf	status,0,c
  5583   0009DE  3605               	rlcf	??_Set_Time^0,f,c
  5584   0009E0  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5585   0009E2  0EBF               	movlw	low (_time1+65535)
  5586   0009E4  2405               	addwf	??_Set_Time^0,w,c
  5587   0009E6  6E07               	movwf	(??_Set_Time+2)^0,c
  5588   0009E8  0E00               	movlw	high (_time1+65535)
  5589   0009EA  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5590   0009EC  6E08               	movwf	(??_Set_Time+3)^0,c
  5591   0009EE  5003               	movf	Set_Time@Place^0,w,c
  5592   0009F0  2407               	addwf	(??_Set_Time+2)^0,w,c
  5593   0009F2  6ED9               	movwf	fsr2l,c
  5594   0009F4  5004               	movf	(Set_Time@Place+1)^0,w,c
  5595   0009F6  2008               	addwfc	(??_Set_Time+3)^0,w,c
  5596   0009F8  6EDA               	movwf	fsr2h,c
  5597   0009FA  0E30               	movlw	48
  5598   0009FC  64DF               	cpfsgt	indf2,c
  5599   0009FE  EF03  F005         	goto	u3371
  5600   000A02  EF05  F005         	goto	u3370
  5601   000A06                     u3371:
  5602   000A06  EF5C  F005         	goto	l3944
  5603   000A0A                     u3370:
  5604   000A0A  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5605   000A0E  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5606   000A12  90D8               	bcf	status,0,c
  5607   000A14  3605               	rlcf	??_Set_Time^0,f,c
  5608   000A16  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5609   000A18  90D8               	bcf	status,0,c
  5610   000A1A  3605               	rlcf	??_Set_Time^0,f,c
  5611   000A1C  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5612   000A1E  90D8               	bcf	status,0,c
  5613   000A20  3605               	rlcf	??_Set_Time^0,f,c
  5614   000A22  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5615   000A24  0EBF               	movlw	low (_time1+65535)
  5616   000A26  2405               	addwf	??_Set_Time^0,w,c
  5617   000A28  6E07               	movwf	(??_Set_Time+2)^0,c
  5618   000A2A  0E00               	movlw	high (_time1+65535)
  5619   000A2C  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5620   000A2E  6E08               	movwf	(??_Set_Time+3)^0,c
  5621   000A30  5003               	movf	Set_Time@Place^0,w,c
  5622   000A32  2407               	addwf	(??_Set_Time+2)^0,w,c
  5623   000A34  6ED9               	movwf	fsr2l,c
  5624   000A36  5004               	movf	(Set_Time@Place+1)^0,w,c
  5625   000A38  2008               	addwfc	(??_Set_Time+3)^0,w,c
  5626   000A3A  6EDA               	movwf	fsr2h,c
  5627   000A3C  0E3A               	movlw	58
  5628   000A3E  60DF               	cpfslt	indf2,c
  5629   000A40  EF24  F005         	goto	u3381
  5630   000A44  EF26  F005         	goto	u3380
  5631   000A48                     u3381:
  5632   000A48  EF5C  F005         	goto	l3944
  5633   000A4C                     u3380:
  5634   000A4C                     
  5635                           ;App_Functions.c: 32:         {;App_Functions.c: 33:             time1[Num][Place - 1] =
      +                           time1[Num][Place - 1] - 1;
  5636   000A4C  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5637   000A50  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5638   000A54  90D8               	bcf	status,0,c
  5639   000A56  3605               	rlcf	??_Set_Time^0,f,c
  5640   000A58  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5641   000A5A  90D8               	bcf	status,0,c
  5642   000A5C  3605               	rlcf	??_Set_Time^0,f,c
  5643   000A5E  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5644   000A60  90D8               	bcf	status,0,c
  5645   000A62  3605               	rlcf	??_Set_Time^0,f,c
  5646   000A64  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5647   000A66  0EBF               	movlw	low (_time1+65535)
  5648   000A68  2405               	addwf	??_Set_Time^0,w,c
  5649   000A6A  6E07               	movwf	(??_Set_Time+2)^0,c
  5650   000A6C  0E00               	movlw	high (_time1+65535)
  5651   000A6E  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5652   000A70  6E08               	movwf	(??_Set_Time+3)^0,c
  5653   000A72  5003               	movf	Set_Time@Place^0,w,c
  5654   000A74  2407               	addwf	(??_Set_Time+2)^0,w,c
  5655   000A76  6ED9               	movwf	fsr2l,c
  5656   000A78  5004               	movf	(Set_Time@Place+1)^0,w,c
  5657   000A7A  2008               	addwfc	(??_Set_Time+3)^0,w,c
  5658   000A7C  6EDA               	movwf	fsr2h,c
  5659   000A7E  C001  F009         	movff	Set_Time@Num,??_Set_Time+4
  5660   000A82  C002  F00A         	movff	Set_Time@Num+1,??_Set_Time+5
  5661   000A86  90D8               	bcf	status,0,c
  5662   000A88  3609               	rlcf	(??_Set_Time+4)^0,f,c
  5663   000A8A  360A               	rlcf	(??_Set_Time+5)^0,f,c
  5664   000A8C  90D8               	bcf	status,0,c
  5665   000A8E  3609               	rlcf	(??_Set_Time+4)^0,f,c
  5666   000A90  360A               	rlcf	(??_Set_Time+5)^0,f,c
  5667   000A92  90D8               	bcf	status,0,c
  5668   000A94  3609               	rlcf	(??_Set_Time+4)^0,f,c
  5669   000A96  360A               	rlcf	(??_Set_Time+5)^0,f,c
  5670   000A98  0EBF               	movlw	low (_time1+65535)
  5671   000A9A  2409               	addwf	(??_Set_Time+4)^0,w,c
  5672   000A9C  6E0B               	movwf	(??_Set_Time+6)^0,c
  5673   000A9E  0E00               	movlw	high (_time1+65535)
  5674   000AA0  200A               	addwfc	(??_Set_Time+5)^0,w,c
  5675   000AA2  6E0C               	movwf	(??_Set_Time+7)^0,c
  5676   000AA4  5003               	movf	Set_Time@Place^0,w,c
  5677   000AA6  240B               	addwf	(??_Set_Time+6)^0,w,c
  5678   000AA8  6EE1               	movwf	fsr1l,c
  5679   000AAA  5004               	movf	(Set_Time@Place+1)^0,w,c
  5680   000AAC  200C               	addwfc	(??_Set_Time+7)^0,w,c
  5681   000AAE  6EE2               	movwf	fsr1h,c
  5682   000AB0  50E7               	movf	indf1,w,c
  5683   000AB2  6E0D               	movwf	(??_Set_Time+8)^0,c
  5684   000AB4  040D               	decf	(??_Set_Time+8)^0,w,c
  5685   000AB6  6EDF               	movwf	indf2,c
  5686   000AB8                     l3944:
  5687                           
  5688                           ;App_Functions.c: 36:     if (time1[Num][0] > '2')
  5689   000AB8  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5690   000ABC  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5691   000AC0  90D8               	bcf	status,0,c
  5692   000AC2  3605               	rlcf	??_Set_Time^0,f,c
  5693   000AC4  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5694   000AC6  90D8               	bcf	status,0,c
  5695   000AC8  3605               	rlcf	??_Set_Time^0,f,c
  5696   000ACA  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5697   000ACC  90D8               	bcf	status,0,c
  5698   000ACE  3605               	rlcf	??_Set_Time^0,f,c
  5699   000AD0  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5700   000AD2  0EC0               	movlw	low _time1
  5701   000AD4  2405               	addwf	??_Set_Time^0,w,c
  5702   000AD6  6ED9               	movwf	fsr2l,c
  5703   000AD8  0E00               	movlw	high _time1
  5704   000ADA  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5705   000ADC  6EDA               	movwf	fsr2h,c
  5706   000ADE  0E32               	movlw	50
  5707   000AE0  64DF               	cpfsgt	indf2,c
  5708   000AE2  EF75  F005         	goto	u3391
  5709   000AE6  EF77  F005         	goto	u3390
  5710   000AEA                     u3391:
  5711   000AEA  EF8C  F005         	goto	l559
  5712   000AEE                     u3390:
  5713   000AEE                     
  5714                           ;App_Functions.c: 37:     {;App_Functions.c: 38:         time1[Num][0] = '2';
  5715   000AEE  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5716   000AF2  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5717   000AF6  90D8               	bcf	status,0,c
  5718   000AF8  3605               	rlcf	??_Set_Time^0,f,c
  5719   000AFA  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5720   000AFC  90D8               	bcf	status,0,c
  5721   000AFE  3605               	rlcf	??_Set_Time^0,f,c
  5722   000B00  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5723   000B02  90D8               	bcf	status,0,c
  5724   000B04  3605               	rlcf	??_Set_Time^0,f,c
  5725   000B06  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5726   000B08  0EC0               	movlw	low _time1
  5727   000B0A  2405               	addwf	??_Set_Time^0,w,c
  5728   000B0C  6ED9               	movwf	fsr2l,c
  5729   000B0E  0E00               	movlw	high _time1
  5730   000B10  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5731   000B12  6EDA               	movwf	fsr2h,c
  5732   000B14  0E32               	movlw	50
  5733   000B16  6EDF               	movwf	indf2,c
  5734   000B18                     l559:
  5735                           
  5736                           ;App_Functions.c: 40:     if (time1[Num][0] == '2' && time1[Num][1] > '3')
  5737   000B18  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5738   000B1C  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5739   000B20  90D8               	bcf	status,0,c
  5740   000B22  3605               	rlcf	??_Set_Time^0,f,c
  5741   000B24  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5742   000B26  90D8               	bcf	status,0,c
  5743   000B28  3605               	rlcf	??_Set_Time^0,f,c
  5744   000B2A  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5745   000B2C  90D8               	bcf	status,0,c
  5746   000B2E  3605               	rlcf	??_Set_Time^0,f,c
  5747   000B30  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5748   000B32  0EC0               	movlw	low _time1
  5749   000B34  2405               	addwf	??_Set_Time^0,w,c
  5750   000B36  6ED9               	movwf	fsr2l,c
  5751   000B38  0E00               	movlw	high _time1
  5752   000B3A  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5753   000B3C  6EDA               	movwf	fsr2h,c
  5754   000B3E  0E32               	movlw	50
  5755   000B40  18DE               	xorwf	postinc2,w,c
  5756   000B42  A4D8               	btfss	status,2,c
  5757   000B44  EFA6  F005         	goto	u3401
  5758   000B48  EFA8  F005         	goto	u3400
  5759   000B4C                     u3401:
  5760   000B4C  EFD8  F005         	goto	l560
  5761   000B50                     u3400:
  5762   000B50  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5763   000B54  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5764   000B58  90D8               	bcf	status,0,c
  5765   000B5A  3605               	rlcf	??_Set_Time^0,f,c
  5766   000B5C  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5767   000B5E  90D8               	bcf	status,0,c
  5768   000B60  3605               	rlcf	??_Set_Time^0,f,c
  5769   000B62  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5770   000B64  90D8               	bcf	status,0,c
  5771   000B66  3605               	rlcf	??_Set_Time^0,f,c
  5772   000B68  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5773   000B6A  0EC1               	movlw	low (_time1+1)
  5774   000B6C  2405               	addwf	??_Set_Time^0,w,c
  5775   000B6E  6ED9               	movwf	fsr2l,c
  5776   000B70  0E00               	movlw	high (_time1+1)
  5777   000B72  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5778   000B74  6EDA               	movwf	fsr2h,c
  5779   000B76  0E33               	movlw	51
  5780   000B78  64DF               	cpfsgt	indf2,c
  5781   000B7A  EFC1  F005         	goto	u3411
  5782   000B7E  EFC3  F005         	goto	u3410
  5783   000B82                     u3411:
  5784   000B82  EFD8  F005         	goto	l560
  5785   000B86                     u3410:
  5786   000B86                     
  5787                           ;App_Functions.c: 41:     {;App_Functions.c: 42:         time1[Num][1] = '3';
  5788   000B86  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5789   000B8A  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5790   000B8E  90D8               	bcf	status,0,c
  5791   000B90  3605               	rlcf	??_Set_Time^0,f,c
  5792   000B92  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5793   000B94  90D8               	bcf	status,0,c
  5794   000B96  3605               	rlcf	??_Set_Time^0,f,c
  5795   000B98  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5796   000B9A  90D8               	bcf	status,0,c
  5797   000B9C  3605               	rlcf	??_Set_Time^0,f,c
  5798   000B9E  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5799   000BA0  0EC1               	movlw	low (_time1+1)
  5800   000BA2  2405               	addwf	??_Set_Time^0,w,c
  5801   000BA4  6ED9               	movwf	fsr2l,c
  5802   000BA6  0E00               	movlw	high (_time1+1)
  5803   000BA8  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5804   000BAA  6EDA               	movwf	fsr2h,c
  5805   000BAC  0E33               	movlw	51
  5806   000BAE  6EDF               	movwf	indf2,c
  5807   000BB0                     l560:
  5808                           
  5809                           ;App_Functions.c: 44:     if (time1[Num][0] == '0' && time1[Num][1] > '9')
  5810   000BB0  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5811   000BB4  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5812   000BB8  90D8               	bcf	status,0,c
  5813   000BBA  3605               	rlcf	??_Set_Time^0,f,c
  5814   000BBC  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5815   000BBE  90D8               	bcf	status,0,c
  5816   000BC0  3605               	rlcf	??_Set_Time^0,f,c
  5817   000BC2  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5818   000BC4  90D8               	bcf	status,0,c
  5819   000BC6  3605               	rlcf	??_Set_Time^0,f,c
  5820   000BC8  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5821   000BCA  0EC0               	movlw	low _time1
  5822   000BCC  2405               	addwf	??_Set_Time^0,w,c
  5823   000BCE  6ED9               	movwf	fsr2l,c
  5824   000BD0  0E00               	movlw	high _time1
  5825   000BD2  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5826   000BD4  6EDA               	movwf	fsr2h,c
  5827   000BD6  0E30               	movlw	48
  5828   000BD8  18DE               	xorwf	postinc2,w,c
  5829   000BDA  A4D8               	btfss	status,2,c
  5830   000BDC  EFF2  F005         	goto	u3421
  5831   000BE0  EFF4  F005         	goto	u3420
  5832   000BE4                     u3421:
  5833   000BE4  EF24  F006         	goto	l561
  5834   000BE8                     u3420:
  5835   000BE8  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5836   000BEC  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5837   000BF0  90D8               	bcf	status,0,c
  5838   000BF2  3605               	rlcf	??_Set_Time^0,f,c
  5839   000BF4  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5840   000BF6  90D8               	bcf	status,0,c
  5841   000BF8  3605               	rlcf	??_Set_Time^0,f,c
  5842   000BFA  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5843   000BFC  90D8               	bcf	status,0,c
  5844   000BFE  3605               	rlcf	??_Set_Time^0,f,c
  5845   000C00  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5846   000C02  0EC1               	movlw	low (_time1+1)
  5847   000C04  2405               	addwf	??_Set_Time^0,w,c
  5848   000C06  6ED9               	movwf	fsr2l,c
  5849   000C08  0E00               	movlw	high (_time1+1)
  5850   000C0A  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5851   000C0C  6EDA               	movwf	fsr2h,c
  5852   000C0E  0E39               	movlw	57
  5853   000C10  64DF               	cpfsgt	indf2,c
  5854   000C12  EF0D  F006         	goto	u3431
  5855   000C16  EF0F  F006         	goto	u3430
  5856   000C1A                     u3431:
  5857   000C1A  EF24  F006         	goto	l561
  5858   000C1E                     u3430:
  5859   000C1E                     
  5860                           ;App_Functions.c: 45:     {;App_Functions.c: 46:         time1[Num][1] = '9';
  5861   000C1E  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5862   000C22  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5863   000C26  90D8               	bcf	status,0,c
  5864   000C28  3605               	rlcf	??_Set_Time^0,f,c
  5865   000C2A  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5866   000C2C  90D8               	bcf	status,0,c
  5867   000C2E  3605               	rlcf	??_Set_Time^0,f,c
  5868   000C30  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5869   000C32  90D8               	bcf	status,0,c
  5870   000C34  3605               	rlcf	??_Set_Time^0,f,c
  5871   000C36  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5872   000C38  0EC1               	movlw	low (_time1+1)
  5873   000C3A  2405               	addwf	??_Set_Time^0,w,c
  5874   000C3C  6ED9               	movwf	fsr2l,c
  5875   000C3E  0E00               	movlw	high (_time1+1)
  5876   000C40  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5877   000C42  6EDA               	movwf	fsr2h,c
  5878   000C44  0E39               	movlw	57
  5879   000C46  6EDF               	movwf	indf2,c
  5880   000C48                     l561:
  5881                           
  5882                           ;App_Functions.c: 49:     if (time1[Num][3] > '5')
  5883   000C48  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5884   000C4C  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5885   000C50  90D8               	bcf	status,0,c
  5886   000C52  3605               	rlcf	??_Set_Time^0,f,c
  5887   000C54  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5888   000C56  90D8               	bcf	status,0,c
  5889   000C58  3605               	rlcf	??_Set_Time^0,f,c
  5890   000C5A  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5891   000C5C  90D8               	bcf	status,0,c
  5892   000C5E  3605               	rlcf	??_Set_Time^0,f,c
  5893   000C60  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5894   000C62  0EC3               	movlw	low (_time1+3)
  5895   000C64  2405               	addwf	??_Set_Time^0,w,c
  5896   000C66  6ED9               	movwf	fsr2l,c
  5897   000C68  0E00               	movlw	high (_time1+3)
  5898   000C6A  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5899   000C6C  6EDA               	movwf	fsr2h,c
  5900   000C6E  0E35               	movlw	53
  5901   000C70  64DF               	cpfsgt	indf2,c
  5902   000C72  EF3D  F006         	goto	u3441
  5903   000C76  EF3F  F006         	goto	u3440
  5904   000C7A                     u3441:
  5905   000C7A  EF54  F006         	goto	l562
  5906   000C7E                     u3440:
  5907   000C7E                     
  5908                           ;App_Functions.c: 50:     {;App_Functions.c: 51:         time1[Num][3] = '5';
  5909   000C7E  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5910   000C82  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5911   000C86  90D8               	bcf	status,0,c
  5912   000C88  3605               	rlcf	??_Set_Time^0,f,c
  5913   000C8A  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5914   000C8C  90D8               	bcf	status,0,c
  5915   000C8E  3605               	rlcf	??_Set_Time^0,f,c
  5916   000C90  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5917   000C92  90D8               	bcf	status,0,c
  5918   000C94  3605               	rlcf	??_Set_Time^0,f,c
  5919   000C96  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5920   000C98  0EC3               	movlw	low (_time1+3)
  5921   000C9A  2405               	addwf	??_Set_Time^0,w,c
  5922   000C9C  6ED9               	movwf	fsr2l,c
  5923   000C9E  0E00               	movlw	high (_time1+3)
  5924   000CA0  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5925   000CA2  6EDA               	movwf	fsr2h,c
  5926   000CA4  0E35               	movlw	53
  5927   000CA6  6EDF               	movwf	indf2,c
  5928   000CA8                     l562:
  5929                           
  5930                           ;App_Functions.c: 53:     if (time1[Num][4] > '9')
  5931   000CA8  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5932   000CAC  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5933   000CB0  90D8               	bcf	status,0,c
  5934   000CB2  3605               	rlcf	??_Set_Time^0,f,c
  5935   000CB4  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5936   000CB6  90D8               	bcf	status,0,c
  5937   000CB8  3605               	rlcf	??_Set_Time^0,f,c
  5938   000CBA  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5939   000CBC  90D8               	bcf	status,0,c
  5940   000CBE  3605               	rlcf	??_Set_Time^0,f,c
  5941   000CC0  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5942   000CC2  0EC4               	movlw	low (_time1+4)
  5943   000CC4  2405               	addwf	??_Set_Time^0,w,c
  5944   000CC6  6ED9               	movwf	fsr2l,c
  5945   000CC8  0E00               	movlw	high (_time1+4)
  5946   000CCA  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5947   000CCC  6EDA               	movwf	fsr2h,c
  5948   000CCE  0E39               	movlw	57
  5949   000CD0  64DF               	cpfsgt	indf2,c
  5950   000CD2  EF6D  F006         	goto	u3451
  5951   000CD6  EF6F  F006         	goto	u3450
  5952   000CDA                     u3451:
  5953   000CDA  EF84  F006         	goto	l563
  5954   000CDE                     u3450:
  5955   000CDE                     
  5956                           ;App_Functions.c: 54:     {;App_Functions.c: 55:         time1[Num][4] = '9';
  5957   000CDE  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5958   000CE2  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5959   000CE6  90D8               	bcf	status,0,c
  5960   000CE8  3605               	rlcf	??_Set_Time^0,f,c
  5961   000CEA  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5962   000CEC  90D8               	bcf	status,0,c
  5963   000CEE  3605               	rlcf	??_Set_Time^0,f,c
  5964   000CF0  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5965   000CF2  90D8               	bcf	status,0,c
  5966   000CF4  3605               	rlcf	??_Set_Time^0,f,c
  5967   000CF6  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5968   000CF8  0EC4               	movlw	low (_time1+4)
  5969   000CFA  2405               	addwf	??_Set_Time^0,w,c
  5970   000CFC  6ED9               	movwf	fsr2l,c
  5971   000CFE  0E00               	movlw	high (_time1+4)
  5972   000D00  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5973   000D02  6EDA               	movwf	fsr2h,c
  5974   000D04  0E39               	movlw	57
  5975   000D06  6EDF               	movwf	indf2,c
  5976   000D08                     l563:
  5977                           
  5978                           ;App_Functions.c: 57:     if (time1[Num][6] > '5')
  5979   000D08  C001  F005         	movff	Set_Time@Num,??_Set_Time
  5980   000D0C  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  5981   000D10  90D8               	bcf	status,0,c
  5982   000D12  3605               	rlcf	??_Set_Time^0,f,c
  5983   000D14  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5984   000D16  90D8               	bcf	status,0,c
  5985   000D18  3605               	rlcf	??_Set_Time^0,f,c
  5986   000D1A  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5987   000D1C  90D8               	bcf	status,0,c
  5988   000D1E  3605               	rlcf	??_Set_Time^0,f,c
  5989   000D20  3606               	rlcf	(??_Set_Time+1)^0,f,c
  5990   000D22  0EC6               	movlw	low (_time1+6)
  5991   000D24  2405               	addwf	??_Set_Time^0,w,c
  5992   000D26  6ED9               	movwf	fsr2l,c
  5993   000D28  0E00               	movlw	high (_time1+6)
  5994   000D2A  2006               	addwfc	(??_Set_Time+1)^0,w,c
  5995   000D2C  6EDA               	movwf	fsr2h,c
  5996   000D2E  0E35               	movlw	53
  5997   000D30  64DF               	cpfsgt	indf2,c
  5998   000D32  EF9D  F006         	goto	u3461
  5999   000D36  EF9F  F006         	goto	u3460
  6000   000D3A                     u3461:
  6001   000D3A  EFB4  F006         	goto	l564
  6002   000D3E                     u3460:
  6003   000D3E                     
  6004                           ;App_Functions.c: 58:     {;App_Functions.c: 59:         time1[Num][6] = '5';
  6005   000D3E  C001  F005         	movff	Set_Time@Num,??_Set_Time
  6006   000D42  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  6007   000D46  90D8               	bcf	status,0,c
  6008   000D48  3605               	rlcf	??_Set_Time^0,f,c
  6009   000D4A  3606               	rlcf	(??_Set_Time+1)^0,f,c
  6010   000D4C  90D8               	bcf	status,0,c
  6011   000D4E  3605               	rlcf	??_Set_Time^0,f,c
  6012   000D50  3606               	rlcf	(??_Set_Time+1)^0,f,c
  6013   000D52  90D8               	bcf	status,0,c
  6014   000D54  3605               	rlcf	??_Set_Time^0,f,c
  6015   000D56  3606               	rlcf	(??_Set_Time+1)^0,f,c
  6016   000D58  0EC6               	movlw	low (_time1+6)
  6017   000D5A  2405               	addwf	??_Set_Time^0,w,c
  6018   000D5C  6ED9               	movwf	fsr2l,c
  6019   000D5E  0E00               	movlw	high (_time1+6)
  6020   000D60  2006               	addwfc	(??_Set_Time+1)^0,w,c
  6021   000D62  6EDA               	movwf	fsr2h,c
  6022   000D64  0E35               	movlw	53
  6023   000D66  6EDF               	movwf	indf2,c
  6024   000D68                     l564:
  6025                           
  6026                           ;App_Functions.c: 61:     if (time1[Num][7] > '9')
  6027   000D68  C001  F005         	movff	Set_Time@Num,??_Set_Time
  6028   000D6C  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  6029   000D70  90D8               	bcf	status,0,c
  6030   000D72  3605               	rlcf	??_Set_Time^0,f,c
  6031   000D74  3606               	rlcf	(??_Set_Time+1)^0,f,c
  6032   000D76  90D8               	bcf	status,0,c
  6033   000D78  3605               	rlcf	??_Set_Time^0,f,c
  6034   000D7A  3606               	rlcf	(??_Set_Time+1)^0,f,c
  6035   000D7C  90D8               	bcf	status,0,c
  6036   000D7E  3605               	rlcf	??_Set_Time^0,f,c
  6037   000D80  3606               	rlcf	(??_Set_Time+1)^0,f,c
  6038   000D82  0EC7               	movlw	low (_time1+7)
  6039   000D84  2405               	addwf	??_Set_Time^0,w,c
  6040   000D86  6ED9               	movwf	fsr2l,c
  6041   000D88  0E00               	movlw	high (_time1+7)
  6042   000D8A  2006               	addwfc	(??_Set_Time+1)^0,w,c
  6043   000D8C  6EDA               	movwf	fsr2h,c
  6044   000D8E  0E39               	movlw	57
  6045   000D90  64DF               	cpfsgt	indf2,c
  6046   000D92  EFCD  F006         	goto	u3471
  6047   000D96  EFCF  F006         	goto	u3470
  6048   000D9A                     u3471:
  6049   000D9A  EFE4  F006         	goto	l566
  6050   000D9E                     u3470:
  6051   000D9E                     
  6052                           ;App_Functions.c: 62:     {;App_Functions.c: 63:         time1[Num][7] = '9';
  6053   000D9E  C001  F005         	movff	Set_Time@Num,??_Set_Time
  6054   000DA2  C002  F006         	movff	Set_Time@Num+1,??_Set_Time+1
  6055   000DA6  90D8               	bcf	status,0,c
  6056   000DA8  3605               	rlcf	??_Set_Time^0,f,c
  6057   000DAA  3606               	rlcf	(??_Set_Time+1)^0,f,c
  6058   000DAC  90D8               	bcf	status,0,c
  6059   000DAE  3605               	rlcf	??_Set_Time^0,f,c
  6060   000DB0  3606               	rlcf	(??_Set_Time+1)^0,f,c
  6061   000DB2  90D8               	bcf	status,0,c
  6062   000DB4  3605               	rlcf	??_Set_Time^0,f,c
  6063   000DB6  3606               	rlcf	(??_Set_Time+1)^0,f,c
  6064   000DB8  0EC7               	movlw	low (_time1+7)
  6065   000DBA  2405               	addwf	??_Set_Time^0,w,c
  6066   000DBC  6ED9               	movwf	fsr2l,c
  6067   000DBE  0E00               	movlw	high (_time1+7)
  6068   000DC0  2006               	addwfc	(??_Set_Time+1)^0,w,c
  6069   000DC2  6EDA               	movwf	fsr2h,c
  6070   000DC4  0E39               	movlw	57
  6071   000DC6  6EDF               	movwf	indf2,c
  6072   000DC8                     l566:
  6073   000DC8  0012               	return		;funcret
  6074   000DCA                     __end_of_Set_Time:
  6075                           	callstack 0
  6076                           
  6077 ;; *************** function _Flash *****************
  6078 ;; Defined at:
  6079 ;;		line 134 in file "App_Functions.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  inc             2   10[COMRAM] int 
  6082 ;;  PlaceN          2   12[COMRAM] int 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;		None
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  1    wreg      void 
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0, cstack
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6094 ;;      Params:         4       0       0       0       0       0       0       0       0
  6095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6096 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6097 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6098 ;;Total ram usage:        5 bytes
  6099 ;; Hardware stack levels used: 1
  6100 ;; Hardware stack levels required when called: 3
  6101 ;; This function calls:
  6102 ;;		_LCD_goto_xy
  6103 ;;		_LCD_write
  6104 ;; This function is called by:
  6105 ;;		_Screen_Device_1
  6106 ;;		_Screen_Device_2
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           	psect	text11
  6111   0042BC                     __ptext11:
  6112                           	callstack 0
  6113   0042BC                     _Flash:
  6114                           	callstack 26
  6115   0042BC                     
  6116                           ;App_Functions.c: 134: void Flash(int inc, int PlaceN);App_Functions.c: 135: {;App_Funct
      +                          ions.c: 136:   if(PlaceN>=9)
  6117   0042BC  BE0E               	btfsc	(Flash@PlaceN+1)^0,7,c
  6118   0042BE  EF6A  F021         	goto	u3481
  6119   0042C2  500E               	movf	(Flash@PlaceN+1)^0,w,c
  6120   0042C4  E109               	bnz	u3480
  6121   0042C6  0E09               	movlw	9
  6122   0042C8  5C0D               	subwf	Flash@PlaceN^0,w,c
  6123   0042CA  A0D8               	btfss	status,0,c
  6124   0042CC  EF6A  F021         	goto	u3481
  6125   0042D0  EF6C  F021         	goto	u3480
  6126   0042D4                     u3481:
  6127   0042D4  EF7A  F021         	goto	l3968
  6128   0042D8                     u3480:
  6129   0042D8                     
  6130                           ;App_Functions.c: 137:   {;App_Functions.c: 138:       LCD_goto_xy(1, inc+7);
  6131   0042D8  0E00               	movlw	0
  6132   0042DA  6E03               	movwf	(LCD_goto_xy@x+1)^0,c
  6133   0042DC  0E01               	movlw	1
  6134   0042DE  6E02               	movwf	LCD_goto_xy@x^0,c
  6135   0042E0  0E07               	movlw	7
  6136   0042E2  240B               	addwf	Flash@inc^0,w,c
  6137   0042E4  6E04               	movwf	LCD_goto_xy@y^0,c
  6138   0042E6  0E00               	movlw	0
  6139   0042E8  200C               	addwfc	(Flash@inc+1)^0,w,c
  6140   0042EA  6E05               	movwf	(LCD_goto_xy@y+1)^0,c
  6141   0042EC  ECB3  F01E         	call	_LCD_goto_xy	;wreg free
  6142                           
  6143                           ;App_Functions.c: 139:   }
  6144   0042F0  EF86  F021         	goto	l587
  6145   0042F4                     l3968:
  6146                           
  6147                           ;App_Functions.c: 141:   {;App_Functions.c: 142:       LCD_goto_xy(0, inc+7);
  6148   0042F4  0E00               	movlw	0
  6149   0042F6  6E03               	movwf	(LCD_goto_xy@x+1)^0,c
  6150   0042F8  0E00               	movlw	0
  6151   0042FA  6E02               	movwf	LCD_goto_xy@x^0,c
  6152   0042FC  0E07               	movlw	7
  6153   0042FE  240B               	addwf	Flash@inc^0,w,c
  6154   004300  6E04               	movwf	LCD_goto_xy@y^0,c
  6155   004302  0E00               	movlw	0
  6156   004304  200C               	addwfc	(Flash@inc+1)^0,w,c
  6157   004306  6E05               	movwf	(LCD_goto_xy@y+1)^0,c
  6158   004308  ECB3  F01E         	call	_LCD_goto_xy	;wreg free
  6159   00430C                     l587:
  6160                           
  6161                           ;App_Functions.c: 145:   LCD_write(' ');
  6162   00430C  0E20               	movlw	32
  6163   00430E  EC2D  F022         	call	_LCD_write
  6164   004312                     
  6165                           ;App_Functions.c: 146:   _delay((unsigned long)((50)*(8000000UL/4000.0)));
  6166   004312  0E82               	movlw	130
  6167   004314  6E0F               	movwf	??_Flash^0,c
  6168   004316  0EDE               	movlw	222
  6169   004318                     u5357:
  6170   004318  2EE8               	decfsz	wreg,f,c
  6171   00431A  D7FE               	bra	u5357
  6172   00431C  2E0F               	decfsz	??_Flash^0,f,c
  6173   00431E  D7FC               	bra	u5357
  6174   004320  0012               	return		;funcret
  6175   004322                     __end_of_Flash:
  6176                           	callstack 0
  6177                           
  6178 ;; *************** function _Screen_Date_Time *****************
  6179 ;; Defined at:
  6180 ;;		line 10 in file "LCD_Screens.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;		None
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;		None
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  1    wreg      void 
  6187 ;; Registers used:
  6188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6194 ;;      Params:         0       0       0       0       0       0       0       0       0
  6195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6196 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6197 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6198 ;;Total ram usage:        1 bytes
  6199 ;; Hardware stack levels used: 1
  6200 ;; Hardware stack levels required when called: 9
  6201 ;; This function calls:
  6202 ;;		_LCD_goto_xy
  6203 ;;		_LCD_write_string
  6204 ;;		_RTC_Get_Date
  6205 ;;		_RTC_Get_Time
  6206 ;;		_sprintf
  6207 ;; This function is called by:
  6208 ;;		_main
  6209 ;; This function uses a non-reentrant model
  6210 ;;
  6211                           
  6212                           	psect	text12
  6213   002960                     __ptext12:
  6214                           	callstack 0
  6215   002960                     _Screen_Date_Time:
  6216                           	callstack 21
  6217   002960                     
  6218                           ;LCD_Screens.c: 12:     RTC_Get_Time(RTC);
  6219   002960  0EB3               	movlw	low _rtc
  6220   002962  6E04               	movwf	RTC_Get_Time@RTC^0,c
  6221   002964  0E00               	movlw	high _rtc
  6222   002966  6E05               	movwf	(RTC_Get_Time@RTC+1)^0,c
  6223   002968  ECBA  F021         	call	_RTC_Get_Time	;wreg free
  6224                           
  6225                           ;LCD_Screens.c: 13:     RTC_Get_Date(RTC);
  6226   00296C  0EB3               	movlw	low _rtc
  6227   00296E  6E04               	movwf	RTC_Get_Date@RTC^0,c
  6228   002970  0E00               	movlw	high _rtc
  6229   002972  6E05               	movwf	(RTC_Get_Date@RTC+1)^0,c
  6230   002974  EC2A  F021         	call	_RTC_Get_Date	;wreg free
  6231   002978                     
  6232                           ;LCD_Screens.c: 15:     RTC->sec = ((RTC->sec & 0x0F) + (((RTC->sec>>4) & (0x0F)) * 10))
      +                          ;
  6233   002978  C0B3  F05B         	movff	_rtc,??_Screen_Date_Time
  6234   00297C  0E0F               	movlw	15
  6235   00297E  165B               	andwf	??_Screen_Date_Time^0,f,c
  6236   002980  0100               	movlb	0	; () banked
  6237   002982  39B3               	swapf	_rtc& (0+255),w,b
  6238   002984  0B0F               	andlw	15
  6239   002986  0B0F               	andlw	15
  6240   002988  0D0A               	mullw	10
  6241   00298A  50F3               	movf	243,w,c
  6242   00298C  245B               	addwf	??_Screen_Date_Time^0,w,c
  6243   00298E  6FB3               	movwf	_rtc& (0+255),b
  6244   002990                     
  6245                           ; BSR set to: 0
  6246                           ;LCD_Screens.c: 16:     RTC->min = ((RTC->min & 0x0F) + (((RTC->min>>4) & (0x0F)) * 10))
      +                          ;
  6247   002990  C0B4  F05B         	movff	_rtc+1,??_Screen_Date_Time
  6248   002994  0E0F               	movlw	15
  6249   002996  165B               	andwf	??_Screen_Date_Time^0,f,c
  6250   002998  39B4               	swapf	(_rtc+1)& (0+255),w,b
  6251   00299A  0B0F               	andlw	15
  6252   00299C  0B0F               	andlw	15
  6253   00299E  0D0A               	mullw	10
  6254   0029A0  50F3               	movf	243,w,c
  6255   0029A2  245B               	addwf	??_Screen_Date_Time^0,w,c
  6256   0029A4  6FB4               	movwf	(_rtc+1)& (0+255),b
  6257   0029A6                     
  6258                           ; BSR set to: 0
  6259                           ;LCD_Screens.c: 17:     RTC->hour = ((RTC->hour & 0x0F) + (((RTC->hour>>4) & (0x0F)) * 1
      +                          0));
  6260   0029A6  C0B5  F05B         	movff	_rtc+2,??_Screen_Date_Time
  6261   0029AA  0E0F               	movlw	15
  6262   0029AC  165B               	andwf	??_Screen_Date_Time^0,f,c
  6263   0029AE  39B5               	swapf	(_rtc+2)& (0+255),w,b
  6264   0029B0  0B0F               	andlw	15
  6265   0029B2  0B0F               	andlw	15
  6266   0029B4  0D0A               	mullw	10
  6267   0029B6  50F3               	movf	243,w,c
  6268   0029B8  245B               	addwf	??_Screen_Date_Time^0,w,c
  6269   0029BA  6FB5               	movwf	(_rtc+2)& (0+255),b
  6270   0029BC                     
  6271                           ; BSR set to: 0
  6272                           ;LCD_Screens.c: 22:     if(RTC->sec < 10) sprintf(secs, "0%d ", RTC->sec);
  6273   0029BC  0E0A               	movlw	10
  6274   0029BE  61B3               	cpfslt	_rtc& (0+255),b
  6275   0029C0  EFE4  F014         	goto	u4741
  6276   0029C4  EFE6  F014         	goto	u4740
  6277   0029C8                     u4741:
  6278   0029C8  EFF5  F014         	goto	l4702
  6279   0029CC                     u4740:
  6280   0029CC                     
  6281                           ; BSR set to: 0
  6282   0029CC  0EA9               	movlw	low _secs
  6283   0029CE  6FE0               	movwf	sprintf@s& (0+255),b
  6284   0029D0  0E00               	movlw	high _secs
  6285   0029D2  6FE1               	movwf	(sprintf@s+1)& (0+255),b
  6286   0029D4  0E46               	movlw	low STR_1
  6287   0029D6  6FE2               	movwf	sprintf@fmt& (0+255),b
  6288   0029D8  0E08               	movlw	high STR_1
  6289   0029DA  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
  6290   0029DC  C0B3  F0E4         	movff	_rtc,?_sprintf+4
  6291   0029E0  6BE5               	clrf	(?_sprintf+5)& (0+255),b
  6292   0029E2  EC91  F021         	call	_sprintf	;wreg free
  6293   0029E6  EF02  F015         	goto	l4704
  6294   0029EA                     l4702:
  6295                           
  6296                           ; BSR set to: 0
  6297   0029EA  0EA9               	movlw	low _secs
  6298   0029EC  6FE0               	movwf	sprintf@s& (0+255),b
  6299   0029EE  0E00               	movlw	high _secs
  6300   0029F0  6FE1               	movwf	(sprintf@s+1)& (0+255),b
  6301   0029F2  0E47               	movlw	low (STR_1+1)
  6302   0029F4  6FE2               	movwf	sprintf@fmt& (0+255),b
  6303   0029F6  0E08               	movlw	high (STR_1+1)
  6304   0029F8  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
  6305   0029FA  C0B3  F0E4         	movff	_rtc,?_sprintf+4
  6306   0029FE  6BE5               	clrf	(?_sprintf+5)& (0+255),b
  6307   002A00  EC91  F021         	call	_sprintf	;wreg free
  6308   002A04                     l4704:
  6309                           
  6310                           ;LCD_Screens.c: 25:     if(RTC->min < 10) sprintf(mins, "0%d:", RTC->min);
  6311   002A04  0E0A               	movlw	10
  6312   002A06  0100               	movlb	0	; () banked
  6313   002A08  61B4               	cpfslt	(_rtc+1)& (0+255),b
  6314   002A0A  EF09  F015         	goto	u4751
  6315   002A0E  EF0B  F015         	goto	u4750
  6316   002A12                     u4751:
  6317   002A12  EF1A  F015         	goto	l4708
  6318   002A16                     u4750:
  6319   002A16                     
  6320                           ; BSR set to: 0
  6321   002A16  0E9F               	movlw	low _mins
  6322   002A18  6FE0               	movwf	sprintf@s& (0+255),b
  6323   002A1A  0E00               	movlw	high _mins
  6324   002A1C  6FE1               	movwf	(sprintf@s+1)& (0+255),b
  6325   002A1E  0E12               	movlw	low (STR_5+6)
  6326   002A20  6FE2               	movwf	sprintf@fmt& (0+255),b
  6327   002A22  0E08               	movlw	high (STR_5+6)
  6328   002A24  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
  6329   002A26  C0B4  F0E4         	movff	_rtc+1,?_sprintf+4
  6330   002A2A  6BE5               	clrf	(?_sprintf+5)& (0+255),b
  6331   002A2C  EC91  F021         	call	_sprintf	;wreg free
  6332   002A30  EF27  F015         	goto	l4710
  6333   002A34                     l4708:
  6334                           
  6335                           ; BSR set to: 0
  6336   002A34  0E9F               	movlw	low _mins
  6337   002A36  6FE0               	movwf	sprintf@s& (0+255),b
  6338   002A38  0E00               	movlw	high _mins
  6339   002A3A  6FE1               	movwf	(sprintf@s+1)& (0+255),b
  6340   002A3C  0E27               	movlw	low (STR_6+6)
  6341   002A3E  6FE2               	movwf	sprintf@fmt& (0+255),b
  6342   002A40  0E08               	movlw	high (STR_6+6)
  6343   002A42  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
  6344   002A44  C0B4  F0E4         	movff	_rtc+1,?_sprintf+4
  6345   002A48  6BE5               	clrf	(?_sprintf+5)& (0+255),b
  6346   002A4A  EC91  F021         	call	_sprintf	;wreg free
  6347   002A4E                     l4710:
  6348                           
  6349                           ;LCD_Screens.c: 28:     if(RTC->hour < 10) sprintf(hours, "Time: 0%d:", RTC->hour);
  6350   002A4E  0E0A               	movlw	10
  6351   002A50  0100               	movlb	0	; () banked
  6352   002A52  61B5               	cpfslt	(_rtc+2)& (0+255),b
  6353   002A54  EF2E  F015         	goto	u4761
  6354   002A58  EF30  F015         	goto	u4760
  6355   002A5C                     u4761:
  6356   002A5C  EF3F  F015         	goto	l4714
  6357   002A60                     u4760:
  6358   002A60                     
  6359                           ; BSR set to: 0
  6360   002A60  0E3E               	movlw	low _hours
  6361   002A62  6FE0               	movwf	sprintf@s& (0+255),b
  6362   002A64  0E01               	movlw	high _hours
  6363   002A66  6FE1               	movwf	(sprintf@s+1)& (0+255),b
  6364   002A68  0E0C               	movlw	low STR_5
  6365   002A6A  6FE2               	movwf	sprintf@fmt& (0+255),b
  6366   002A6C  0E08               	movlw	high STR_5
  6367   002A6E  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
  6368   002A70  C0B5  F0E4         	movff	_rtc+2,?_sprintf+4
  6369   002A74  6BE5               	clrf	(?_sprintf+5)& (0+255),b
  6370   002A76  EC91  F021         	call	_sprintf	;wreg free
  6371   002A7A  EF4C  F015         	goto	l4716
  6372   002A7E                     l4714:
  6373                           
  6374                           ; BSR set to: 0
  6375   002A7E  0E3E               	movlw	low _hours
  6376   002A80  6FE0               	movwf	sprintf@s& (0+255),b
  6377   002A82  0E01               	movlw	high _hours
  6378   002A84  6FE1               	movwf	(sprintf@s+1)& (0+255),b
  6379   002A86  0E21               	movlw	low STR_6
  6380   002A88  6FE2               	movwf	sprintf@fmt& (0+255),b
  6381   002A8A  0E08               	movlw	high STR_6
  6382   002A8C  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
  6383   002A8E  C0B5  F0E4         	movff	_rtc+2,?_sprintf+4
  6384   002A92  6BE5               	clrf	(?_sprintf+5)& (0+255),b
  6385   002A94  EC91  F021         	call	_sprintf	;wreg free
  6386   002A98                     l4716:
  6387                           
  6388                           ;LCD_Screens.c: 32:     LCD_goto_xy(0, 0);
  6389   002A98  0E00               	movlw	0
  6390   002A9A  6E03               	movwf	(LCD_goto_xy@x+1)^0,c
  6391   002A9C  0E00               	movlw	0
  6392   002A9E  6E02               	movwf	LCD_goto_xy@x^0,c
  6393   002AA0  0E00               	movlw	0
  6394   002AA2  6E05               	movwf	(LCD_goto_xy@y+1)^0,c
  6395   002AA4  0E00               	movlw	0
  6396   002AA6  6E04               	movwf	LCD_goto_xy@y^0,c
  6397   002AA8  ECB3  F01E         	call	_LCD_goto_xy	;wreg free
  6398   002AAC                     
  6399                           ;LCD_Screens.c: 33:     LCD_write_string(hours);
  6400   002AAC  0E3E               	movlw	low _hours
  6401   002AAE  6E03               	movwf	LCD_write_string@str^0,c
  6402   002AB0  0E01               	movlw	high _hours
  6403   002AB2  6E04               	movwf	(LCD_write_string@str+1)^0,c
  6404   002AB4  EC3D  F020         	call	_LCD_write_string	;wreg free
  6405   002AB8                     
  6406                           ;LCD_Screens.c: 34:     LCD_write_string(mins);
  6407   002AB8  0E9F               	movlw	low _mins
  6408   002ABA  6E03               	movwf	LCD_write_string@str^0,c
  6409   002ABC  0E00               	movlw	high _mins
  6410   002ABE  6E04               	movwf	(LCD_write_string@str+1)^0,c
  6411   002AC0  EC3D  F020         	call	_LCD_write_string	;wreg free
  6412   002AC4                     
  6413                           ;LCD_Screens.c: 35:     LCD_write_string(secs);
  6414   002AC4  0EA9               	movlw	low _secs
  6415   002AC6  6E03               	movwf	LCD_write_string@str^0,c
  6416   002AC8  0E00               	movlw	high _secs
  6417   002ACA  6E04               	movwf	(LCD_write_string@str+1)^0,c
  6418   002ACC  EC3D  F020         	call	_LCD_write_string	;wreg free
  6419   002AD0                     
  6420                           ;LCD_Screens.c: 38:     if(RTC->date < 10) sprintf(date, "Date: 0%x-", RTC->date);
  6421   002AD0  0E0A               	movlw	10
  6422   002AD2  0100               	movlb	0	; () banked
  6423   002AD4  61B7               	cpfslt	(_rtc+4)& (0+255),b
  6424   002AD6  EF6F  F015         	goto	u4771
  6425   002ADA  EF71  F015         	goto	u4770
  6426   002ADE                     u4771:
  6427   002ADE  EF80  F015         	goto	l4728
  6428   002AE2                     u4770:
  6429   002AE2                     
  6430                           ; BSR set to: 0
  6431   002AE2  0E34               	movlw	low _date
  6432   002AE4  6FE0               	movwf	sprintf@s& (0+255),b
  6433   002AE6  0E01               	movlw	high _date
  6434   002AE8  6FE1               	movwf	(sprintf@s+1)& (0+255),b
  6435   002AEA  0E01               	movlw	low STR_7
  6436   002AEC  6FE2               	movwf	sprintf@fmt& (0+255),b
  6437   002AEE  0E08               	movlw	high STR_7
  6438   002AF0  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
  6439   002AF2  C0B7  F0E4         	movff	_rtc+4,?_sprintf+4
  6440   002AF6  6BE5               	clrf	(?_sprintf+5)& (0+255),b
  6441   002AF8  EC91  F021         	call	_sprintf	;wreg free
  6442   002AFC  EF8D  F015         	goto	l4730
  6443   002B00                     l4728:
  6444                           
  6445                           ; BSR set to: 0
  6446   002B00  0E34               	movlw	low _date
  6447   002B02  6FE0               	movwf	sprintf@s& (0+255),b
  6448   002B04  0E01               	movlw	high _date
  6449   002B06  6FE1               	movwf	(sprintf@s+1)& (0+255),b
  6450   002B08  0E17               	movlw	low STR_8
  6451   002B0A  6FE2               	movwf	sprintf@fmt& (0+255),b
  6452   002B0C  0E08               	movlw	high STR_8
  6453   002B0E  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
  6454   002B10  C0B7  F0E4         	movff	_rtc+4,?_sprintf+4
  6455   002B14  6BE5               	clrf	(?_sprintf+5)& (0+255),b
  6456   002B16  EC91  F021         	call	_sprintf	;wreg free
  6457   002B1A                     l4730:
  6458                           
  6459                           ;LCD_Screens.c: 41:     if(RTC->month < 10) sprintf(month, "0%x-", RTC->month);
  6460   002B1A  0E0A               	movlw	10
  6461   002B1C  0100               	movlb	0	; () banked
  6462   002B1E  61B8               	cpfslt	(_rtc+5)& (0+255),b
  6463   002B20  EF94  F015         	goto	u4781
  6464   002B24  EF96  F015         	goto	u4780
  6465   002B28                     u4781:
  6466   002B28  EFA5  F015         	goto	l4734
  6467   002B2C                     u4780:
  6468   002B2C                     
  6469                           ; BSR set to: 0
  6470   002B2C  0E2A               	movlw	low _month
  6471   002B2E  6FE0               	movwf	sprintf@s& (0+255),b
  6472   002B30  0E01               	movlw	high _month
  6473   002B32  6FE1               	movwf	(sprintf@s+1)& (0+255),b
  6474   002B34  0E07               	movlw	low (STR_7+6)
  6475   002B36  6FE2               	movwf	sprintf@fmt& (0+255),b
  6476   002B38  0E08               	movlw	high (STR_7+6)
  6477   002B3A  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
  6478   002B3C  C0B8  F0E4         	movff	_rtc+5,?_sprintf+4
  6479   002B40  6BE5               	clrf	(?_sprintf+5)& (0+255),b
  6480   002B42  EC91  F021         	call	_sprintf	;wreg free
  6481   002B46  EFB2  F015         	goto	l125
  6482   002B4A                     l4734:
  6483                           
  6484                           ; BSR set to: 0
  6485   002B4A  0E2A               	movlw	low _month
  6486   002B4C  6FE0               	movwf	sprintf@s& (0+255),b
  6487   002B4E  0E01               	movlw	high _month
  6488   002B50  6FE1               	movwf	(sprintf@s+1)& (0+255),b
  6489   002B52  0E1D               	movlw	low (STR_8+6)
  6490   002B54  6FE2               	movwf	sprintf@fmt& (0+255),b
  6491   002B56  0E08               	movlw	high (STR_8+6)
  6492   002B58  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
  6493   002B5A  C0B8  F0E4         	movff	_rtc+5,?_sprintf+4
  6494   002B5E  6BE5               	clrf	(?_sprintf+5)& (0+255),b
  6495   002B60  EC91  F021         	call	_sprintf	;wreg free
  6496   002B64                     l125:
  6497                           
  6498                           ;LCD_Screens.c: 44:     sprintf(year, "%x ", RTC->year);
  6499   002B64  0E20               	movlw	low _year
  6500   002B66  0100               	movlb	0	; () banked
  6501   002B68  6FE0               	movwf	sprintf@s& (0+255),b
  6502   002B6A  0E01               	movlw	high _year
  6503   002B6C  6FE1               	movwf	(sprintf@s+1)& (0+255),b
  6504   002B6E  0E4B               	movlw	low STR_11
  6505   002B70  6FE2               	movwf	sprintf@fmt& (0+255),b
  6506   002B72  0E08               	movlw	high STR_11
  6507   002B74  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
  6508   002B76  C0B9  F0E4         	movff	_rtc+6,?_sprintf+4
  6509   002B7A  6BE5               	clrf	(?_sprintf+5)& (0+255),b
  6510   002B7C  EC91  F021         	call	_sprintf	;wreg free
  6511   002B80                     
  6512                           ;LCD_Screens.c: 47:     LCD_goto_xy(1, 0);
  6513   002B80  0E00               	movlw	0
  6514   002B82  6E03               	movwf	(LCD_goto_xy@x+1)^0,c
  6515   002B84  0E01               	movlw	1
  6516   002B86  6E02               	movwf	LCD_goto_xy@x^0,c
  6517   002B88  0E00               	movlw	0
  6518   002B8A  6E05               	movwf	(LCD_goto_xy@y+1)^0,c
  6519   002B8C  0E00               	movlw	0
  6520   002B8E  6E04               	movwf	LCD_goto_xy@y^0,c
  6521   002B90  ECB3  F01E         	call	_LCD_goto_xy	;wreg free
  6522   002B94                     
  6523                           ;LCD_Screens.c: 48:     LCD_write_string(date);
  6524   002B94  0E34               	movlw	low _date
  6525   002B96  6E03               	movwf	LCD_write_string@str^0,c
  6526   002B98  0E01               	movlw	high _date
  6527   002B9A  6E04               	movwf	(LCD_write_string@str+1)^0,c
  6528   002B9C  EC3D  F020         	call	_LCD_write_string	;wreg free
  6529   002BA0                     
  6530                           ;LCD_Screens.c: 49:     LCD_write_string(month);
  6531   002BA0  0E2A               	movlw	low _month
  6532   002BA2  6E03               	movwf	LCD_write_string@str^0,c
  6533   002BA4  0E01               	movlw	high _month
  6534   002BA6  6E04               	movwf	(LCD_write_string@str+1)^0,c
  6535   002BA8  EC3D  F020         	call	_LCD_write_string	;wreg free
  6536   002BAC                     
  6537                           ;LCD_Screens.c: 50:     LCD_write_string(year);
  6538   002BAC  0E20               	movlw	low _year
  6539   002BAE  6E03               	movwf	LCD_write_string@str^0,c
  6540   002BB0  0E01               	movlw	high _year
  6541   002BB2  6E04               	movwf	(LCD_write_string@str+1)^0,c
  6542   002BB4  EC3D  F020         	call	_LCD_write_string	;wreg free
  6543   002BB8  0012               	return		;funcret
  6544   002BBA                     __end_of_Screen_Date_Time:
  6545                           	callstack 0
  6546                           
  6547 ;; *************** function _sprintf *****************
  6548 ;; Defined at:
  6549 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  s               2    0[BANK0 ] PTR unsigned char 
  6552 ;;		 -> year(10), month(10), date(10), hours(10), 
  6553 ;;		 -> mins(10), secs(10), 
  6554 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  6555 ;;		 -> STR_11(4), STR_10(4), STR_9(5), STR_8(10), 
  6556 ;;		 -> STR_7(11), STR_6(10), STR_5(11), STR_4(4), 
  6557 ;;		 -> STR_3(5), STR_2(4), STR_1(5), 
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;  f              11    8[BANK0 ] struct _IO_FILE
  6560 ;;  ap              2    6[BANK0 ] PTR void [1]
  6561 ;;		 -> ?_sprintf(2), 
  6562 ;;  ret             2    0        int 
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  2    0[BANK0 ] int 
  6565 ;; Registers used:
  6566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6572 ;;      Params:         0       6       0       0       0       0       0       0       0
  6573 ;;      Locals:         0      13       0       0       0       0       0       0       0
  6574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6575 ;;      Totals:         0      19       0       0       0       0       0       0       0
  6576 ;;Total ram usage:       19 bytes
  6577 ;; Hardware stack levels used: 1
  6578 ;; Hardware stack levels required when called: 8
  6579 ;; This function calls:
  6580 ;;		_vfprintf
  6581 ;; This function is called by:
  6582 ;;		_Screen_Date_Time
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text13
  6587   004322                     __ptext13:
  6588                           	callstack 0
  6589   004322                     _sprintf:
  6590                           	callstack 21
  6591   004322  0EE4               	movlw	low (?_sprintf+4)
  6592   004324  0100               	movlb	0	; () banked
  6593   004326  6FE6               	movwf	sprintf@ap& (0+255),b
  6594   004328  0E00               	movlw	high (?_sprintf+4)
  6595   00432A  6FE7               	movwf	(sprintf@ap+1)& (0+255),b
  6596   00432C  C0E0  F0E8         	movff	sprintf@s,sprintf@f
  6597   004330  C0E1  F0E9         	movff	sprintf@s+1,sprintf@f+1
  6598   004334                     
  6599                           ; BSR set to: 0
  6600   004334  0E00               	movlw	0
  6601   004336  6FEC               	movwf	(sprintf@f+4)& (0+255),b
  6602   004338  0E00               	movlw	0
  6603   00433A  6FEB               	movwf	(sprintf@f+3)& (0+255),b
  6604   00433C                     
  6605                           ; BSR set to: 0
  6606   00433C  0E00               	movlw	0
  6607   00433E  6FF2               	movwf	(sprintf@f+10)& (0+255),b
  6608   004340  0E00               	movlw	0
  6609   004342  6FF1               	movwf	(sprintf@f+9)& (0+255),b
  6610   004344                     
  6611                           ; BSR set to: 0
  6612   004344  0EE8               	movlw	low sprintf@f
  6613   004346  6E53               	movwf	vfprintf@fp^0,c
  6614   004348  0E00               	movlw	high sprintf@f
  6615   00434A  6E54               	movwf	(vfprintf@fp+1)^0,c
  6616   00434C  C0E2  F055         	movff	sprintf@fmt,vfprintf@fmt
  6617   004350  C0E3  F056         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6618   004354  0EE6               	movlw	low sprintf@ap
  6619   004356  6E57               	movwf	vfprintf@ap^0,c
  6620   004358  0E00               	movlw	high sprintf@ap
  6621   00435A  6E58               	movwf	(vfprintf@ap+1)^0,c
  6622   00435C  ECE2  F021         	call	_vfprintf	;wreg free
  6623   004360  0100               	movlb	0	; () banked
  6624   004362  51EB               	movf	(sprintf@f+3)& (0+255),w,b
  6625   004364  25E0               	addwf	sprintf@s& (0+255),w,b
  6626   004366  6ED9               	movwf	fsr2l,c
  6627   004368  51EC               	movf	(sprintf@f+4)& (0+255),w,b
  6628   00436A  21E1               	addwfc	(sprintf@s+1)& (0+255),w,b
  6629   00436C  6EDA               	movwf	fsr2h,c
  6630   00436E  0E00               	movlw	0
  6631   004370  6EDF               	movwf	indf2,c
  6632   004372                     
  6633                           ; BSR set to: 0
  6634   004372  0012               	return		;funcret
  6635   004374                     __end_of_sprintf:
  6636                           	callstack 0
  6637                           
  6638 ;; *************** function _vfprintf *****************
  6639 ;; Defined at:
  6640 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  6643 ;;		 -> sprintf@f(11), 
  6644 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  6645 ;;		 -> STR_11(4), STR_10(4), STR_9(5), STR_8(10), 
  6646 ;;		 -> STR_7(11), STR_6(10), STR_5(11), STR_4(4), 
  6647 ;;		 -> STR_3(5), STR_2(4), STR_1(5), 
  6648 ;;  ap              2   86[COMRAM] PTR PTR void 
  6649 ;;		 -> sprintf@ap(2), 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  6652 ;;		 -> STR_11(4), STR_10(4), STR_9(5), STR_8(10), 
  6653 ;;		 -> STR_7(11), STR_6(10), STR_5(11), STR_4(4), 
  6654 ;;		 -> STR_3(5), STR_2(4), STR_1(5), 
  6655 ;; Return value:  Size  Location     Type
  6656 ;;                  2   82[COMRAM] int 
  6657 ;; Registers used:
  6658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6664 ;;      Params:         6       0       0       0       0       0       0       0       0
  6665 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6667 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6668 ;;Total ram usage:        8 bytes
  6669 ;; Hardware stack levels used: 1
  6670 ;; Hardware stack levels required when called: 7
  6671 ;; This function calls:
  6672 ;;		_vfpfcnvrt
  6673 ;; This function is called by:
  6674 ;;		_sprintf
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           	psect	text14
  6679   0043C4                     __ptext14:
  6680                           	callstack 0
  6681   0043C4                     _vfprintf:
  6682                           	callstack 21
  6683   0043C4                     
  6684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  6685   0043C4  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  6686   0043C8  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6687                           
  6688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6689   0043CC  EFF6  F021         	goto	l3846
  6690   0043D0                     l3844:
  6691                           
  6692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6693   0043D0  C053  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  6694   0043D4  C054  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6695   0043D8  0E59               	movlw	low vfprintf@cfmt
  6696   0043DA  6E41               	movwf	vfpfcnvrt@fmt^0,c
  6697   0043DC  0E00               	movlw	high vfprintf@cfmt
  6698   0043DE  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6699   0043E0  C057  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  6700   0043E4  C058  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6701   0043E8  ECFD  F016         	call	_vfpfcnvrt	;wreg free
  6702   0043EC                     l3846:
  6703                           
  6704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6705   0043EC  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  6706   0043F0  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6707   0043F4                     	if	0	;tblptru may be non-zero
  6708   0043F4                     	endif
  6709   0043F4                     	if	0	;tblptru may be non-zero
  6710   0043F4                     	endif
  6711   0043F4  0008               	tblrd		*
  6712   0043F6  50F5               	movf	tablat,w,c
  6713   0043F8  0900               	iorlw	0
  6714   0043FA  A4D8               	btfss	status,2,c
  6715   0043FC  EF02  F022         	goto	u3251
  6716   004400  EF04  F022         	goto	u3250
  6717   004404                     u3251:
  6718   004404  EFE8  F021         	goto	l3844
  6719   004408                     u3250:
  6720   004408                     
  6721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  6722   004408  0E00               	movlw	0
  6723   00440A  6E54               	movwf	(?_vfprintf+1)^0,c
  6724   00440C  0E00               	movlw	0
  6725   00440E  6E53               	movwf	?_vfprintf^0,c
  6726   004410  0012               	return		;funcret
  6727   004412                     __end_of_vfprintf:
  6728                           	callstack 0
  6729                           
  6730 ;; *************** function _vfpfcnvrt *****************
  6731 ;; Defined at:
  6732 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  6735 ;;		 -> sprintf@f(11), 
  6736 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  6737 ;;		 -> vfprintf@cfmt(2), 
  6738 ;;  ap              2   66[COMRAM] PTR PTR void 
  6739 ;;		 -> sprintf@ap(2), 
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;  convarg         8   72[COMRAM] struct .
  6742 ;;  cp              2   80[COMRAM] PTR unsigned char 
  6743 ;;		 -> STR_11(4), STR_10(4), STR_9(5), STR_8(10), 
  6744 ;;		 -> STR_7(11), STR_6(10), STR_5(11), STR_4(4), 
  6745 ;;		 -> STR_3(5), STR_2(4), STR_1(5), 
  6746 ;;  i               2    0        int 
  6747 ;;  done            2    0        int 
  6748 ;;  c               1    0        unsigned char 
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  1    wreg      void 
  6751 ;; Registers used:
  6752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6758 ;;      Params:         6       0       0       0       0       0       0       0       0
  6759 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6760 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6761 ;;      Totals:        20       0       0       0       0       0       0       0       0
  6762 ;;Total ram usage:       20 bytes
  6763 ;; Hardware stack levels used: 1
  6764 ;; Hardware stack levels required when called: 6
  6765 ;; This function calls:
  6766 ;;		_dtoa
  6767 ;;		_fputc
  6768 ;;		_xtoa
  6769 ;; This function is called by:
  6770 ;;		_vfprintf
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           	psect	text15
  6775   002DFA                     __ptext15:
  6776                           	callstack 0
  6777   002DFA                     _vfpfcnvrt:
  6778                           	callstack 21
  6779   002DFA                     
  6780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  6781   002DFA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6782   002DFE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6783   002E02  CFDE FFF6          	movff	postinc2,tblptrl
  6784   002E06  CFDD FFF7          	movff	postdec2,tblptrh
  6785   002E0A                     	if	0	;tblptru may be non-zero
  6786   002E0A                     	endif
  6787   002E0A                     	if	0	;tblptru may be non-zero
  6788   002E0A                     	endif
  6789   002E0A  0008               	tblrd		*
  6790   002E0C  50F5               	movf	tablat,w,c
  6791   002E0E  0A25               	xorlw	37
  6792   002E10  A4D8               	btfss	status,2,c
  6793   002E12  EF0D  F017         	goto	u3071
  6794   002E16  EF0F  F017         	goto	u3070
  6795   002E1A                     u3071:
  6796   002E1A  EFF9  F017         	goto	l3742
  6797   002E1E                     u3070:
  6798   002E1E                     
  6799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  6800   002E1E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6801   002E22  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6802   002E26  2ADE               	incf	postinc2,f,c
  6803   002E28  0E00               	movlw	0
  6804   002E2A  22DD               	addwfc	postdec2,f,c
  6805   002E2C                     
  6806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  6807   002E2C  0E00               	movlw	0
  6808   002E2E  0100               	movlb	0	; () banked
  6809   002E30  6F91               	movwf	(_width+1)& (0+255),b
  6810   002E32  0E00               	movlw	0
  6811   002E34  6F90               	movwf	_width& (0+255),b
  6812   002E36  C090  F05E         	movff	_width,_flags
  6813   002E3A                     
  6814                           ; BSR set to: 0
  6815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  6816   002E3A  6992               	setf	_prec& (0+255),b
  6817   002E3C  6993               	setf	(_prec+1)& (0+255),b
  6818   002E3E                     
  6819                           ; BSR set to: 0
  6820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  6821   002E3E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6822   002E42  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6823   002E46  CFDE F051          	movff	postinc2,vfpfcnvrt@cp
  6824   002E4A  CFDD F052          	movff	postdec2,vfpfcnvrt@cp+1
  6825   002E4E                     
  6826                           ; BSR set to: 0
  6827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6828   002E4E  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6829   002E52  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6830   002E56                     	if	0	;tblptru may be non-zero
  6831   002E56                     	endif
  6832   002E56                     	if	0	;tblptru may be non-zero
  6833   002E56                     	endif
  6834   002E56  0008               	tblrd		*
  6835   002E58  50F5               	movf	tablat,w,c
  6836   002E5A  0A64               	xorlw	100
  6837   002E5C  B4D8               	btfsc	status,2,c
  6838   002E5E  EF33  F017         	goto	u3081
  6839   002E62  EF35  F017         	goto	u3080
  6840   002E66                     u3081:
  6841   002E66  EF43  F017         	goto	l3720
  6842   002E6A                     u3080:
  6843   002E6A                     
  6844                           ; BSR set to: 0
  6845   002E6A  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6846   002E6E  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6847   002E72                     	if	0	;tblptru may be non-zero
  6848   002E72                     	endif
  6849   002E72                     	if	0	;tblptru may be non-zero
  6850   002E72                     	endif
  6851   002E72  0008               	tblrd		*
  6852   002E74  50F5               	movf	tablat,w,c
  6853   002E76  0A69               	xorlw	105
  6854   002E78  A4D8               	btfss	status,2,c
  6855   002E7A  EF41  F017         	goto	u3091
  6856   002E7E  EF43  F017         	goto	u3090
  6857   002E82                     u3091:
  6858   002E82  EF86  F017         	goto	l3726
  6859   002E86                     u3090:
  6860   002E86                     l3720:
  6861                           
  6862                           ; BSR set to: 0
  6863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6864   002E86  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6865   002E8A  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6866   002E8E  CFDF F045          	movff	indf2,??_vfpfcnvrt
  6867   002E92  0E02               	movlw	2
  6868   002E94  26DE               	addwf	postinc2,f,c
  6869   002E96  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  6870   002E9A  0E00               	movlw	0
  6871   002E9C  22DD               	addwfc	postdec2,f,c
  6872   002E9E  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6873   002EA2  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6874   002EA6  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  6875   002EAA  CFDD F04A          	movff	postdec2,vfpfcnvrt@convarg+1
  6876   002EAE  0E00               	movlw	0
  6877   002EB0  BE4A               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  6878   002EB2  0EFF               	movlw	-1
  6879   002EB4  6E4B               	movwf	(vfpfcnvrt@convarg+2)^0,c
  6880   002EB6  6E4C               	movwf	(vfpfcnvrt@convarg+3)^0,c
  6881   002EB8  6E4D               	movwf	(vfpfcnvrt@convarg+4)^0,c
  6882   002EBA  6E4E               	movwf	(vfpfcnvrt@convarg+5)^0,c
  6883   002EBC  6E4F               	movwf	(vfpfcnvrt@convarg+6)^0,c
  6884   002EBE  6E50               	movwf	(vfpfcnvrt@convarg+7)^0,c
  6885                           
  6886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  6887   002EC0  0E01               	movlw	1
  6888   002EC2  2451               	addwf	vfpfcnvrt@cp^0,w,c
  6889   002EC4  6E45               	movwf	??_vfpfcnvrt^0,c
  6890   002EC6  0E00               	movlw	0
  6891   002EC8  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  6892   002ECA  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  6893   002ECC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6894   002ED0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6895   002ED4  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  6896   002ED8  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6897   002EDC                     
  6898                           ; BSR set to: 0
  6899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  6900   002EDC  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6901   002EE0  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6902   002EE4  C049  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  6903   002EE8  C04A  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6904   002EEC  C04B  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  6905   002EF0  C04C  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  6906   002EF4  C04D  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  6907   002EF8  C04E  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  6908   002EFC  C04F  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  6909   002F00  C050  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  6910   002F04  EC71  F013         	call	_dtoa	;wreg free
  6911   002F08  EF0D  F018         	goto	l1422
  6912   002F0C                     l3726:
  6913                           
  6914                           ; BSR set to: 0
  6915   002F0C  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6916   002F10  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6917   002F14                     	if	0	;tblptru may be non-zero
  6918   002F14                     	endif
  6919   002F14                     	if	0	;tblptru may be non-zero
  6920   002F14                     	endif
  6921   002F14  0008               	tblrd		*
  6922   002F16  50F5               	movf	tablat,w,c
  6923   002F18  0A78               	xorlw	120
  6924   002F1A  A4D8               	btfss	status,2,c
  6925   002F1C  EF92  F017         	goto	u3101
  6926   002F20  EF94  F017         	goto	u3100
  6927   002F24                     u3101:
  6928   002F24  EFF0  F017         	goto	l3738
  6929   002F28                     u3100:
  6930   002F28                     
  6931                           ; BSR set to: 0
  6932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  6933   002F28  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6934   002F2C  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6935   002F30  CFDF F045          	movff	indf2,??_vfpfcnvrt
  6936   002F34  0E02               	movlw	2
  6937   002F36  26DE               	addwf	postinc2,f,c
  6938   002F38  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  6939   002F3C  0E00               	movlw	0
  6940   002F3E  22DD               	addwfc	postdec2,f,c
  6941   002F40  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6942   002F44  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6943   002F48  CFDE F047          	movff	postinc2,??_vfpfcnvrt+2
  6944   002F4C  CFDD F048          	movff	postdec2,??_vfpfcnvrt+3
  6945   002F50  C047  F049         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  6946   002F54  C048  F04A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  6947   002F58  6A4B               	clrf	(vfpfcnvrt@convarg+2)^0,c
  6948   002F5A  6A4C               	clrf	(vfpfcnvrt@convarg+3)^0,c
  6949   002F5C  6A4D               	clrf	(vfpfcnvrt@convarg+4)^0,c
  6950   002F5E  6A4E               	clrf	(vfpfcnvrt@convarg+5)^0,c
  6951   002F60  6A4F               	clrf	(vfpfcnvrt@convarg+6)^0,c
  6952   002F62  6A50               	clrf	(vfpfcnvrt@convarg+7)^0,c
  6953                           
  6954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  6955   002F64  0E01               	movlw	1
  6956   002F66  2451               	addwf	vfpfcnvrt@cp^0,w,c
  6957   002F68  6E45               	movwf	??_vfpfcnvrt^0,c
  6958   002F6A  0E00               	movlw	0
  6959   002F6C  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  6960   002F6E  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  6961   002F70  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6962   002F74  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6963   002F78  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  6964   002F7C  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6965                           
  6966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  6967   002F80  EFDA  F017         	goto	l3736
  6968   002F84                     l3730:
  6969                           
  6970                           ; BSR set to: 0
  6971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of _vfpfcnvrt is never used
  6972   002F84  C03F  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  6973   002F88  C040  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6974   002F8C  C049  F01E         	movff	vfpfcnvrt@convarg,xtoa@d
  6975   002F90  C04A  F01F         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  6976   002F94  C04B  F020         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  6977   002F98  C04C  F021         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  6978   002F9C  C04D  F022         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  6979   002FA0  C04E  F023         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  6980   002FA4  C04F  F024         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  6981   002FA8  C050  F025         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  6982   002FAC  ECE8  F018         	call	_xtoa	;wreg free
  6983   002FB0  EF0D  F018         	goto	l1422
  6984   002FB4                     l3736:
  6985                           
  6986                           ; BSR set to: 0
  6987   002FB4  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6988   002FB8  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6989   002FBC                     	if	0	;tblptru may be non-zero
  6990   002FBC                     	endif
  6991   002FBC                     	if	0	;tblptru may be non-zero
  6992   002FBC                     	endif
  6993   002FBC  0008               	tblrd		*
  6994   002FBE  50F5               	movf	tablat,w,c
  6995   002FC0  6E45               	movwf	??_vfpfcnvrt^0,c
  6996   002FC2  6A46               	clrf	(??_vfpfcnvrt+1)^0,c
  6997                           
  6998                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6999                           ; Switch size 1, requested type "simple"
  7000                           ; Number of cases is 1, Range of values is 0 to 0
  7001                           ; switch strategies available:
  7002                           ; Name         Instructions Cycles
  7003                           ; simple_byte            4     3 (average)
  7004                           ;	Chosen strategy is simple_byte
  7005   002FC4  5046               	movf	(??_vfpfcnvrt+1)^0,w,c
  7006   002FC6  0A00               	xorlw	0	; case 0
  7007   002FC8  B4D8               	btfsc	status,2,c
  7008   002FCA  EFE9  F017         	goto	l5502
  7009   002FCE  EFF0  F017         	goto	l3738
  7010   002FD2                     l5502:
  7011                           
  7012                           ; BSR set to: 0
  7013                           ; Switch size 1, requested type "simple"
  7014                           ; Number of cases is 1, Range of values is 120 to 120
  7015                           ; switch strategies available:
  7016                           ; Name         Instructions Cycles
  7017                           ; simple_byte            4     3 (average)
  7018                           ;	Chosen strategy is simple_byte
  7019   002FD2  5045               	movf	??_vfpfcnvrt^0,w,c
  7020   002FD4  0A78               	xorlw	120	; case 120
  7021   002FD6  B4D8               	btfsc	status,2,c
  7022   002FD8  EFC2  F017         	goto	l3730
  7023   002FDC  EFF0  F017         	goto	l3738
  7024   002FE0                     l3738:
  7025                           
  7026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  7027   002FE0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7028   002FE4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7029   002FE8  2ADE               	incf	postinc2,f,c
  7030   002FEA  0E00               	movlw	0
  7031   002FEC  22DD               	addwfc	postdec2,f,c
  7032   002FEE  EF0D  F018         	goto	l1422
  7033   002FF2                     l3742:
  7034                           
  7035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  7036   002FF2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7037   002FF6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7038   002FFA  CFDE FFF6          	movff	postinc2,tblptrl
  7039   002FFE  CFDD FFF7          	movff	postdec2,tblptrh
  7040   003002                     	if	0	;tblptru may be non-zero
  7041   003002                     	endif
  7042   003002                     	if	0	;tblptru may be non-zero
  7043   003002                     	endif
  7044   003002  0008               	tblrd		*
  7045   003004  50F5               	movf	tablat,w,c
  7046   003006  6E01               	movwf	fputc@c^0,c
  7047   003008  6A02               	clrf	(fputc@c+1)^0,c
  7048   00300A  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7049   00300E  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7050   003012  EC1E  F01F         	call	_fputc	;wreg free
  7051   003016  EFF0  F017         	goto	l3738
  7052   00301A                     l1422:
  7053   00301A  0012               	return		;funcret
  7054   00301C                     __end_of_vfpfcnvrt:
  7055                           	callstack 0
  7056                           
  7057 ;; *************** function _xtoa *****************
  7058 ;; Defined at:
  7059 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7062 ;;		 -> sprintf@f(11), 
  7063 ;;  d               8   29[COMRAM] unsigned long long 
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;  n               8   51[COMRAM] unsigned long long 
  7066 ;;  i               2   59[COMRAM] int 
  7067 ;;  p               2   49[COMRAM] int 
  7068 ;;  w               2   45[COMRAM] int 
  7069 ;;  c               1   61[COMRAM] unsigned char 
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      void 
  7072 ;; Registers used:
  7073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7079 ;;      Params:        10       0       0       0       0       0       0       0       0
  7080 ;;      Locals:        17       0       0       0       0       0       0       0       0
  7081 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7082 ;;      Totals:        35       0       0       0       0       0       0       0       0
  7083 ;;Total ram usage:       35 bytes
  7084 ;; Hardware stack levels used: 1
  7085 ;; Hardware stack levels required when called: 5
  7086 ;; This function calls:
  7087 ;;		_pad
  7088 ;; This function is called by:
  7089 ;;		_vfpfcnvrt
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           	psect	text16
  7094   0031D0                     __ptext16:
  7095                           	callstack 0
  7096   0031D0                     _xtoa:
  7097                           	callstack 21
  7098   0031D0                     
  7099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 948:     p = (0 < prec) ? prec : 1;
  7100   0031D0  0100               	movlb	0	; () banked
  7101   0031D2  BF93               	btfsc	(_prec+1)& (0+255),7,b
  7102   0031D4  EFF6  F018         	goto	u2980
  7103   0031D8  5193               	movf	(_prec+1)& (0+255),w,b
  7104   0031DA  E106               	bnz	u2981
  7105   0031DC  0592               	decf	_prec& (0+255),w,b
  7106   0031DE  B0D8               	btfsc	status,0,c
  7107   0031E0  EFF4  F018         	goto	u2981
  7108   0031E4  EFF6  F018         	goto	u2980
  7109   0031E8                     u2981:
  7110   0031E8  EFFC  F018         	goto	l1403
  7111   0031EC                     u2980:
  7112   0031EC                     
  7113                           ; BSR set to: 0
  7114   0031EC  0E00               	movlw	0
  7115   0031EE  6E33               	movwf	(xtoa@p+1)^0,c
  7116   0031F0  0E01               	movlw	1
  7117   0031F2  6E32               	movwf	xtoa@p^0,c
  7118   0031F4  EF00  F019         	goto	l1405
  7119   0031F8                     l1403:
  7120                           
  7121                           ; BSR set to: 0
  7122   0031F8  C092  F032         	movff	_prec,xtoa@p
  7123   0031FC  C093  F033         	movff	_prec+1,xtoa@p+1
  7124   003200                     l1405:
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  7128   003200  C090  F02E         	movff	_width,xtoa@w
  7129   003204  C091  F02F         	movff	_width+1,xtoa@w+1
  7130                           
  7131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  7132   003208  C01E  F034         	movff	xtoa@d,xtoa@n
  7133   00320C  C01F  F035         	movff	xtoa@d+1,xtoa@n+1
  7134   003210  C020  F036         	movff	xtoa@d+2,xtoa@n+2
  7135   003214  C021  F037         	movff	xtoa@d+3,xtoa@n+3
  7136   003218  C022  F038         	movff	xtoa@d+4,xtoa@n+4
  7137   00321C  C023  F039         	movff	xtoa@d+5,xtoa@n+5
  7138   003220  C024  F03A         	movff	xtoa@d+6,xtoa@n+6
  7139   003224  C025  F03B         	movff	xtoa@d+7,xtoa@n+7
  7140   003228                     
  7141                           ; BSR set to: 0
  7142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  7143   003228  0E00               	movlw	0
  7144   00322A  6E3D               	movwf	(xtoa@i+1)^0,c
  7145   00322C  0E1F               	movlw	31
  7146   00322E  6E3C               	movwf	xtoa@i^0,c
  7147   003230                     
  7148                           ; BSR set to: 0
  7149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  7150   003230  0E00               	movlw	0
  7151   003232  0101               	movlb	1	; () banked
  7152   003234  6F1F               	movwf	(_dbuf+31)& (0+255),b
  7153                           
  7154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  7155   003236  EF78  F019         	goto	l3660
  7156   00323A                     l3640:
  7157                           
  7158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  7159   00323A  063C               	decf	xtoa@i^0,f,c
  7160   00323C  A0D8               	btfss	status,0,c
  7161   00323E  063D               	decf	(xtoa@i+1)^0,f,c
  7162   003240                     
  7163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  7164   003240  5034               	movf	xtoa@n^0,w,c
  7165   003242  0B0F               	andlw	15
  7166   003244  6E3E               	movwf	xtoa@c^0,c
  7167   003246                     
  7168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  7169   003246  0E09               	movlw	9
  7170   003248  643E               	cpfsgt	xtoa@c^0,c
  7171   00324A  EF29  F019         	goto	u2991
  7172   00324E  EF2B  F019         	goto	u2990
  7173   003252                     u2991:
  7174   003252  EF33  F019         	goto	l3648
  7175   003256                     u2990:
  7176   003256  0E57               	movlw	87
  7177   003258  243E               	addwf	xtoa@c^0,w,c
  7178   00325A  6E30               	movwf	_xtoa$1346^0,c
  7179   00325C  6A31               	clrf	(_xtoa$1346+1)^0,c
  7180   00325E  0E00               	movlw	0
  7181   003260  2231               	addwfc	(_xtoa$1346+1)^0,f,c
  7182   003262  EF39  F019         	goto	l3650
  7183   003266                     l3648:
  7184   003266  0E30               	movlw	48
  7185   003268  243E               	addwf	xtoa@c^0,w,c
  7186   00326A  6E30               	movwf	_xtoa$1346^0,c
  7187   00326C  6A31               	clrf	(_xtoa$1346+1)^0,c
  7188   00326E  0E00               	movlw	0
  7189   003270  2231               	addwfc	(_xtoa$1346+1)^0,f,c
  7190   003272                     l3650:
  7191   003272  C030  F03E         	movff	_xtoa$1346,xtoa@c
  7192   003276                     
  7193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  7194   003276  0E00               	movlw	low _dbuf
  7195   003278  243C               	addwf	xtoa@i^0,w,c
  7196   00327A  6ED9               	movwf	fsr2l,c
  7197   00327C  0E01               	movlw	high _dbuf
  7198   00327E  203D               	addwfc	(xtoa@i+1)^0,w,c
  7199   003280  6EDA               	movwf	fsr2h,c
  7200   003282  C03E  FFDF         	movff	xtoa@c,indf2
  7201   003286                     
  7202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  7203   003286  0632               	decf	xtoa@p^0,f,c
  7204   003288  A0D8               	btfss	status,0,c
  7205   00328A  0633               	decf	(xtoa@p+1)^0,f,c
  7206   00328C                     
  7207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  7208   00328C  062E               	decf	xtoa@w^0,f,c
  7209   00328E  A0D8               	btfss	status,0,c
  7210   003290  062F               	decf	(xtoa@w+1)^0,f,c
  7211   003292                     
  7212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  7213   003292  C034  F026         	movff	xtoa@n,??_xtoa
  7214   003296  C035  F027         	movff	xtoa@n+1,??_xtoa+1
  7215   00329A  C036  F028         	movff	xtoa@n+2,??_xtoa+2
  7216   00329E  C037  F029         	movff	xtoa@n+3,??_xtoa+3
  7217   0032A2  C038  F02A         	movff	xtoa@n+4,??_xtoa+4
  7218   0032A6  C039  F02B         	movff	xtoa@n+5,??_xtoa+5
  7219   0032AA  C03A  F02C         	movff	xtoa@n+6,??_xtoa+6
  7220   0032AE  C03B  F02D         	movff	xtoa@n+7,??_xtoa+7
  7221   0032B2  0E05               	movlw	5
  7222   0032B4  EF65  F019         	goto	u3000
  7223   0032B8                     u3005:
  7224   0032B8  90D8               	bcf	status,0,c
  7225   0032BA  322D               	rrcf	(??_xtoa+7)^0,f,c
  7226   0032BC  322C               	rrcf	(??_xtoa+6)^0,f,c
  7227   0032BE  322B               	rrcf	(??_xtoa+5)^0,f,c
  7228   0032C0  322A               	rrcf	(??_xtoa+4)^0,f,c
  7229   0032C2  3229               	rrcf	(??_xtoa+3)^0,f,c
  7230   0032C4  3228               	rrcf	(??_xtoa+2)^0,f,c
  7231   0032C6  3227               	rrcf	(??_xtoa+1)^0,f,c
  7232   0032C8  3226               	rrcf	??_xtoa^0,f,c
  7233   0032CA                     u3000:
  7234   0032CA  2EE8               	decfsz	wreg,f,c
  7235   0032CC  EF5C  F019         	goto	u3005
  7236   0032D0  C026  F034         	movff	??_xtoa,xtoa@n
  7237   0032D4  C027  F035         	movff	??_xtoa+1,xtoa@n+1
  7238   0032D8  C028  F036         	movff	??_xtoa+2,xtoa@n+2
  7239   0032DC  C029  F037         	movff	??_xtoa+3,xtoa@n+3
  7240   0032E0  C02A  F038         	movff	??_xtoa+4,xtoa@n+4
  7241   0032E4  C02B  F039         	movff	??_xtoa+5,xtoa@n+5
  7242   0032E8  C02C  F03A         	movff	??_xtoa+6,xtoa@n+6
  7243   0032EC  C02D  F03B         	movff	??_xtoa+7,xtoa@n+7
  7244   0032F0                     l3660:
  7245                           
  7246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  7247   0032F0  BE3D               	btfsc	(xtoa@i+1)^0,7,c
  7248   0032F2  EF84  F019         	goto	u3011
  7249   0032F6  503D               	movf	(xtoa@i+1)^0,w,c
  7250   0032F8  E109               	bnz	u3010
  7251   0032FA  0E02               	movlw	2
  7252   0032FC  5C3C               	subwf	xtoa@i^0,w,c
  7253   0032FE  A0D8               	btfss	status,0,c
  7254   003300  EF84  F019         	goto	u3011
  7255   003304  EF86  F019         	goto	u3010
  7256   003308                     u3011:
  7257   003308  EFA2  F019         	goto	l3666
  7258   00330C                     u3010:
  7259   00330C  5034               	movf	xtoa@n^0,w,c
  7260   00330E  1035               	iorwf	(xtoa@n+1)^0,w,c
  7261   003310  1036               	iorwf	(xtoa@n+2)^0,w,c
  7262   003312  1037               	iorwf	(xtoa@n+3)^0,w,c
  7263   003314  1038               	iorwf	(xtoa@n+4)^0,w,c
  7264   003316  1039               	iorwf	(xtoa@n+5)^0,w,c
  7265   003318  103A               	iorwf	(xtoa@n+6)^0,w,c
  7266   00331A  103B               	iorwf	(xtoa@n+7)^0,w,c
  7267   00331C  A4D8               	btfss	status,2,c
  7268   00331E  EF93  F019         	goto	u3021
  7269   003322  EF95  F019         	goto	u3020
  7270   003326                     u3021:
  7271   003326  EF1D  F019         	goto	l3640
  7272   00332A                     u3020:
  7273   00332A  BE33               	btfsc	(xtoa@p+1)^0,7,c
  7274   00332C  EFA2  F019         	goto	u3030
  7275   003330  5033               	movf	(xtoa@p+1)^0,w,c
  7276   003332  E106               	bnz	u3031
  7277   003334  0432               	decf	xtoa@p^0,w,c
  7278   003336  B0D8               	btfsc	status,0,c
  7279   003338  EFA0  F019         	goto	u3031
  7280   00333C  EFA2  F019         	goto	u3030
  7281   003340                     u3031:
  7282   003340  EF1D  F019         	goto	l3640
  7283   003344                     u3030:
  7284   003344                     l3666:
  7285                           
  7286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  7287   003344  C01C  F011         	movff	xtoa@fp,pad@fp
  7288   003348  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  7289   00334C  0E00               	movlw	low _dbuf
  7290   00334E  243C               	addwf	xtoa@i^0,w,c
  7291   003350  6E13               	movwf	pad@buf^0,c
  7292   003352  0E01               	movlw	high _dbuf
  7293   003354  203D               	addwfc	(xtoa@i+1)^0,w,c
  7294   003356  6E14               	movwf	(pad@buf+1)^0,c
  7295   003358  C02E  F015         	movff	xtoa@w,pad@p
  7296   00335C  C02F  F016         	movff	xtoa@w+1,pad@p+1
  7297   003360  EC7C  F020         	call	_pad	;wreg free
  7298   003364  0012               	return		;funcret
  7299   003366                     __end_of_xtoa:
  7300                           	callstack 0
  7301                           
  7302 ;; *************** function _dtoa *****************
  7303 ;; Defined at:
  7304 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7307 ;;		 -> sprintf@f(11), 
  7308 ;;  d               8   29[COMRAM] long long 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  n               8   51[COMRAM] long long 
  7311 ;;  i               2   59[COMRAM] int 
  7312 ;;  w               2   49[COMRAM] int 
  7313 ;;  p               2   47[COMRAM] int 
  7314 ;;  s               1   61[COMRAM] unsigned char 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      void 
  7317 ;; Registers used:
  7318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7324 ;;      Params:        10       0       0       0       0       0       0       0       0
  7325 ;;      Locals:        17       0       0       0       0       0       0       0       0
  7326 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7327 ;;      Totals:        35       0       0       0       0       0       0       0       0
  7328 ;;Total ram usage:       35 bytes
  7329 ;; Hardware stack levels used: 1
  7330 ;; Hardware stack levels required when called: 5
  7331 ;; This function calls:
  7332 ;;		___aodiv
  7333 ;;		___aomod
  7334 ;;		_abs
  7335 ;;		_pad
  7336 ;; This function is called by:
  7337 ;;		_vfpfcnvrt
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           	psect	text17
  7342   0026E2                     __ptext17:
  7343                           	callstack 0
  7344   0026E2                     _dtoa:
  7345                           	callstack 21
  7346   0026E2                     
  7347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  7348   0026E2  C01E  F034         	movff	dtoa@d,dtoa@n
  7349   0026E6  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  7350   0026EA  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  7351   0026EE  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  7352   0026F2  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  7353   0026F6  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  7354   0026FA  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  7355   0026FE  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  7356   002702                     
  7357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  7358   002702  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  7359   002704  EF86  F013         	goto	u2881
  7360   002708  EF89  F013         	goto	u2880
  7361   00270C                     u2881:
  7362   00270C  0E01               	movlw	1
  7363   00270E  EF8A  F013         	goto	u2890
  7364   002712                     u2880:
  7365   002712  0E00               	movlw	0
  7366   002714                     u2890:
  7367   002714  6E3E               	movwf	dtoa@s^0,c
  7368   002716                     
  7369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  7370   002716  503E               	movf	dtoa@s^0,w,c
  7371   002718  B4D8               	btfsc	status,2,c
  7372   00271A  EF91  F013         	goto	u2901
  7373   00271E  EF93  F013         	goto	u2900
  7374   002722                     u2901:
  7375   002722  EFA3  F013         	goto	l3588
  7376   002726                     u2900:
  7377   002726                     
  7378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  7379   002726  1E3B               	comf	(dtoa@n+7)^0,f,c
  7380   002728  1E3A               	comf	(dtoa@n+6)^0,f,c
  7381   00272A  1E39               	comf	(dtoa@n+5)^0,f,c
  7382   00272C  1E38               	comf	(dtoa@n+4)^0,f,c
  7383   00272E  1E37               	comf	(dtoa@n+3)^0,f,c
  7384   002730  1E36               	comf	(dtoa@n+2)^0,f,c
  7385   002732  1E35               	comf	(dtoa@n+1)^0,f,c
  7386   002734  6C34               	negf	dtoa@n^0,c
  7387   002736  0E00               	movlw	0
  7388   002738  2235               	addwfc	(dtoa@n+1)^0,f,c
  7389   00273A  2236               	addwfc	(dtoa@n+2)^0,f,c
  7390   00273C  2237               	addwfc	(dtoa@n+3)^0,f,c
  7391   00273E  2238               	addwfc	(dtoa@n+4)^0,f,c
  7392   002740  2239               	addwfc	(dtoa@n+5)^0,f,c
  7393   002742  223A               	addwfc	(dtoa@n+6)^0,f,c
  7394   002744  223B               	addwfc	(dtoa@n+7)^0,f,c
  7395   002746                     l3588:
  7396                           
  7397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  7398   002746  0100               	movlb	0	; () banked
  7399   002748  BF93               	btfsc	(_prec+1)& (0+255),7,b
  7400   00274A  EFB1  F013         	goto	u2910
  7401   00274E  5193               	movf	(_prec+1)& (0+255),w,b
  7402   002750  E106               	bnz	u2911
  7403   002752  0592               	decf	_prec& (0+255),w,b
  7404   002754  B0D8               	btfsc	status,0,c
  7405   002756  EFAF  F013         	goto	u2911
  7406   00275A  EFB1  F013         	goto	u2910
  7407   00275E                     u2911:
  7408   00275E  EFB7  F013         	goto	l1385
  7409   002762                     u2910:
  7410   002762                     
  7411                           ; BSR set to: 0
  7412   002762  0E00               	movlw	0
  7413   002764  6E31               	movwf	(dtoa@p+1)^0,c
  7414   002766  0E01               	movlw	1
  7415   002768  6E30               	movwf	dtoa@p^0,c
  7416   00276A  EFBB  F013         	goto	l1387
  7417   00276E                     l1385:
  7418                           
  7419                           ; BSR set to: 0
  7420   00276E  C092  F030         	movff	_prec,dtoa@p
  7421   002772  C093  F031         	movff	_prec+1,dtoa@p+1
  7422   002776                     l1387:
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  7426   002776  C090  F032         	movff	_width,dtoa@w
  7427   00277A  C091  F033         	movff	_width+1,dtoa@w+1
  7428   00277E                     
  7429                           ; BSR set to: 0
  7430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  7431   00277E  503E               	movf	dtoa@s^0,w,c
  7432   002780  B4D8               	btfsc	status,2,c
  7433   002782  EFC5  F013         	goto	u2921
  7434   002786  EFC7  F013         	goto	u2920
  7435   00278A                     u2921:
  7436   00278A  EFDE  F013         	goto	l1388
  7437   00278E                     u2920:
  7438   00278E                     
  7439                           ; BSR set to: 0
  7440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  7441   00278E  0632               	decf	dtoa@w^0,f,c
  7442   002790  A0D8               	btfss	status,0,c
  7443   002792  0633               	decf	(dtoa@w+1)^0,f,c
  7444   002794                     
  7445                           ; BSR set to: 0
  7446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  7447   002794  503E               	movf	dtoa@s^0,w,c
  7448   002796  A4D8               	btfss	status,2,c
  7449   002798  EFD0  F013         	goto	u2931
  7450   00279C  EFD2  F013         	goto	u2930
  7451   0027A0                     u2931:
  7452   0027A0  EFD8  F013         	goto	l3600
  7453   0027A4                     u2930:
  7454   0027A4                     
  7455                           ; BSR set to: 0
  7456   0027A4  0E00               	movlw	0
  7457   0027A6  6E2F               	movwf	(_dtoa$1336+1)^0,c
  7458   0027A8  0E2B               	movlw	43
  7459   0027AA  6E2E               	movwf	_dtoa$1336^0,c
  7460   0027AC  EFDC  F013         	goto	l3602
  7461   0027B0                     l3600:
  7462                           
  7463                           ; BSR set to: 0
  7464   0027B0  0E00               	movlw	0
  7465   0027B2  6E2F               	movwf	(_dtoa$1336+1)^0,c
  7466   0027B4  0E2D               	movlw	45
  7467   0027B6  6E2E               	movwf	_dtoa$1336^0,c
  7468   0027B8                     l3602:
  7469                           
  7470                           ; BSR set to: 0
  7471   0027B8  C02E  F03E         	movff	_dtoa$1336,dtoa@s
  7472   0027BC                     l1388:
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  7476   0027BC  0E00               	movlw	0
  7477   0027BE  6E3D               	movwf	(dtoa@i+1)^0,c
  7478   0027C0  0E1F               	movlw	31
  7479   0027C2  6E3C               	movwf	dtoa@i^0,c
  7480   0027C4                     
  7481                           ; BSR set to: 0
  7482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  7483   0027C4  0E00               	movlw	0
  7484   0027C6  0101               	movlb	1	; () banked
  7485   0027C8  6F1F               	movwf	(_dbuf+31)& (0+255),b
  7486                           
  7487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  7488   0027CA  EF63  F014         	goto	l3616
  7489   0027CE                     l3606:
  7490                           
  7491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  7492   0027CE  063C               	decf	dtoa@i^0,f,c
  7493   0027D0  A0D8               	btfss	status,0,c
  7494   0027D2  063D               	decf	(dtoa@i+1)^0,f,c
  7495   0027D4                     
  7496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7497   0027D4  0E00               	movlw	low _dbuf
  7498   0027D6  243C               	addwf	dtoa@i^0,w,c
  7499   0027D8  6ED9               	movwf	fsr2l,c
  7500   0027DA  0E01               	movlw	high _dbuf
  7501   0027DC  203D               	addwfc	(dtoa@i+1)^0,w,c
  7502   0027DE  6EDA               	movwf	fsr2h,c
  7503   0027E0  C034  F001         	movff	dtoa@n,___aomod@dividend
  7504   0027E4  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7505   0027E8  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7506   0027EC  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7507   0027F0  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7508   0027F4  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7509   0027F8  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7510   0027FC  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7511   002800  0E0A               	movlw	10
  7512   002802  6E09               	movwf	___aomod@divisor^0,c
  7513   002804  0E00               	movlw	0
  7514   002806  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7515   002808  0E00               	movlw	0
  7516   00280A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7517   00280C  0E00               	movlw	0
  7518   00280E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7519   002810  0E00               	movlw	0
  7520   002812  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7521   002814  0E00               	movlw	0
  7522   002816  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7523   002818  0E00               	movlw	0
  7524   00281A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7525   00281C  0E00               	movlw	0
  7526   00281E  6E10               	movwf	(___aomod@divisor+7)^0,c
  7527   002820  EC77  F01A         	call	___aomod	;wreg free
  7528   002824  C001  F026         	movff	?___aomod,??_dtoa
  7529   002828  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7530   00282C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7531   002830  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7532   002834  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7533   002838  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7534   00283C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7535   002840  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7536   002844  C026  F013         	movff	??_dtoa,abs@a
  7537   002848  C027  F014         	movff	??_dtoa+1,abs@a+1
  7538   00284C  EC72  F022         	call	_abs	;wreg free
  7539   002850  5013               	movf	?_abs^0,w,c
  7540   002852  0F30               	addlw	48
  7541   002854  6EDF               	movwf	indf2,c
  7542   002856                     
  7543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  7544   002856  0630               	decf	dtoa@p^0,f,c
  7545   002858  A0D8               	btfss	status,0,c
  7546   00285A  0631               	decf	(dtoa@p+1)^0,f,c
  7547   00285C                     
  7548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  7549   00285C  0632               	decf	dtoa@w^0,f,c
  7550   00285E  A0D8               	btfss	status,0,c
  7551   002860  0633               	decf	(dtoa@w+1)^0,f,c
  7552   002862                     
  7553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  7554   002862  C034  F001         	movff	dtoa@n,___aodiv@dividend
  7555   002866  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7556   00286A  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7557   00286E  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7558   002872  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7559   002876  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7560   00287A  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7561   00287E  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7562   002882  0E0A               	movlw	10
  7563   002884  6E09               	movwf	___aodiv@divisor^0,c
  7564   002886  0E00               	movlw	0
  7565   002888  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7566   00288A  0E00               	movlw	0
  7567   00288C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7568   00288E  0E00               	movlw	0
  7569   002890  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7570   002892  0E00               	movlw	0
  7571   002894  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7572   002896  0E00               	movlw	0
  7573   002898  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7574   00289A  0E00               	movlw	0
  7575   00289C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7576   00289E  0E00               	movlw	0
  7577   0028A0  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7578   0028A2  ECB3  F019         	call	___aodiv	;wreg free
  7579   0028A6  C001  F034         	movff	?___aodiv,dtoa@n
  7580   0028AA  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  7581   0028AE  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  7582   0028B2  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  7583   0028B6  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  7584   0028BA  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  7585   0028BE  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  7586   0028C2  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  7587   0028C6                     l3616:
  7588                           
  7589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  7590   0028C6  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  7591   0028C8  EF6E  F014         	goto	u2941
  7592   0028CC  503D               	movf	(dtoa@i+1)^0,w,c
  7593   0028CE  E108               	bnz	u2940
  7594   0028D0  043C               	decf	dtoa@i^0,w,c
  7595   0028D2  A0D8               	btfss	status,0,c
  7596   0028D4  EF6E  F014         	goto	u2941
  7597   0028D8  EF70  F014         	goto	u2940
  7598   0028DC                     u2941:
  7599   0028DC  EF8C  F014         	goto	l3622
  7600   0028E0                     u2940:
  7601   0028E0  5034               	movf	dtoa@n^0,w,c
  7602   0028E2  1035               	iorwf	(dtoa@n+1)^0,w,c
  7603   0028E4  1036               	iorwf	(dtoa@n+2)^0,w,c
  7604   0028E6  1037               	iorwf	(dtoa@n+3)^0,w,c
  7605   0028E8  1038               	iorwf	(dtoa@n+4)^0,w,c
  7606   0028EA  1039               	iorwf	(dtoa@n+5)^0,w,c
  7607   0028EC  103A               	iorwf	(dtoa@n+6)^0,w,c
  7608   0028EE  103B               	iorwf	(dtoa@n+7)^0,w,c
  7609   0028F0  A4D8               	btfss	status,2,c
  7610   0028F2  EF7D  F014         	goto	u2951
  7611   0028F6  EF7F  F014         	goto	u2950
  7612   0028FA                     u2951:
  7613   0028FA  EFE7  F013         	goto	l3606
  7614   0028FE                     u2950:
  7615   0028FE  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7616   002900  EF8C  F014         	goto	u2960
  7617   002904  5031               	movf	(dtoa@p+1)^0,w,c
  7618   002906  E106               	bnz	u2961
  7619   002908  0430               	decf	dtoa@p^0,w,c
  7620   00290A  B0D8               	btfsc	status,0,c
  7621   00290C  EF8A  F014         	goto	u2961
  7622   002910  EF8C  F014         	goto	u2960
  7623   002914                     u2961:
  7624   002914  EFE7  F013         	goto	l3606
  7625   002918                     u2960:
  7626   002918                     l3622:
  7627                           
  7628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  7629   002918  503E               	movf	dtoa@s^0,w,c
  7630   00291A  B4D8               	btfsc	status,2,c
  7631   00291C  EF92  F014         	goto	u2971
  7632   002920  EF94  F014         	goto	u2970
  7633   002924                     u2971:
  7634   002924  EF9F  F014         	goto	l3628
  7635   002928                     u2970:
  7636   002928                     
  7637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  7638   002928  063C               	decf	dtoa@i^0,f,c
  7639   00292A  A0D8               	btfss	status,0,c
  7640   00292C  063D               	decf	(dtoa@i+1)^0,f,c
  7641   00292E                     
  7642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  7643   00292E  0E00               	movlw	low _dbuf
  7644   002930  243C               	addwf	dtoa@i^0,w,c
  7645   002932  6ED9               	movwf	fsr2l,c
  7646   002934  0E01               	movlw	high _dbuf
  7647   002936  203D               	addwfc	(dtoa@i+1)^0,w,c
  7648   002938  6EDA               	movwf	fsr2h,c
  7649   00293A  C03E  FFDF         	movff	dtoa@s,indf2
  7650   00293E                     l3628:
  7651                           
  7652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7653   00293E  C01C  F011         	movff	dtoa@fp,pad@fp
  7654   002942  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7655   002946  0E00               	movlw	low _dbuf
  7656   002948  243C               	addwf	dtoa@i^0,w,c
  7657   00294A  6E13               	movwf	pad@buf^0,c
  7658   00294C  0E01               	movlw	high _dbuf
  7659   00294E  203D               	addwfc	(dtoa@i+1)^0,w,c
  7660   002950  6E14               	movwf	(pad@buf+1)^0,c
  7661   002952  C032  F015         	movff	dtoa@w,pad@p
  7662   002956  C033  F016         	movff	dtoa@w+1,pad@p+1
  7663   00295A  EC7C  F020         	call	_pad	;wreg free
  7664   00295E  0012               	return		;funcret
  7665   002960                     __end_of_dtoa:
  7666                           	callstack 0
  7667                           
  7668 ;; *************** function _pad *****************
  7669 ;; Defined at:
  7670 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7671 ;; Parameters:    Size  Location     Type
  7672 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7673 ;;		 -> sprintf@f(11), 
  7674 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7675 ;;		 -> dbuf(32), 
  7676 ;;  p               2   20[COMRAM] int 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;  w               2   25[COMRAM] int 
  7679 ;;  i               2   23[COMRAM] int 
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  1    wreg      void 
  7682 ;; Registers used:
  7683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7689 ;;      Params:         6       0       0       0       0       0       0       0       0
  7690 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7691 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7692 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7693 ;;Total ram usage:       11 bytes
  7694 ;; Hardware stack levels used: 1
  7695 ;; Hardware stack levels required when called: 4
  7696 ;; This function calls:
  7697 ;;		_fputc
  7698 ;;		_fputs
  7699 ;; This function is called by:
  7700 ;;		_dtoa
  7701 ;;		_xtoa
  7702 ;; This function uses a non-reentrant model
  7703 ;;
  7704                           
  7705                           	psect	text18
  7706   0040F8                     __ptext18:
  7707                           	callstack 0
  7708   0040F8                     _pad:
  7709                           	callstack 21
  7710   0040F8                     
  7711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  7712   0040F8  BE16               	btfsc	(pad@p+1)^0,7,c
  7713   0040FA  EF81  F020         	goto	u2841
  7714   0040FE  EF83  F020         	goto	u2840
  7715   004102                     u2841:
  7716   004102  EF89  F020         	goto	l3564
  7717   004106                     u2840:
  7718   004106  C015  F01A         	movff	pad@p,pad@w
  7719   00410A  C016  F01B         	movff	pad@p+1,pad@w+1
  7720   00410E  EF8D  F020         	goto	l1376
  7721   004112                     l3564:
  7722   004112  0E00               	movlw	0
  7723   004114  6E1B               	movwf	(pad@w+1)^0,c
  7724   004116  0E00               	movlw	0
  7725   004118  6E1A               	movwf	pad@w^0,c
  7726   00411A                     l1376:
  7727                           
  7728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  7729   00411A  0E00               	movlw	0
  7730   00411C  6E19               	movwf	(pad@i+1)^0,c
  7731   00411E  0E00               	movlw	0
  7732   004120  6E18               	movwf	pad@i^0,c
  7733                           
  7734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7735   004122  EF9F  F020         	goto	l3570
  7736   004126                     l3566:
  7737                           
  7738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  7739   004126  0E00               	movlw	0
  7740   004128  6E02               	movwf	(fputc@c+1)^0,c
  7741   00412A  0E20               	movlw	32
  7742   00412C  6E01               	movwf	fputc@c^0,c
  7743   00412E  C011  F003         	movff	pad@fp,fputc@fp
  7744   004132  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7745   004136  EC1E  F01F         	call	_fputc	;wreg free
  7746   00413A                     
  7747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  7748   00413A  4A18               	infsnz	pad@i^0,f,c
  7749   00413C  2A19               	incf	(pad@i+1)^0,f,c
  7750   00413E                     l3570:
  7751                           
  7752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7753   00413E  501A               	movf	pad@w^0,w,c
  7754   004140  5C18               	subwf	pad@i^0,w,c
  7755   004142  5019               	movf	(pad@i+1)^0,w,c
  7756   004144  0A80               	xorlw	128
  7757   004146  6E17               	movwf	??_pad^0,c
  7758   004148  501B               	movf	(pad@w+1)^0,w,c
  7759   00414A  0A80               	xorlw	128
  7760   00414C  5817               	subwfb	??_pad^0,w,c
  7761   00414E  A0D8               	btfss	status,0,c
  7762   004150  EFAC  F020         	goto	u2851
  7763   004154  EFAE  F020         	goto	u2850
  7764   004158                     u2851:
  7765   004158  EF93  F020         	goto	l3566
  7766   00415C                     u2850:
  7767   00415C                     
  7768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  7769   00415C  C013  F00A         	movff	pad@buf,fputs@s
  7770   004160  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7771   004164  C011  F00C         	movff	pad@fp,fputs@fp
  7772   004168  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7773   00416C  EC50  F022         	call	_fputs	;wreg free
  7774   004170  0012               	return		;funcret
  7775   004172                     __end_of_pad:
  7776                           	callstack 0
  7777                           
  7778 ;; *************** function _fputs *****************
  7779 ;; Defined at:
  7780 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7783 ;;		 -> dbuf(32), 
  7784 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7785 ;;		 -> sprintf@f(11), 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;  i               2   14[COMRAM] int 
  7788 ;;  c               1   13[COMRAM] unsigned char 
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  2    9[COMRAM] int 
  7791 ;; Registers used:
  7792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7798 ;;      Params:         4       0       0       0       0       0       0       0       0
  7799 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7801 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7802 ;;Total ram usage:        7 bytes
  7803 ;; Hardware stack levels used: 1
  7804 ;; Hardware stack levels required when called: 3
  7805 ;; This function calls:
  7806 ;;		_fputc
  7807 ;; This function is called by:
  7808 ;;		_pad
  7809 ;; This function uses a non-reentrant model
  7810 ;;
  7811                           
  7812                           	psect	text19
  7813   0044A0                     __ptext19:
  7814                           	callstack 0
  7815   0044A0                     _fputs:
  7816                           	callstack 21
  7817   0044A0  0E00               	movlw	0
  7818   0044A2  6E10               	movwf	(fputs@i+1)^0,c
  7819   0044A4  0E00               	movlw	0
  7820   0044A6  6E0F               	movwf	fputs@i^0,c
  7821   0044A8  EF61  F022         	goto	l3478
  7822   0044AC                     l3474:
  7823   0044AC  C00E  F001         	movff	fputs@c,fputc@c
  7824   0044B0  6A02               	clrf	(fputc@c+1)^0,c
  7825   0044B2  C00C  F003         	movff	fputs@fp,fputc@fp
  7826   0044B6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7827   0044BA  EC1E  F01F         	call	_fputc	;wreg free
  7828   0044BE  4A0F               	infsnz	fputs@i^0,f,c
  7829   0044C0  2A10               	incf	(fputs@i+1)^0,f,c
  7830   0044C2                     l3478:
  7831   0044C2  500F               	movf	fputs@i^0,w,c
  7832   0044C4  240A               	addwf	fputs@s^0,w,c
  7833   0044C6  6ED9               	movwf	fsr2l,c
  7834   0044C8  5010               	movf	(fputs@i+1)^0,w,c
  7835   0044CA  200B               	addwfc	(fputs@s+1)^0,w,c
  7836   0044CC  6EDA               	movwf	fsr2h,c
  7837   0044CE  50DF               	movf	indf2,w,c
  7838   0044D0  6E0E               	movwf	fputs@c^0,c
  7839   0044D2  500E               	movf	fputs@c^0,w,c
  7840   0044D4  A4D8               	btfss	status,2,c
  7841   0044D6  EF6F  F022         	goto	u2701
  7842   0044DA  EF71  F022         	goto	u2700
  7843   0044DE                     u2701:
  7844   0044DE  EF56  F022         	goto	l3474
  7845   0044E2                     u2700:
  7846   0044E2  0012               	return		;funcret
  7847   0044E4                     __end_of_fputs:
  7848                           	callstack 0
  7849                           
  7850 ;; *************** function _fputc *****************
  7851 ;; Defined at:
  7852 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  c               2    0[COMRAM] int 
  7855 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7856 ;;		 -> sprintf@f(11), 
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;		None
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  2    0[COMRAM] int 
  7861 ;; Registers used:
  7862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7868 ;;      Params:         4       0       0       0       0       0       0       0       0
  7869 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7870 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7871 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7872 ;;Total ram usage:        9 bytes
  7873 ;; Hardware stack levels used: 1
  7874 ;; Hardware stack levels required when called: 2
  7875 ;; This function calls:
  7876 ;;		_putch
  7877 ;; This function is called by:
  7878 ;;		_pad
  7879 ;;		_vfpfcnvrt
  7880 ;;		_fputs
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text20
  7885   003E3C                     __ptext20:
  7886                           	callstack 0
  7887   003E3C                     _fputc:
  7888                           	callstack 21
  7889   003E3C  5003               	movf	fputc@fp^0,w,c
  7890   003E3E  1004               	iorwf	(fputc@fp+1)^0,w,c
  7891   003E40  B4D8               	btfsc	status,2,c
  7892   003E42  EF25  F01F         	goto	u2661
  7893   003E46  EF27  F01F         	goto	u2660
  7894   003E4A                     u2661:
  7895   003E4A  EF30  F01F         	goto	l3462
  7896   003E4E                     u2660:
  7897   003E4E  5003               	movf	fputc@fp^0,w,c
  7898   003E50  1004               	iorwf	(fputc@fp+1)^0,w,c
  7899   003E52  A4D8               	btfss	status,2,c
  7900   003E54  EF2E  F01F         	goto	u2671
  7901   003E58  EF30  F01F         	goto	u2670
  7902   003E5C                     u2671:
  7903   003E5C  EF35  F01F         	goto	l3464
  7904   003E60                     u2670:
  7905   003E60                     l3462:
  7906   003E60  5001               	movf	fputc@c^0,w,c
  7907   003E62  ECAD  F023         	call	_putch
  7908   003E66  EF82  F01F         	goto	l1453
  7909   003E6A                     l3464:
  7910   003E6A  EE20 F009          	lfsr	2,9
  7911   003E6E  5003               	movf	fputc@fp^0,w,c
  7912   003E70  26D9               	addwf	fsr2l,f,c
  7913   003E72  5004               	movf	(fputc@fp+1)^0,w,c
  7914   003E74  22DA               	addwfc	fsr2h,f,c
  7915   003E76  50DE               	movf	postinc2,w,c
  7916   003E78  10DE               	iorwf	postinc2,w,c
  7917   003E7A  B4D8               	btfsc	status,2,c
  7918   003E7C  EF42  F01F         	goto	u2681
  7919   003E80  EF44  F01F         	goto	u2680
  7920   003E84                     u2681:
  7921   003E84  EF5F  F01F         	goto	l3468
  7922   003E88                     u2680:
  7923   003E88  EE20 F009          	lfsr	2,9
  7924   003E8C  5003               	movf	fputc@fp^0,w,c
  7925   003E8E  26D9               	addwf	fsr2l,f,c
  7926   003E90  5004               	movf	(fputc@fp+1)^0,w,c
  7927   003E92  22DA               	addwfc	fsr2h,f,c
  7928   003E94  EE10 F003          	lfsr	1,3
  7929   003E98  5003               	movf	fputc@fp^0,w,c
  7930   003E9A  26E1               	addwf	fsr1l,f,c
  7931   003E9C  5004               	movf	(fputc@fp+1)^0,w,c
  7932   003E9E  22E2               	addwfc	fsr1h,f,c
  7933   003EA0  50DE               	movf	postinc2,w,c
  7934   003EA2  5CE6               	subwf	postinc1,w,c
  7935   003EA4  50E6               	movf	postinc1,w,c
  7936   003EA6  0A80               	xorlw	128
  7937   003EA8  6E09               	movwf	(??_fputc+4)^0,c
  7938   003EAA  50DE               	movf	postinc2,w,c
  7939   003EAC  0A80               	xorlw	128
  7940   003EAE  5809               	subwfb	(??_fputc+4)^0,w,c
  7941   003EB0  B0D8               	btfsc	status,0,c
  7942   003EB2  EF5D  F01F         	goto	u2691
  7943   003EB6  EF5F  F01F         	goto	u2690
  7944   003EBA                     u2691:
  7945   003EBA  EF82  F01F         	goto	l1453
  7946   003EBE                     u2690:
  7947   003EBE                     l3468:
  7948   003EBE  EE20 F003          	lfsr	2,3
  7949   003EC2  5003               	movf	fputc@fp^0,w,c
  7950   003EC4  26D9               	addwf	fsr2l,f,c
  7951   003EC6  5004               	movf	(fputc@fp+1)^0,w,c
  7952   003EC8  22DA               	addwfc	fsr2h,f,c
  7953   003ECA  CFDE F005          	movff	postinc2,??_fputc
  7954   003ECE  CFDD F006          	movff	postdec2,??_fputc+1
  7955   003ED2  C003  FFD9         	movff	fputc@fp,fsr2l
  7956   003ED6  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7957   003EDA  CFDE F007          	movff	postinc2,??_fputc+2
  7958   003EDE  CFDD F008          	movff	postdec2,??_fputc+3
  7959   003EE2  5005               	movf	??_fputc^0,w,c
  7960   003EE4  2407               	addwf	(??_fputc+2)^0,w,c
  7961   003EE6  6ED9               	movwf	fsr2l,c
  7962   003EE8  5006               	movf	(??_fputc+1)^0,w,c
  7963   003EEA  2008               	addwfc	(??_fputc+3)^0,w,c
  7964   003EEC  6EDA               	movwf	fsr2h,c
  7965   003EEE  C001  FFDF         	movff	fputc@c,indf2
  7966   003EF2  EE20 F003          	lfsr	2,3
  7967   003EF6  5003               	movf	fputc@fp^0,w,c
  7968   003EF8  26D9               	addwf	fsr2l,f,c
  7969   003EFA  5004               	movf	(fputc@fp+1)^0,w,c
  7970   003EFC  22DA               	addwfc	fsr2h,f,c
  7971   003EFE  2ADE               	incf	postinc2,f,c
  7972   003F00  0E00               	movlw	0
  7973   003F02  22DD               	addwfc	postdec2,f,c
  7974   003F04                     l1453:
  7975   003F04  0012               	return		;funcret
  7976   003F06                     __end_of_fputc:
  7977                           	callstack 0
  7978                           
  7979 ;; *************** function _putch *****************
  7980 ;; Defined at:
  7981 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;  c               1    wreg     unsigned char 
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;  c               1    0[COMRAM] unsigned char 
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      void 
  7988 ;; Registers used:
  7989 ;;		wreg
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7995 ;;      Params:         0       0       0       0       0       0       0       0       0
  7996 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7998 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7999 ;;Total ram usage:        0 bytes
  8000 ;; Hardware stack levels used: 1
  8001 ;; Hardware stack levels required when called: 1
  8002 ;; This function calls:
  8003 ;;		Nothing
  8004 ;; This function is called by:
  8005 ;;		_fputc
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           	psect	text21
  8010   00475A                     __ptext21:
  8011                           	callstack 0
  8012   00475A                     _putch:
  8013                           	callstack 21
  8014   00475A  0012               	return		;funcret
  8015   00475C                     __end_of_putch:
  8016                           	callstack 0
  8017                           
  8018 ;; *************** function _abs *****************
  8019 ;; Defined at:
  8020 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;  a               2   18[COMRAM] int 
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;		None
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  2   18[COMRAM] int 
  8027 ;; Registers used:
  8028 ;;		wreg, status,2, status,0
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8034 ;;      Params:         2       0       0       0       0       0       0       0       0
  8035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8036 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8037 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8038 ;;Total ram usage:        4 bytes
  8039 ;; Hardware stack levels used: 1
  8040 ;; Hardware stack levels required when called: 1
  8041 ;; This function calls:
  8042 ;;		Nothing
  8043 ;; This function is called by:
  8044 ;;		_dtoa
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048                           	psect	text22
  8049   0044E4                     __ptext22:
  8050                           	callstack 0
  8051   0044E4                     _abs:
  8052                           	callstack 24
  8053   0044E4  BE14               	btfsc	(abs@a+1)^0,7,c
  8054   0044E6  EF7F  F022         	goto	u2860
  8055   0044EA  5014               	movf	(abs@a+1)^0,w,c
  8056   0044EC  E106               	bnz	u2861
  8057   0044EE  0413               	decf	abs@a^0,w,c
  8058   0044F0  B0D8               	btfsc	status,0,c
  8059   0044F2  EF7D  F022         	goto	u2861
  8060   0044F6  EF7F  F022         	goto	u2860
  8061   0044FA                     u2861:
  8062   0044FA  EF8D  F022         	goto	l1438
  8063   0044FE                     u2860:
  8064   0044FE  C013  F015         	movff	abs@a,??_abs
  8065   004502  C014  F016         	movff	abs@a+1,??_abs+1
  8066   004506  1E15               	comf	??_abs^0,f,c
  8067   004508  1E16               	comf	(??_abs+1)^0,f,c
  8068   00450A  4A15               	infsnz	??_abs^0,f,c
  8069   00450C  2A16               	incf	(??_abs+1)^0,f,c
  8070   00450E  C015  F013         	movff	??_abs,?_abs
  8071   004512  C016  F014         	movff	??_abs+1,?_abs+1
  8072   004516  EF91  F022         	goto	l1441
  8073   00451A                     l1438:
  8074   00451A  C013  F013         	movff	abs@a,?_abs
  8075   00451E  C014  F014         	movff	abs@a+1,?_abs+1
  8076   004522                     l1441:
  8077   004522  0012               	return		;funcret
  8078   004524                     __end_of_abs:
  8079                           	callstack 0
  8080                           
  8081 ;; *************** function ___aomod *****************
  8082 ;; Defined at:
  8083 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;  dividend        8    0[COMRAM] long long 
  8086 ;;  divisor         8    8[COMRAM] long long 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;  sign            1   17[COMRAM] unsigned char 
  8089 ;;  counter         1   16[COMRAM] unsigned char 
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  8    0[COMRAM] long long 
  8092 ;; Registers used:
  8093 ;;		wreg, status,2, status,0
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/0
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8099 ;;      Params:        16       0       0       0       0       0       0       0       0
  8100 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8102 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8103 ;;Total ram usage:       18 bytes
  8104 ;; Hardware stack levels used: 1
  8105 ;; Hardware stack levels required when called: 1
  8106 ;; This function calls:
  8107 ;;		Nothing
  8108 ;; This function is called by:
  8109 ;;		_dtoa
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           
  8113                           	psect	text23
  8114   0034EE                     __ptext23:
  8115                           	callstack 0
  8116   0034EE                     ___aomod:
  8117                           	callstack 24
  8118   0034EE  0E00               	movlw	0
  8119   0034F0  6E12               	movwf	___aomod@sign^0,c
  8120   0034F2  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8121   0034F4  EF80  F01A         	goto	u2780
  8122   0034F8  EF7E  F01A         	goto	u2781
  8123   0034FC                     u2781:
  8124   0034FC  EF92  F01A         	goto	l3532
  8125   003500                     u2780:
  8126   003500  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8127   003502  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8128   003504  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8129   003506  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8130   003508  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8131   00350A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8132   00350C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8133   00350E  6C01               	negf	___aomod@dividend^0,c
  8134   003510  0E00               	movlw	0
  8135   003512  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8136   003514  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8137   003516  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8138   003518  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8139   00351A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8140   00351C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8141   00351E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8142   003520  0E01               	movlw	1
  8143   003522  6E12               	movwf	___aomod@sign^0,c
  8144   003524                     l3532:
  8145   003524  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8146   003526  EF99  F01A         	goto	u2790
  8147   00352A  EF97  F01A         	goto	u2791
  8148   00352E                     u2791:
  8149   00352E  EFA9  F01A         	goto	l3536
  8150   003532                     u2790:
  8151   003532  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8152   003534  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8153   003536  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8154   003538  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8155   00353A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8156   00353C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8157   00353E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8158   003540  6C09               	negf	___aomod@divisor^0,c
  8159   003542  0E00               	movlw	0
  8160   003544  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8161   003546  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8162   003548  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8163   00354A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8164   00354C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8165   00354E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8166   003550  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8167   003552                     l3536:
  8168   003552  5009               	movf	___aomod@divisor^0,w,c
  8169   003554  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8170   003556  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8171   003558  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8172   00355A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8173   00355C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8174   00355E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8175   003560  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8176   003562  B4D8               	btfsc	status,2,c
  8177   003564  EFB6  F01A         	goto	u2801
  8178   003568  EFB8  F01A         	goto	u2800
  8179   00356C                     u2801:
  8180   00356C  EF00  F01B         	goto	l3552
  8181   003570                     u2800:
  8182   003570  0E01               	movlw	1
  8183   003572  6E11               	movwf	___aomod@counter^0,c
  8184   003574  EFC6  F01A         	goto	l3542
  8185   003578                     l3540:
  8186   003578  90D8               	bcf	status,0,c
  8187   00357A  3609               	rlcf	___aomod@divisor^0,f,c
  8188   00357C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8189   00357E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8190   003580  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8191   003582  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8192   003584  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8193   003586  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8194   003588  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8195   00358A  2A11               	incf	___aomod@counter^0,f,c
  8196   00358C                     l3542:
  8197   00358C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8198   00358E  EFCB  F01A         	goto	u2811
  8199   003592  EFCD  F01A         	goto	u2810
  8200   003596                     u2811:
  8201   003596  EFBC  F01A         	goto	l3540
  8202   00359A                     u2810:
  8203   00359A                     l3544:
  8204   00359A  5009               	movf	___aomod@divisor^0,w,c
  8205   00359C  5C01               	subwf	___aomod@dividend^0,w,c
  8206   00359E  500A               	movf	(___aomod@divisor+1)^0,w,c
  8207   0035A0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8208   0035A2  500B               	movf	(___aomod@divisor+2)^0,w,c
  8209   0035A4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8210   0035A6  500C               	movf	(___aomod@divisor+3)^0,w,c
  8211   0035A8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8212   0035AA  500D               	movf	(___aomod@divisor+4)^0,w,c
  8213   0035AC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8214   0035AE  500E               	movf	(___aomod@divisor+5)^0,w,c
  8215   0035B0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8216   0035B2  500F               	movf	(___aomod@divisor+6)^0,w,c
  8217   0035B4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8218   0035B6  5010               	movf	(___aomod@divisor+7)^0,w,c
  8219   0035B8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8220   0035BA  A0D8               	btfss	status,0,c
  8221   0035BC  EFE2  F01A         	goto	u2821
  8222   0035C0  EFE4  F01A         	goto	u2820
  8223   0035C4                     u2821:
  8224   0035C4  EFF4  F01A         	goto	l3548
  8225   0035C8                     u2820:
  8226   0035C8  5009               	movf	___aomod@divisor^0,w,c
  8227   0035CA  5E01               	subwf	___aomod@dividend^0,f,c
  8228   0035CC  500A               	movf	(___aomod@divisor+1)^0,w,c
  8229   0035CE  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8230   0035D0  500B               	movf	(___aomod@divisor+2)^0,w,c
  8231   0035D2  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8232   0035D4  500C               	movf	(___aomod@divisor+3)^0,w,c
  8233   0035D6  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8234   0035D8  500D               	movf	(___aomod@divisor+4)^0,w,c
  8235   0035DA  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8236   0035DC  500E               	movf	(___aomod@divisor+5)^0,w,c
  8237   0035DE  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8238   0035E0  500F               	movf	(___aomod@divisor+6)^0,w,c
  8239   0035E2  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8240   0035E4  5010               	movf	(___aomod@divisor+7)^0,w,c
  8241   0035E6  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8242   0035E8                     l3548:
  8243   0035E8  90D8               	bcf	status,0,c
  8244   0035EA  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8245   0035EC  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8246   0035EE  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8247   0035F0  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8248   0035F2  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8249   0035F4  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8250   0035F6  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8251   0035F8  3209               	rrcf	___aomod@divisor^0,f,c
  8252   0035FA  2E11               	decfsz	___aomod@counter^0,f,c
  8253   0035FC  EFCD  F01A         	goto	l3544
  8254   003600                     l3552:
  8255   003600  5012               	movf	___aomod@sign^0,w,c
  8256   003602  B4D8               	btfsc	status,2,c
  8257   003604  EF06  F01B         	goto	u2831
  8258   003608  EF08  F01B         	goto	u2830
  8259   00360C                     u2831:
  8260   00360C  EF18  F01B         	goto	l3556
  8261   003610                     u2830:
  8262   003610  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8263   003612  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8264   003614  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8265   003616  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8266   003618  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8267   00361A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8268   00361C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8269   00361E  6C01               	negf	___aomod@dividend^0,c
  8270   003620  0E00               	movlw	0
  8271   003622  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8272   003624  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8273   003626  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8274   003628  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8275   00362A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8276   00362C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8277   00362E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8278   003630                     l3556:
  8279   003630  C001  F001         	movff	___aomod@dividend,?___aomod
  8280   003634  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8281   003638  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8282   00363C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8283   003640  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8284   003644  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8285   003648  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8286   00364C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8287   003650  0012               	return		;funcret
  8288   003652                     __end_of___aomod:
  8289                           	callstack 0
  8290                           
  8291 ;; *************** function ___aodiv *****************
  8292 ;; Defined at:
  8293 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  8294 ;; Parameters:    Size  Location     Type
  8295 ;;  dividend        8    0[COMRAM] long long 
  8296 ;;  divisor         8    8[COMRAM] long long 
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;  quotient        8   18[COMRAM] long long 
  8299 ;;  sign            1   17[COMRAM] unsigned char 
  8300 ;;  counter         1   16[COMRAM] unsigned char 
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  8    0[COMRAM] long long 
  8303 ;; Registers used:
  8304 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8310 ;;      Params:        16       0       0       0       0       0       0       0       0
  8311 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8313 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8314 ;;Total ram usage:       26 bytes
  8315 ;; Hardware stack levels used: 1
  8316 ;; Hardware stack levels required when called: 1
  8317 ;; This function calls:
  8318 ;;		Nothing
  8319 ;; This function is called by:
  8320 ;;		_dtoa
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           	psect	text24
  8325   003366                     __ptext24:
  8326                           	callstack 0
  8327   003366                     ___aodiv:
  8328                           	callstack 24
  8329   003366  0E00               	movlw	0
  8330   003368  6E12               	movwf	___aodiv@sign^0,c
  8331   00336A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8332   00336C  EFBC  F019         	goto	u2710
  8333   003370  EFBA  F019         	goto	u2711
  8334   003374                     u2711:
  8335   003374  EFCE  F019         	goto	l3488
  8336   003378                     u2710:
  8337   003378  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8338   00337A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8339   00337C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8340   00337E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8341   003380  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8342   003382  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8343   003384  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8344   003386  6C09               	negf	___aodiv@divisor^0,c
  8345   003388  0E00               	movlw	0
  8346   00338A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8347   00338C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8348   00338E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8349   003390  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8350   003392  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8351   003394  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8352   003396  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8353   003398  0E01               	movlw	1
  8354   00339A  6E12               	movwf	___aodiv@sign^0,c
  8355   00339C                     l3488:
  8356   00339C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8357   00339E  EFD5  F019         	goto	u2720
  8358   0033A2  EFD3  F019         	goto	u2721
  8359   0033A6                     u2721:
  8360   0033A6  EFE7  F019         	goto	l3494
  8361   0033AA                     u2720:
  8362   0033AA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8363   0033AC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8364   0033AE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8365   0033B0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8366   0033B2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8367   0033B4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8368   0033B6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8369   0033B8  6C01               	negf	___aodiv@dividend^0,c
  8370   0033BA  0E00               	movlw	0
  8371   0033BC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8372   0033BE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8373   0033C0  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8374   0033C2  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8375   0033C4  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8376   0033C6  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8377   0033C8  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8378   0033CA  0E01               	movlw	1
  8379   0033CC  1A12               	xorwf	___aodiv@sign^0,f,c
  8380   0033CE                     l3494:
  8381   0033CE  EE20  F013         	lfsr	2,___aodiv@quotient
  8382   0033D2  0E07               	movlw	7
  8383   0033D4                     u2731:
  8384   0033D4  6ADE               	clrf	postinc2,c
  8385   0033D6  06E8               	decf	wreg,f,c
  8386   0033D8  E2FD               	bc	u2731
  8387   0033DA  5009               	movf	___aodiv@divisor^0,w,c
  8388   0033DC  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8389   0033DE  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8390   0033E0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8391   0033E2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8392   0033E4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8393   0033E6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8394   0033E8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8395   0033EA  B4D8               	btfsc	status,2,c
  8396   0033EC  EFFA  F019         	goto	u2741
  8397   0033F0  EFFC  F019         	goto	u2740
  8398   0033F4                     u2741:
  8399   0033F4  EF4E  F01A         	goto	l3516
  8400   0033F8                     u2740:
  8401   0033F8  0E01               	movlw	1
  8402   0033FA  6E11               	movwf	___aodiv@counter^0,c
  8403   0033FC  EF0A  F01A         	goto	l3502
  8404   003400                     l3500:
  8405   003400  90D8               	bcf	status,0,c
  8406   003402  3609               	rlcf	___aodiv@divisor^0,f,c
  8407   003404  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8408   003406  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8409   003408  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8410   00340A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8411   00340C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8412   00340E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8413   003410  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8414   003412  2A11               	incf	___aodiv@counter^0,f,c
  8415   003414                     l3502:
  8416   003414  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8417   003416  EF0F  F01A         	goto	u2751
  8418   00341A  EF11  F01A         	goto	u2750
  8419   00341E                     u2751:
  8420   00341E  EF00  F01A         	goto	l3500
  8421   003422                     u2750:
  8422   003422                     l3504:
  8423   003422  90D8               	bcf	status,0,c
  8424   003424  3613               	rlcf	___aodiv@quotient^0,f,c
  8425   003426  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8426   003428  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8427   00342A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8428   00342C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8429   00342E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8430   003430  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8431   003432  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8432   003434  5009               	movf	___aodiv@divisor^0,w,c
  8433   003436  5C01               	subwf	___aodiv@dividend^0,w,c
  8434   003438  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8435   00343A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8436   00343C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8437   00343E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8438   003440  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8439   003442  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8440   003444  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8441   003446  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8442   003448  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8443   00344A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8444   00344C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8445   00344E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8446   003450  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8447   003452  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8448   003454  A0D8               	btfss	status,0,c
  8449   003456  EF2F  F01A         	goto	u2761
  8450   00345A  EF31  F01A         	goto	u2760
  8451   00345E                     u2761:
  8452   00345E  EF42  F01A         	goto	l3512
  8453   003462                     u2760:
  8454   003462  5009               	movf	___aodiv@divisor^0,w,c
  8455   003464  5E01               	subwf	___aodiv@dividend^0,f,c
  8456   003466  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8457   003468  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8458   00346A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8459   00346C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8460   00346E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8461   003470  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8462   003472  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8463   003474  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8464   003476  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8465   003478  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8466   00347A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8467   00347C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8468   00347E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8469   003480  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8470   003482  8013               	bsf	___aodiv@quotient^0,0,c
  8471   003484                     l3512:
  8472   003484  90D8               	bcf	status,0,c
  8473   003486  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8474   003488  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8475   00348A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8476   00348C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8477   00348E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8478   003490  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8479   003492  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8480   003494  3209               	rrcf	___aodiv@divisor^0,f,c
  8481   003496  2E11               	decfsz	___aodiv@counter^0,f,c
  8482   003498  EF11  F01A         	goto	l3504
  8483   00349C                     l3516:
  8484   00349C  5012               	movf	___aodiv@sign^0,w,c
  8485   00349E  B4D8               	btfsc	status,2,c
  8486   0034A0  EF54  F01A         	goto	u2771
  8487   0034A4  EF56  F01A         	goto	u2770
  8488   0034A8                     u2771:
  8489   0034A8  EF66  F01A         	goto	l3520
  8490   0034AC                     u2770:
  8491   0034AC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8492   0034AE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8493   0034B0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8494   0034B2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8495   0034B4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8496   0034B6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8497   0034B8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8498   0034BA  6C13               	negf	___aodiv@quotient^0,c
  8499   0034BC  0E00               	movlw	0
  8500   0034BE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8501   0034C0  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8502   0034C2  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8503   0034C4  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8504   0034C6  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8505   0034C8  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8506   0034CA  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8507   0034CC                     l3520:
  8508   0034CC  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8509   0034D0  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8510   0034D4  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8511   0034D8  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8512   0034DC  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8513   0034E0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8514   0034E4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8515   0034E8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8516   0034EC  0012               	return		;funcret
  8517   0034EE                     __end_of___aodiv:
  8518                           	callstack 0
  8519                           
  8520 ;; *************** function _RTC_Get_Time *****************
  8521 ;; Defined at:
  8522 ;;		line 36 in file "RTC_Driver.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;  RTC             2    3[COMRAM] PTR struct .
  8525 ;;		 -> rtc(7), 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  1    wreg      void 
  8530 ;; Registers used:
  8531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8537 ;;      Params:         2       0       0       0       0       0       0       0       0
  8538 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8540 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8541 ;;Total ram usage:        2 bytes
  8542 ;; Hardware stack levels used: 1
  8543 ;; Hardware stack levels required when called: 4
  8544 ;; This function calls:
  8545 ;;		_I2C_Read
  8546 ;;		_I2C_Repeated_Start
  8547 ;;		_I2C_Start
  8548 ;;		_I2C_Stop
  8549 ;;		_I2C_Write
  8550 ;; This function is called by:
  8551 ;;		_Screen_Date_Time
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           	psect	text25
  8556   004374                     __ptext25:
  8557                           	callstack 0
  8558   004374                     _RTC_Get_Time:
  8559                           	callstack 25
  8560   004374                     
  8561                           ;RTC_Driver.c: 36: void RTC_Get_Time(RTC_t *RTC);RTC_Driver.c: 37: {;RTC_Driver.c: 38:  
      +                             I2C_Start(0xD0);
  8562   004374  0ED0               	movlw	208
  8563   004376  ECFB  F022         	call	_I2C_Start
  8564   00437A                     
  8565                           ;RTC_Driver.c: 39:     I2C_Write(0);
  8566   00437A  0E00               	movlw	0
  8567   00437C  EC23  F023         	call	_I2C_Write
  8568   004380                     
  8569                           ;RTC_Driver.c: 40:     I2C_Repeated_Start(0xD1);
  8570   004380  0ED1               	movlw	209
  8571   004382  ECE4  F022         	call	_I2C_Repeated_Start
  8572   004386                     
  8573                           ;RTC_Driver.c: 41:     RTC->sec = I2C_Read(0);
  8574   004386  0E00               	movlw	0
  8575   004388  EC92  F022         	call	_I2C_Read
  8576   00438C  C004  FFD9         	movff	RTC_Get_Time@RTC,fsr2l
  8577   004390  C005  FFDA         	movff	RTC_Get_Time@RTC+1,fsr2h
  8578   004394  6EDF               	movwf	indf2,c
  8579   004396                     
  8580                           ;RTC_Driver.c: 42:     RTC->min = I2C_Read(0);
  8581   004396  EE20 F001          	lfsr	2,1
  8582   00439A  5004               	movf	RTC_Get_Time@RTC^0,w,c
  8583   00439C  26D9               	addwf	fsr2l,f,c
  8584   00439E  5005               	movf	(RTC_Get_Time@RTC+1)^0,w,c
  8585   0043A0  22DA               	addwfc	fsr2h,f,c
  8586   0043A2  0E00               	movlw	0
  8587   0043A4  EC92  F022         	call	_I2C_Read
  8588   0043A8  6EDF               	movwf	indf2,c
  8589   0043AA                     
  8590                           ;RTC_Driver.c: 43:     RTC->hour= I2C_Read(1);
  8591   0043AA  EE20 F002          	lfsr	2,2
  8592   0043AE  5004               	movf	RTC_Get_Time@RTC^0,w,c
  8593   0043B0  26D9               	addwf	fsr2l,f,c
  8594   0043B2  5005               	movf	(RTC_Get_Time@RTC+1)^0,w,c
  8595   0043B4  22DA               	addwfc	fsr2h,f,c
  8596   0043B6  0E01               	movlw	1
  8597   0043B8  EC92  F022         	call	_I2C_Read
  8598   0043BC  6EDF               	movwf	indf2,c
  8599   0043BE                     
  8600                           ;RTC_Driver.c: 44:     I2C_Stop();
  8601   0043BE  EC34  F023         	call	_I2C_Stop	;wreg free
  8602   0043C2  0012               	return		;funcret
  8603   0043C4                     __end_of_RTC_Get_Time:
  8604                           	callstack 0
  8605                           
  8606 ;; *************** function _RTC_Get_Date *****************
  8607 ;; Defined at:
  8608 ;;		line 48 in file "RTC_Driver.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;  RTC             2    3[COMRAM] PTR struct .
  8611 ;;		 -> rtc(7), 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;		None
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  1    wreg      void 
  8616 ;; Registers used:
  8617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/0
  8620 ;;		On exit  : 0/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8623 ;;      Params:         2       0       0       0       0       0       0       0       0
  8624 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8626 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8627 ;;Total ram usage:        2 bytes
  8628 ;; Hardware stack levels used: 1
  8629 ;; Hardware stack levels required when called: 4
  8630 ;; This function calls:
  8631 ;;		_I2C_Read
  8632 ;;		_I2C_Repeated_Start
  8633 ;;		_I2C_Start
  8634 ;;		_I2C_Stop
  8635 ;;		_I2C_Write
  8636 ;; This function is called by:
  8637 ;;		_Screen_Date_Time
  8638 ;; This function uses a non-reentrant model
  8639 ;;
  8640                           
  8641                           	psect	text26
  8642   004254                     __ptext26:
  8643                           	callstack 0
  8644   004254                     _RTC_Get_Date:
  8645                           	callstack 25
  8646   004254                     
  8647                           ;RTC_Driver.c: 48: void RTC_Get_Date(RTC_t *RTC);RTC_Driver.c: 49: {;RTC_Driver.c: 50:  
      +                             I2C_Start(0xD0);
  8648   004254  0ED0               	movlw	208
  8649   004256  ECFB  F022         	call	_I2C_Start
  8650   00425A                     
  8651                           ;RTC_Driver.c: 51:     I2C_Write(3);
  8652   00425A  0E03               	movlw	3
  8653   00425C  EC23  F023         	call	_I2C_Write
  8654   004260                     
  8655                           ;RTC_Driver.c: 52:     I2C_Repeated_Start(0xD1);
  8656   004260  0ED1               	movlw	209
  8657   004262  ECE4  F022         	call	_I2C_Repeated_Start
  8658   004266                     
  8659                           ;RTC_Driver.c: 53:     RTC->Day = I2C_Read(0);
  8660   004266  EE20 F003          	lfsr	2,3
  8661   00426A  5004               	movf	RTC_Get_Date@RTC^0,w,c
  8662   00426C  26D9               	addwf	fsr2l,f,c
  8663   00426E  5005               	movf	(RTC_Get_Date@RTC+1)^0,w,c
  8664   004270  22DA               	addwfc	fsr2h,f,c
  8665   004272  0E00               	movlw	0
  8666   004274  EC92  F022         	call	_I2C_Read
  8667   004278  6EDF               	movwf	indf2,c
  8668   00427A                     
  8669                           ;RTC_Driver.c: 54:     RTC->date = I2C_Read(0);
  8670   00427A  EE20 F004          	lfsr	2,4
  8671   00427E  5004               	movf	RTC_Get_Date@RTC^0,w,c
  8672   004280  26D9               	addwf	fsr2l,f,c
  8673   004282  5005               	movf	(RTC_Get_Date@RTC+1)^0,w,c
  8674   004284  22DA               	addwfc	fsr2h,f,c
  8675   004286  0E00               	movlw	0
  8676   004288  EC92  F022         	call	_I2C_Read
  8677   00428C  6EDF               	movwf	indf2,c
  8678   00428E                     
  8679                           ;RTC_Driver.c: 55:     RTC->month = I2C_Read(0);
  8680   00428E  EE20 F005          	lfsr	2,5
  8681   004292  5004               	movf	RTC_Get_Date@RTC^0,w,c
  8682   004294  26D9               	addwf	fsr2l,f,c
  8683   004296  5005               	movf	(RTC_Get_Date@RTC+1)^0,w,c
  8684   004298  22DA               	addwfc	fsr2h,f,c
  8685   00429A  0E00               	movlw	0
  8686   00429C  EC92  F022         	call	_I2C_Read
  8687   0042A0  6EDF               	movwf	indf2,c
  8688   0042A2                     
  8689                           ;RTC_Driver.c: 56:     RTC->year = I2C_Read(1);
  8690   0042A2  EE20 F006          	lfsr	2,6
  8691   0042A6  5004               	movf	RTC_Get_Date@RTC^0,w,c
  8692   0042A8  26D9               	addwf	fsr2l,f,c
  8693   0042AA  5005               	movf	(RTC_Get_Date@RTC+1)^0,w,c
  8694   0042AC  22DA               	addwfc	fsr2h,f,c
  8695   0042AE  0E01               	movlw	1
  8696   0042B0  EC92  F022         	call	_I2C_Read
  8697   0042B4  6EDF               	movwf	indf2,c
  8698   0042B6                     
  8699                           ;RTC_Driver.c: 57:     I2C_Stop();
  8700   0042B6  EC34  F023         	call	_I2C_Stop	;wreg free
  8701   0042BA  0012               	return		;funcret
  8702   0042BC                     __end_of_RTC_Get_Date:
  8703                           	callstack 0
  8704                           
  8705 ;; *************** function _I2C_Repeated_Start *****************
  8706 ;; Defined at:
  8707 ;;		line 74 in file "I2C_Driver.c"
  8708 ;; Parameters:    Size  Location     Type
  8709 ;;  slave_read_a    1    wreg     unsigned char 
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  8712 ;; Return value:  Size  Location     Type
  8713 ;;                  1    wreg      unsigned char 
  8714 ;; Registers used:
  8715 ;;		wreg, status,2, cstack
  8716 ;; Tracked objects:
  8717 ;;		On entry : 0/0
  8718 ;;		On exit  : 0/0
  8719 ;;		Unchanged: 0/0
  8720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8721 ;;      Params:         0       0       0       0       0       0       0       0       0
  8722 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8723 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8724 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8725 ;;Total ram usage:        1 bytes
  8726 ;; Hardware stack levels used: 1
  8727 ;; Hardware stack levels required when called: 3
  8728 ;; This function calls:
  8729 ;;		_I2C_Write
  8730 ;; This function is called by:
  8731 ;;		_RTC_Get_Time
  8732 ;;		_RTC_Get_Date
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           
  8736                           	psect	text27
  8737   0045C8                     __ptext27:
  8738                           	callstack 0
  8739   0045C8                     _I2C_Repeated_Start:
  8740                           	callstack 25
  8741                           
  8742                           ;incstack = 0
  8743                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  8744   0045C8  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  8745   0045CA                     
  8746                           ;I2C_Driver.c: 74: char I2C_Repeated_Start(char slave_read_address);I2C_Driver.c: 75: {;
      +                          I2C_Driver.c: 76:     RSEN = 1;
  8747   0045CA  82C5               	bsf	4037,1,c	;volatile
  8748   0045CC                     l280:
  8749   0045CC  B2C5               	btfsc	4037,1,c	;volatile
  8750   0045CE  EFEB  F022         	goto	u3231
  8751   0045D2  EFED  F022         	goto	u3230
  8752   0045D6                     u3231:
  8753   0045D6  EFE6  F022         	goto	l280
  8754   0045DA                     u3230:
  8755   0045DA                     
  8756                           ;I2C_Driver.c: 78:     SSPIF = 0;
  8757   0045DA  969E               	bcf	3998,3,c	;volatile
  8758                           
  8759                           ;I2C_Driver.c: 79:     if (!SSPSTATbits.S)
  8760   0045DC  B6C7               	btfsc	199,3,c	;volatile
  8761   0045DE  EFF3  F022         	goto	u3241
  8762   0045E2  EFF5  F022         	goto	u3240
  8763   0045E6                     u3241:
  8764   0045E6  EFF7  F022         	goto	l3834
  8765   0045EA                     u3240:
  8766   0045EA  EFFA  F022         	goto	l284
  8767   0045EE                     l3834:
  8768                           
  8769                           ;I2C_Driver.c: 81:     I2C_Write(slave_read_address);
  8770   0045EE  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  8771   0045F0  EC23  F023         	call	_I2C_Write
  8772   0045F4                     l284:
  8773   0045F4  0012               	return		;funcret
  8774   0045F6                     __end_of_I2C_Repeated_Start:
  8775                           	callstack 0
  8776                           
  8777 ;; *************** function _I2C_Read *****************
  8778 ;; Defined at:
  8779 ;;		line 10 in file "I2C_Driver.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;  flag            1    wreg     unsigned char 
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;  flag            1    0[COMRAM] unsigned char 
  8784 ;;  buffer          2    1[COMRAM] int 
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  1    wreg      unsigned char 
  8787 ;; Registers used:
  8788 ;;		wreg, status,2, cstack
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8794 ;;      Params:         0       0       0       0       0       0       0       0       0
  8795 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8797 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8798 ;;Total ram usage:        3 bytes
  8799 ;; Hardware stack levels used: 1
  8800 ;; Hardware stack levels required when called: 2
  8801 ;; This function calls:
  8802 ;;		_I2C_Ack
  8803 ;;		_I2C_Nack
  8804 ;;		_I2C_Ready
  8805 ;; This function is called by:
  8806 ;;		_RTC_Get_Time
  8807 ;;		_RTC_Get_Date
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           	psect	text28
  8812   004524                     __ptext28:
  8813                           	callstack 0
  8814   004524                     _I2C_Read:
  8815                           	callstack 26
  8816                           
  8817                           ;incstack = 0
  8818                           ;I2C_Read@flag stored from wreg
  8819   004524  6E01               	movwf	I2C_Read@flag^0,c
  8820   004526                     
  8821                           ;I2C_Driver.c: 13:     RCEN = 1;
  8822   004526  86C5               	bsf	4037,3,c	;volatile
  8823   004528                     l245:
  8824   004528  A0C7               	btfss	199,0,c	;volatile
  8825   00452A  EF99  F022         	goto	u3171
  8826   00452E  EF9B  F022         	goto	u3170
  8827   004532                     u3171:
  8828   004532  EF94  F022         	goto	l245
  8829   004536                     u3170:
  8830   004536                     
  8831                           ;I2C_Driver.c: 15:     buffer = SSPBUF;
  8832   004536  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  8833   00453A  6A03               	clrf	(I2C_Read@buffer+1)^0,c
  8834   00453C                     
  8835                           ;I2C_Driver.c: 17:     if (flag == 0)
  8836   00453C  5001               	movf	I2C_Read@flag^0,w,c
  8837   00453E  A4D8               	btfss	status,2,c
  8838   004540  EFA4  F022         	goto	u3181
  8839   004544  EFA6  F022         	goto	u3180
  8840   004548                     u3181:
  8841   004548  EFAA  F022         	goto	l3814
  8842   00454C                     u3180:
  8843   00454C                     
  8844                           ;I2C_Driver.c: 18:     {;I2C_Driver.c: 19:         I2C_Ack();
  8845   00454C  EC80  F023         	call	_I2C_Ack	;wreg free
  8846                           
  8847                           ;I2C_Driver.c: 20:     }
  8848   004550  EFAC  F022         	goto	l249
  8849   004554                     l3814:
  8850                           
  8851                           ;I2C_Driver.c: 22:     {;I2C_Driver.c: 23:         I2C_Nack();
  8852   004554  EC76  F023         	call	_I2C_Nack	;wreg free
  8853   004558                     l249:
  8854                           
  8855                           ;I2C_Driver.c: 25:     I2C_Ready();
  8856   004558  EC8A  F023         	call	_I2C_Ready	;wreg free
  8857   00455C                     
  8858                           ;I2C_Driver.c: 26:     return (char)buffer;
  8859   00455C  5002               	movf	I2C_Read@buffer^0,w,c
  8860   00455E  0012               	return		;funcret
  8861   004560                     __end_of_I2C_Read:
  8862                           	callstack 0
  8863                           
  8864 ;; *************** function _I2C_Nack *****************
  8865 ;; Defined at:
  8866 ;;		line 113 in file "I2C_Driver.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;		None
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;		None
  8871 ;; Return value:  Size  Location     Type
  8872 ;;                  1    wreg      void 
  8873 ;; Registers used:
  8874 ;;		None
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8880 ;;      Params:         0       0       0       0       0       0       0       0       0
  8881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8883 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8884 ;;Total ram usage:        0 bytes
  8885 ;; Hardware stack levels used: 1
  8886 ;; Hardware stack levels required when called: 1
  8887 ;; This function calls:
  8888 ;;		Nothing
  8889 ;; This function is called by:
  8890 ;;		_I2C_Read
  8891 ;; This function uses a non-reentrant model
  8892 ;;
  8893                           
  8894                           	psect	text29
  8895   0046EC                     __ptext29:
  8896                           	callstack 0
  8897   0046EC                     _I2C_Nack:
  8898                           	callstack 26
  8899   0046EC                     
  8900                           ;I2C_Driver.c: 115:     ACKDT = 1;
  8901   0046EC  8AC5               	bsf	4037,5,c	;volatile
  8902                           
  8903                           ;I2C_Driver.c: 116:     ACKEN = 1;
  8904   0046EE  88C5               	bsf	4037,4,c	;volatile
  8905   0046F0                     l309:
  8906   0046F0  B8C5               	btfsc	4037,4,c	;volatile
  8907   0046F2  EF7D  F023         	goto	u3051
  8908   0046F6  EF7F  F023         	goto	u3050
  8909   0046FA                     u3051:
  8910   0046FA  EF78  F023         	goto	l309
  8911   0046FE                     u3050:
  8912   0046FE  0012               	return		;funcret
  8913   004700                     __end_of_I2C_Nack:
  8914                           	callstack 0
  8915                           
  8916 ;; *************** function _I2C_Ack *****************
  8917 ;; Defined at:
  8918 ;;		line 106 in file "I2C_Driver.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;		None
  8921 ;; Auto vars:     Size  Location     Type
  8922 ;;		None
  8923 ;; Return value:  Size  Location     Type
  8924 ;;                  1    wreg      void 
  8925 ;; Registers used:
  8926 ;;		None
  8927 ;; Tracked objects:
  8928 ;;		On entry : 0/0
  8929 ;;		On exit  : 0/0
  8930 ;;		Unchanged: 0/0
  8931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8932 ;;      Params:         0       0       0       0       0       0       0       0       0
  8933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8935 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8936 ;;Total ram usage:        0 bytes
  8937 ;; Hardware stack levels used: 1
  8938 ;; Hardware stack levels required when called: 1
  8939 ;; This function calls:
  8940 ;;		Nothing
  8941 ;; This function is called by:
  8942 ;;		_I2C_Read
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946                           	psect	text30
  8947   004700                     __ptext30:
  8948                           	callstack 0
  8949   004700                     _I2C_Ack:
  8950                           	callstack 26
  8951   004700                     
  8952                           ;I2C_Driver.c: 108:     ACKDT = 0;
  8953   004700  9AC5               	bcf	4037,5,c	;volatile
  8954                           
  8955                           ;I2C_Driver.c: 109:     ACKEN = 1;
  8956   004702  88C5               	bsf	4037,4,c	;volatile
  8957   004704                     l303:
  8958   004704  B8C5               	btfsc	4037,4,c	;volatile
  8959   004706  EF87  F023         	goto	u3041
  8960   00470A  EF89  F023         	goto	u3040
  8961   00470E                     u3041:
  8962   00470E  EF82  F023         	goto	l303
  8963   004712                     u3040:
  8964   004712  0012               	return		;funcret
  8965   004714                     __end_of_I2C_Ack:
  8966                           	callstack 0
  8967                           
  8968 ;; *************** function _LCD_write_string *****************
  8969 ;; Defined at:
  8970 ;;		line 168 in file "LCD_Driver.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;  str             2    2[COMRAM] PTR const unsigned char 
  8973 ;;		 -> STR_15(9), STR_14(9), STR_13(9), STR_12(9), 
  8974 ;;		 -> year(10), month(10), date(10), hours(10), 
  8975 ;;		 -> mins(10), secs(10), 
  8976 ;; Auto vars:     Size  Location     Type
  8977 ;;  i               2    6[COMRAM] int 
  8978 ;; Return value:  Size  Location     Type
  8979 ;;                  1    wreg      void 
  8980 ;; Registers used:
  8981 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8987 ;;      Params:         2       0       0       0       0       0       0       0       0
  8988 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8989 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8990 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8991 ;;Total ram usage:        6 bytes
  8992 ;; Hardware stack levels used: 1
  8993 ;; Hardware stack levels required when called: 2
  8994 ;; This function calls:
  8995 ;;		_LCD_write
  8996 ;; This function is called by:
  8997 ;;		_Screen_Date_Time
  8998 ;;		_Screen_Device_1
  8999 ;;		_Screen_Device_2
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003                           	psect	text31
  9004   00407A                     __ptext31:
  9005                           	callstack 0
  9006   00407A                     _LCD_write_string:
  9007                           	callstack 27
  9008   00407A                     
  9009                           ;LCD_Driver.c: 169:     for (int i = 0; str[i] != '\0'; i++) {
  9010   00407A  0E00               	movlw	0
  9011   00407C  6E08               	movwf	(LCD_write_string@i+1)^0,c
  9012   00407E  0E00               	movlw	0
  9013   004080  6E07               	movwf	LCD_write_string@i^0,c
  9014   004082  EF5D  F020         	goto	l3876
  9015   004086                     l3872:
  9016                           
  9017                           ;LCD_Driver.c: 170:         LCD_write(str[i]);
  9018   004086  5007               	movf	LCD_write_string@i^0,w,c
  9019   004088  2403               	addwf	LCD_write_string@str^0,w,c
  9020   00408A  6E05               	movwf	??_LCD_write_string^0,c
  9021   00408C  5008               	movf	(LCD_write_string@i+1)^0,w,c
  9022   00408E  2004               	addwfc	(LCD_write_string@str+1)^0,w,c
  9023   004090  6E06               	movwf	(??_LCD_write_string+1)^0,c
  9024   004092  C005  FFF6         	movff	??_LCD_write_string,tblptrl
  9025   004096  C006  FFF7         	movff	??_LCD_write_string+1,tblptrh
  9026   00409A  6AF8               	clrf	tblptru,c
  9027   00409C  0E07               	movlw	(high __ramtop+-1)
  9028   00409E  64F7               	cpfsgt	tblptrh,c
  9029   0040A0  D003               	bra	u3267
  9030   0040A2  0008               	tblrd		*
  9031   0040A4  50F5               	movf	tablat,w,c
  9032   0040A6  D005               	bra	u3260
  9033   0040A8                     u3267:
  9034   0040A8  CFF6 FFE1          	movff	tblptrl,fsr1l
  9035   0040AC  CFF7 FFE2          	movff	tblptrh,fsr1h
  9036   0040B0  50E7               	movf	indf1,w,c
  9037   0040B2                     u3260:
  9038   0040B2  EC2D  F022         	call	_LCD_write
  9039   0040B6                     
  9040                           ;LCD_Driver.c: 171:     }
  9041   0040B6  4A07               	infsnz	LCD_write_string@i^0,f,c
  9042   0040B8  2A08               	incf	(LCD_write_string@i+1)^0,f,c
  9043   0040BA                     l3876:
  9044   0040BA  5007               	movf	LCD_write_string@i^0,w,c
  9045   0040BC  2403               	addwf	LCD_write_string@str^0,w,c
  9046   0040BE  6E05               	movwf	??_LCD_write_string^0,c
  9047   0040C0  5008               	movf	(LCD_write_string@i+1)^0,w,c
  9048   0040C2  2004               	addwfc	(LCD_write_string@str+1)^0,w,c
  9049   0040C4  6E06               	movwf	(??_LCD_write_string+1)^0,c
  9050   0040C6  C005  FFF6         	movff	??_LCD_write_string,tblptrl
  9051   0040CA  C006  FFF7         	movff	??_LCD_write_string+1,tblptrh
  9052   0040CE  6AF8               	clrf	tblptru,c
  9053   0040D0  0E07               	movlw	(high __ramtop+-1)
  9054   0040D2  64F7               	cpfsgt	tblptrh,c
  9055   0040D4  D003               	bra	u3277
  9056   0040D6  0008               	tblrd		*
  9057   0040D8  50F5               	movf	tablat,w,c
  9058   0040DA  D005               	bra	u3270
  9059   0040DC                     u3277:
  9060   0040DC  CFF6 FFE1          	movff	tblptrl,fsr1l
  9061   0040E0  CFF7 FFE2          	movff	tblptrh,fsr1h
  9062   0040E4  50E7               	movf	indf1,w,c
  9063   0040E6                     u3270:
  9064   0040E6  0900               	iorlw	0
  9065   0040E8  A4D8               	btfss	status,2,c
  9066   0040EA  EF79  F020         	goto	u3281
  9067   0040EE  EF7B  F020         	goto	u3280
  9068   0040F2                     u3281:
  9069   0040F2  EF43  F020         	goto	l3872
  9070   0040F6                     u3280:
  9071   0040F6  0012               	return		;funcret
  9072   0040F8                     __end_of_LCD_write_string:
  9073                           	callstack 0
  9074                           
  9075 ;; *************** function _LCD_write *****************
  9076 ;; Defined at:
  9077 ;;		line 148 in file "LCD_Driver.c"
  9078 ;; Parameters:    Size  Location     Type
  9079 ;;  data            1    wreg     unsigned char 
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;  data            1    1[COMRAM] unsigned char 
  9082 ;; Return value:  Size  Location     Type
  9083 ;;                  1    wreg      void 
  9084 ;; Registers used:
  9085 ;;		wreg, status,2, status,0
  9086 ;; Tracked objects:
  9087 ;;		On entry : 0/0
  9088 ;;		On exit  : 0/0
  9089 ;;		Unchanged: 0/0
  9090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9091 ;;      Params:         0       0       0       0       0       0       0       0       0
  9092 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9093 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9094 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9095 ;;Total ram usage:        2 bytes
  9096 ;; Hardware stack levels used: 1
  9097 ;; Hardware stack levels required when called: 1
  9098 ;; This function calls:
  9099 ;;		Nothing
  9100 ;; This function is called by:
  9101 ;;		_LCD_write_string
  9102 ;;		_Screen_Device_1
  9103 ;;		_Screen_Device_2
  9104 ;;		_Flash
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           	psect	text32
  9109   00445A                     __ptext32:
  9110                           	callstack 0
  9111   00445A                     _LCD_write:
  9112                           	callstack 27
  9113                           
  9114                           ;incstack = 0
  9115                           ;LCD_write@data stored from wreg
  9116   00445A  6E02               	movwf	LCD_write@data^0,c
  9117   00445C                     
  9118                           ;LCD_Driver.c: 149:     (PORTD |= (1<<0));
  9119   00445C  8083               	bsf	131,0,c	;volatile
  9120   00445E                     
  9121                           ;LCD_Driver.c: 152:     PORTD &= 0xC3;
  9122   00445E  0EC3               	movlw	195
  9123   004460  1683               	andwf	131,f,c	;volatile
  9124   004462                     
  9125                           ;LCD_Driver.c: 153:     PORTD |= (0x3C & (data >> 2));
  9126   004462  4002               	rrncf	LCD_write@data^0,w,c
  9127   004464  42E8               	rrncf	wreg,f,c
  9128   004466  0B3F               	andlw	63
  9129   004468  0B3C               	andlw	60
  9130   00446A  1283               	iorwf	131,f,c	;volatile
  9131                           
  9132                           ;LCD_Driver.c: 155:     (PORTD |= (1<<1));
  9133   00446C  8283               	bsf	131,1,c	;volatile
  9134   00446E                     
  9135                           ;LCD_Driver.c: 156:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  9136   00446E  0E03               	movlw	3
  9137   004470  6E01               	movwf	??_LCD_write^0,c
  9138   004472  0E98               	movlw	152
  9139   004474                     u5367:
  9140   004474  2EE8               	decfsz	wreg,f,c
  9141   004476  D7FE               	bra	u5367
  9142   004478  2E01               	decfsz	??_LCD_write^0,f,c
  9143   00447A  D7FC               	bra	u5367
  9144   00447C                     
  9145                           ;LCD_Driver.c: 157:     (PORTD &=~(1<<1));
  9146   00447C  9283               	bcf	131,1,c	;volatile
  9147   00447E                     
  9148                           ;LCD_Driver.c: 159:     PORTD &= 0xC3;
  9149   00447E  0EC3               	movlw	195
  9150   004480  1683               	andwf	131,f,c	;volatile
  9151   004482                     
  9152                           ;LCD_Driver.c: 160:     PORTD |= (0x3C & (data << 2));
  9153   004482  4402               	rlncf	LCD_write@data^0,w,c
  9154   004484  46E8               	rlncf	wreg,f,c
  9155   004486  0BFC               	andlw	252
  9156   004488  0B3C               	andlw	60
  9157   00448A  1283               	iorwf	131,f,c	;volatile
  9158   00448C                     
  9159                           ;LCD_Driver.c: 162:     (PORTD |= (1<<1));
  9160   00448C  8283               	bsf	131,1,c	;volatile
  9161   00448E                     
  9162                           ;LCD_Driver.c: 163:     _delay((unsigned long)((1)*(8000000UL/4000.0)));
  9163   00448E  0E03               	movlw	3
  9164   004490  6E01               	movwf	??_LCD_write^0,c
  9165   004492  0E98               	movlw	152
  9166   004494                     u5377:
  9167   004494  2EE8               	decfsz	wreg,f,c
  9168   004496  D7FE               	bra	u5377
  9169   004498  2E01               	decfsz	??_LCD_write^0,f,c
  9170   00449A  D7FC               	bra	u5377
  9171                           
  9172                           ;LCD_Driver.c: 164:     (PORTD &=~(1<<1));
  9173   00449C  9283               	bcf	131,1,c	;volatile
  9174   00449E  0012               	return		;funcret
  9175   0044A0                     __end_of_LCD_write:
  9176                           	callstack 0
  9177                           
  9178 ;; *************** function _LCD_goto_xy *****************
  9179 ;; Defined at:
  9180 ;;		line 186 in file "LCD_Driver.c"
  9181 ;; Parameters:    Size  Location     Type
  9182 ;;  x               2    1[COMRAM] int 
  9183 ;;  y               2    3[COMRAM] int 
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;  i               2    8[COMRAM] int 
  9186 ;;  i               2    6[COMRAM] int 
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1    wreg      void 
  9189 ;; Registers used:
  9190 ;;		wreg, status,2, status,0, cstack
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9196 ;;      Params:         4       0       0       0       0       0       0       0       0
  9197 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9198 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9199 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9200 ;;Total ram usage:        9 bytes
  9201 ;; Hardware stack levels used: 1
  9202 ;; Hardware stack levels required when called: 2
  9203 ;; This function calls:
  9204 ;;		_LCD_cmd
  9205 ;; This function is called by:
  9206 ;;		_Screen_Date_Time
  9207 ;;		_Screen_Device_1
  9208 ;;		_Screen_Device_2
  9209 ;;		_Flash
  9210 ;; This function uses a non-reentrant model
  9211 ;;
  9212                           
  9213                           	psect	text33
  9214   003D66                     __ptext33:
  9215                           	callstack 0
  9216   003D66                     _LCD_goto_xy:
  9217                           	callstack 27
  9218   003D66                     
  9219                           ;LCD_Driver.c: 187:     if ((x == 0) && (y < 16)) {
  9220   003D66  5002               	movf	LCD_goto_xy@x^0,w,c
  9221   003D68  1003               	iorwf	(LCD_goto_xy@x+1)^0,w,c
  9222   003D6A  A4D8               	btfss	status,2,c
  9223   003D6C  EFBA  F01E         	goto	u3111
  9224   003D70  EFBC  F01E         	goto	u3110
  9225   003D74                     u3111:
  9226   003D74  EFE9  F01E         	goto	l3792
  9227   003D78                     u3110:
  9228   003D78  BE05               	btfsc	(LCD_goto_xy@y+1)^0,7,c
  9229   003D7A  EFCA  F01E         	goto	u3120
  9230   003D7E  5005               	movf	(LCD_goto_xy@y+1)^0,w,c
  9231   003D80  E107               	bnz	u3121
  9232   003D82  0E10               	movlw	16
  9233   003D84  5C04               	subwf	LCD_goto_xy@y^0,w,c
  9234   003D86  B0D8               	btfsc	status,0,c
  9235   003D88  EFC8  F01E         	goto	u3121
  9236   003D8C  EFCA  F01E         	goto	u3120
  9237   003D90                     u3121:
  9238   003D90  EFE9  F01E         	goto	l3792
  9239   003D94                     u3120:
  9240   003D94                     
  9241                           ;LCD_Driver.c: 188:         LCD_cmd(0x80);
  9242   003D94  0E80               	movlw	128
  9243   003D96  ECB0  F022         	call	_LCD_cmd
  9244   003D9A                     
  9245                           ;LCD_Driver.c: 189:         for (int i = 0; i < y; i++) {
  9246   003D9A  0E00               	movlw	0
  9247   003D9C  6E08               	movwf	(LCD_goto_xy@i+1)^0,c
  9248   003D9E  0E00               	movlw	0
  9249   003DA0  6E07               	movwf	LCD_goto_xy@i^0,c
  9250   003DA2  EFD8  F01E         	goto	l3790
  9251   003DA6                     l3786:
  9252                           
  9253                           ;LCD_Driver.c: 190:             LCD_cmd(0x14);
  9254   003DA6  0E14               	movlw	20
  9255   003DA8  ECB0  F022         	call	_LCD_cmd
  9256   003DAC                     
  9257                           ;LCD_Driver.c: 192:         }
  9258   003DAC  4A07               	infsnz	LCD_goto_xy@i^0,f,c
  9259   003DAE  2A08               	incf	(LCD_goto_xy@i+1)^0,f,c
  9260   003DB0                     l3790:
  9261   003DB0  5004               	movf	LCD_goto_xy@y^0,w,c
  9262   003DB2  5C07               	subwf	LCD_goto_xy@i^0,w,c
  9263   003DB4  5008               	movf	(LCD_goto_xy@i+1)^0,w,c
  9264   003DB6  0A80               	xorlw	128
  9265   003DB8  6E06               	movwf	??_LCD_goto_xy^0,c
  9266   003DBA  5005               	movf	(LCD_goto_xy@y+1)^0,w,c
  9267   003DBC  0A80               	xorlw	128
  9268   003DBE  5806               	subwfb	??_LCD_goto_xy^0,w,c
  9269   003DC0  A0D8               	btfss	status,0,c
  9270   003DC2  EFE5  F01E         	goto	u3131
  9271   003DC6  EFE7  F01E         	goto	u3130
  9272   003DCA                     u3131:
  9273   003DCA  EFD3  F01E         	goto	l3786
  9274   003DCE                     u3130:
  9275   003DCE  EF1D  F01F         	goto	l42
  9276   003DD2                     l3792:
  9277   003DD2  0402               	decf	LCD_goto_xy@x^0,w,c
  9278   003DD4  1003               	iorwf	(LCD_goto_xy@x+1)^0,w,c
  9279   003DD6  A4D8               	btfss	status,2,c
  9280   003DD8  EFF0  F01E         	goto	u3141
  9281   003DDC  EFF2  F01E         	goto	u3140
  9282   003DE0                     u3141:
  9283   003DE0  EF1D  F01F         	goto	l42
  9284   003DE4                     u3140:
  9285   003DE4  BE05               	btfsc	(LCD_goto_xy@y+1)^0,7,c
  9286   003DE6  EF00  F01F         	goto	u3150
  9287   003DEA  5005               	movf	(LCD_goto_xy@y+1)^0,w,c
  9288   003DEC  E107               	bnz	u3151
  9289   003DEE  0E10               	movlw	16
  9290   003DF0  5C04               	subwf	LCD_goto_xy@y^0,w,c
  9291   003DF2  B0D8               	btfsc	status,0,c
  9292   003DF4  EFFE  F01E         	goto	u3151
  9293   003DF8  EF00  F01F         	goto	u3150
  9294   003DFC                     u3151:
  9295   003DFC  EF1D  F01F         	goto	l42
  9296   003E00                     u3150:
  9297   003E00                     
  9298                           ;LCD_Driver.c: 194:         LCD_cmd(0XC0);
  9299   003E00  0EC0               	movlw	192
  9300   003E02  ECB0  F022         	call	_LCD_cmd
  9301   003E06                     
  9302                           ;LCD_Driver.c: 195:         for (int i = 0; i < y; i++) {
  9303   003E06  0E00               	movlw	0
  9304   003E08  6E0A               	movwf	(LCD_goto_xy@i_52+1)^0,c
  9305   003E0A  0E00               	movlw	0
  9306   003E0C  6E09               	movwf	LCD_goto_xy@i_52^0,c
  9307   003E0E  EF0E  F01F         	goto	l3804
  9308   003E12                     l3800:
  9309                           
  9310                           ;LCD_Driver.c: 196:             LCD_cmd(0x14);
  9311   003E12  0E14               	movlw	20
  9312   003E14  ECB0  F022         	call	_LCD_cmd
  9313   003E18                     
  9314                           ;LCD_Driver.c: 197:         }
  9315   003E18  4A09               	infsnz	LCD_goto_xy@i_52^0,f,c
  9316   003E1A  2A0A               	incf	(LCD_goto_xy@i_52+1)^0,f,c
  9317   003E1C                     l3804:
  9318   003E1C  5004               	movf	LCD_goto_xy@y^0,w,c
  9319   003E1E  5C09               	subwf	LCD_goto_xy@i_52^0,w,c
  9320   003E20  500A               	movf	(LCD_goto_xy@i_52+1)^0,w,c
  9321   003E22  0A80               	xorlw	128
  9322   003E24  6E06               	movwf	??_LCD_goto_xy^0,c
  9323   003E26  5005               	movf	(LCD_goto_xy@y+1)^0,w,c
  9324   003E28  0A80               	xorlw	128
  9325   003E2A  5806               	subwfb	??_LCD_goto_xy^0,w,c
  9326   003E2C  A0D8               	btfss	status,0,c
  9327   003E2E  EF1B  F01F         	goto	u3161
  9328   003E32  EF1D  F01F         	goto	u3160
  9329   003E36                     u3161:
  9330   003E36  EF09  F01F         	goto	l3800
  9331   003E3A                     u3160:
  9332   003E3A                     l42:
  9333   003E3A  0012               	return		;funcret
  9334   003E3C                     __end_of_LCD_goto_xy:
  9335                           	callstack 0
  9336                           
  9337 ;; *************** function _RTC_Set_Time *****************
  9338 ;; Defined at:
  9339 ;;		line 10 in file "RTC_Driver.c"
  9340 ;; Parameters:    Size  Location     Type
  9341 ;;  sec             1    wreg     unsigned char 
  9342 ;;  min             1    8[COMRAM] unsigned char 
  9343 ;;  hour            1    9[COMRAM] unsigned char 
  9344 ;; Auto vars:     Size  Location     Type
  9345 ;;  sec             1   12[COMRAM] unsigned char 
  9346 ;; Return value:  Size  Location     Type
  9347 ;;                  1    wreg      void 
  9348 ;; Registers used:
  9349 ;;		wreg, status,2, status,0, cstack
  9350 ;; Tracked objects:
  9351 ;;		On entry : 0/0
  9352 ;;		On exit  : 0/0
  9353 ;;		Unchanged: 0/0
  9354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9355 ;;      Params:         2       0       0       0       0       0       0       0       0
  9356 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9357 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9358 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9359 ;;Total ram usage:        5 bytes
  9360 ;; Hardware stack levels used: 1
  9361 ;; Hardware stack levels required when called: 4
  9362 ;; This function calls:
  9363 ;;		_I2C_Init
  9364 ;;		_I2C_Start
  9365 ;;		_I2C_Stop
  9366 ;;		_I2C_Write
  9367 ;;		___awdiv
  9368 ;;		___awmod
  9369 ;; This function is called by:
  9370 ;;		_main
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text34
  9375   003C8E                     __ptext34:
  9376                           	callstack 0
  9377   003C8E                     _RTC_Set_Time:
  9378                           	callstack 26
  9379                           
  9380                           ;incstack = 0
  9381                           ;RTC_Set_Time@sec stored from wreg
  9382   003C8E  6E0D               	movwf	RTC_Set_Time@sec^0,c
  9383   003C90                     
  9384                           ;RTC_Driver.c: 10: void RTC_Set_Time(char sec, char min, char hour);RTC_Driver.c: 11: {;
      +                          RTC_Driver.c: 12:     I2C_Init();
  9385   003C90  EC6B  F023         	call	_I2C_Init	;wreg free
  9386                           
  9387                           ;RTC_Driver.c: 14:  I2C_Start(0xD0);
  9388   003C94  0ED0               	movlw	208
  9389   003C96  ECFB  F022         	call	_I2C_Start
  9390   003C9A                     
  9391                           ;RTC_Driver.c: 15:  I2C_Write(0);
  9392   003C9A  0E00               	movlw	0
  9393   003C9C  EC23  F023         	call	_I2C_Write
  9394   003CA0                     
  9395                           ;RTC_Driver.c: 16:  I2C_Write((((sec % 10) & (0x0F)) + (((sec /10) << 4 ) & (0xF0))));
  9396   003CA0  C00D  F001         	movff	RTC_Set_Time@sec,___awdiv@dividend
  9397   003CA4  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9398   003CA6  0E00               	movlw	0
  9399   003CA8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9400   003CAA  0E0A               	movlw	10
  9401   003CAC  6E03               	movwf	___awdiv@divisor^0,c
  9402   003CAE  EC83  F01F         	call	___awdiv	;wreg free
  9403   003CB2  C001  F00B         	movff	?___awdiv,??_RTC_Set_Time
  9404   003CB6  C002  F00C         	movff	?___awdiv+1,??_RTC_Set_Time+1
  9405   003CBA  3A0B               	swapf	??_RTC_Set_Time^0,f,c
  9406   003CBC  0EF0               	movlw	240
  9407   003CBE  160B               	andwf	??_RTC_Set_Time^0,f,c
  9408   003CC0  0EF0               	movlw	240
  9409   003CC2  160B               	andwf	??_RTC_Set_Time^0,f,c
  9410   003CC4  C00D  F001         	movff	RTC_Set_Time@sec,___awmod@dividend
  9411   003CC8  6A02               	clrf	(___awmod@dividend+1)^0,c
  9412   003CCA  0E00               	movlw	0
  9413   003CCC  6E04               	movwf	(___awmod@divisor+1)^0,c
  9414   003CCE  0E0A               	movlw	10
  9415   003CD0  6E03               	movwf	___awmod@divisor^0,c
  9416   003CD2  ECE5  F01F         	call	___awmod	;wreg free
  9417   003CD6  5001               	movf	?___awmod^0,w,c
  9418   003CD8  0B0F               	andlw	15
  9419   003CDA  240B               	addwf	??_RTC_Set_Time^0,w,c
  9420   003CDC  EC23  F023         	call	_I2C_Write
  9421   003CE0                     
  9422                           ;RTC_Driver.c: 17:  I2C_Write((((min % 10) & (0x0F)) + (((min /10) << 4 ) & (0xF0))));
  9423   003CE0  C009  F001         	movff	RTC_Set_Time@min,___awdiv@dividend
  9424   003CE4  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9425   003CE6  0E00               	movlw	0
  9426   003CE8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9427   003CEA  0E0A               	movlw	10
  9428   003CEC  6E03               	movwf	___awdiv@divisor^0,c
  9429   003CEE  EC83  F01F         	call	___awdiv	;wreg free
  9430   003CF2  C001  F00B         	movff	?___awdiv,??_RTC_Set_Time
  9431   003CF6  C002  F00C         	movff	?___awdiv+1,??_RTC_Set_Time+1
  9432   003CFA  3A0B               	swapf	??_RTC_Set_Time^0,f,c
  9433   003CFC  0EF0               	movlw	240
  9434   003CFE  160B               	andwf	??_RTC_Set_Time^0,f,c
  9435   003D00  0EF0               	movlw	240
  9436   003D02  160B               	andwf	??_RTC_Set_Time^0,f,c
  9437   003D04  C009  F001         	movff	RTC_Set_Time@min,___awmod@dividend
  9438   003D08  6A02               	clrf	(___awmod@dividend+1)^0,c
  9439   003D0A  0E00               	movlw	0
  9440   003D0C  6E04               	movwf	(___awmod@divisor+1)^0,c
  9441   003D0E  0E0A               	movlw	10
  9442   003D10  6E03               	movwf	___awmod@divisor^0,c
  9443   003D12  ECE5  F01F         	call	___awmod	;wreg free
  9444   003D16  5001               	movf	?___awmod^0,w,c
  9445   003D18  0B0F               	andlw	15
  9446   003D1A  240B               	addwf	??_RTC_Set_Time^0,w,c
  9447   003D1C  EC23  F023         	call	_I2C_Write
  9448   003D20                     
  9449                           ;RTC_Driver.c: 18:  I2C_Write((((hour % 10) & (0x0F)) + (((hour /10) << 4 ) & (0xF0))));
  9450   003D20  C00A  F001         	movff	RTC_Set_Time@hour,___awdiv@dividend
  9451   003D24  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9452   003D26  0E00               	movlw	0
  9453   003D28  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9454   003D2A  0E0A               	movlw	10
  9455   003D2C  6E03               	movwf	___awdiv@divisor^0,c
  9456   003D2E  EC83  F01F         	call	___awdiv	;wreg free
  9457   003D32  C001  F00B         	movff	?___awdiv,??_RTC_Set_Time
  9458   003D36  C002  F00C         	movff	?___awdiv+1,??_RTC_Set_Time+1
  9459   003D3A  3A0B               	swapf	??_RTC_Set_Time^0,f,c
  9460   003D3C  0EF0               	movlw	240
  9461   003D3E  160B               	andwf	??_RTC_Set_Time^0,f,c
  9462   003D40  0EF0               	movlw	240
  9463   003D42  160B               	andwf	??_RTC_Set_Time^0,f,c
  9464   003D44  C00A  F001         	movff	RTC_Set_Time@hour,___awmod@dividend
  9465   003D48  6A02               	clrf	(___awmod@dividend+1)^0,c
  9466   003D4A  0E00               	movlw	0
  9467   003D4C  6E04               	movwf	(___awmod@divisor+1)^0,c
  9468   003D4E  0E0A               	movlw	10
  9469   003D50  6E03               	movwf	___awmod@divisor^0,c
  9470   003D52  ECE5  F01F         	call	___awmod	;wreg free
  9471   003D56  5001               	movf	?___awmod^0,w,c
  9472   003D58  0B0F               	andlw	15
  9473   003D5A  240B               	addwf	??_RTC_Set_Time^0,w,c
  9474   003D5C  EC23  F023         	call	_I2C_Write
  9475   003D60                     
  9476                           ;RTC_Driver.c: 19:  I2C_Stop();
  9477   003D60  EC34  F023         	call	_I2C_Stop	;wreg free
  9478   003D64  0012               	return		;funcret
  9479   003D66                     __end_of_RTC_Set_Time:
  9480                           	callstack 0
  9481                           
  9482 ;; *************** function _I2C_Init *****************
  9483 ;; Defined at:
  9484 ;;		line 29 in file "I2C_Driver.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;		None
  9487 ;; Auto vars:     Size  Location     Type
  9488 ;;		None
  9489 ;; Return value:  Size  Location     Type
  9490 ;;                  1    wreg      void 
  9491 ;; Registers used:
  9492 ;;		wreg, status,2
  9493 ;; Tracked objects:
  9494 ;;		On entry : 0/0
  9495 ;;		On exit  : 0/0
  9496 ;;		Unchanged: 0/0
  9497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9498 ;;      Params:         0       0       0       0       0       0       0       0       0
  9499 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9501 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9502 ;;Total ram usage:        0 bytes
  9503 ;; Hardware stack levels used: 1
  9504 ;; Hardware stack levels required when called: 1
  9505 ;; This function calls:
  9506 ;;		Nothing
  9507 ;; This function is called by:
  9508 ;;		_RTC_Set_Time
  9509 ;;		_main
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513                           	psect	text35
  9514   0046D6                     __ptext35:
  9515                           	callstack 0
  9516   0046D6                     _I2C_Init:
  9517                           	callstack 28
  9518   0046D6                     
  9519                           ;I2C_Driver.c: 31:     TRISB0 = 1;
  9520   0046D6  8093               	bsf	3987,0,c	;volatile
  9521                           
  9522                           ;I2C_Driver.c: 32:     TRISB1 = 1;
  9523   0046D8  8293               	bsf	3987,1,c	;volatile
  9524   0046DA                     
  9525                           ;I2C_Driver.c: 33:     SSPSTAT = 80;
  9526   0046DA  0E50               	movlw	80
  9527   0046DC  6EC7               	movwf	199,c	;volatile
  9528                           
  9529                           ;I2C_Driver.c: 34:     SSPCON1 = 0x28;
  9530   0046DE  0E28               	movlw	40
  9531   0046E0  6EC6               	movwf	198,c	;volatile
  9532                           
  9533                           ;I2C_Driver.c: 35:     SSPCON2 = 0;
  9534   0046E2  0E00               	movlw	0
  9535   0046E4  6EC5               	movwf	197,c	;volatile
  9536                           
  9537                           ;I2C_Driver.c: 36:     SSPADD = ((8000000UL/(4*100000))-1);
  9538   0046E6  0E13               	movlw	19
  9539   0046E8  6EC8               	movwf	200,c	;volatile
  9540   0046EA  0012               	return		;funcret
  9541   0046EC                     __end_of_I2C_Init:
  9542                           	callstack 0
  9543                           
  9544 ;; *************** function _RTC_Set_Date *****************
  9545 ;; Defined at:
  9546 ;;		line 24 in file "RTC_Driver.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;  day             1    wreg     unsigned char 
  9549 ;;  date            1    8[COMRAM] unsigned char 
  9550 ;;  month           1    9[COMRAM] unsigned char 
  9551 ;;  year            1   10[COMRAM] unsigned char 
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;  day             1   13[COMRAM] unsigned char 
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      void 
  9556 ;; Registers used:
  9557 ;;		wreg, status,2, status,0, cstack
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9563 ;;      Params:         3       0       0       0       0       0       0       0       0
  9564 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9565 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9566 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9567 ;;Total ram usage:        6 bytes
  9568 ;; Hardware stack levels used: 1
  9569 ;; Hardware stack levels required when called: 4
  9570 ;; This function calls:
  9571 ;;		_I2C_Start
  9572 ;;		_I2C_Stop
  9573 ;;		_I2C_Write
  9574 ;;		___awdiv
  9575 ;;		___awmod
  9576 ;; This function is called by:
  9577 ;;		_main
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           	psect	text36
  9582   00378C                     __ptext36:
  9583                           	callstack 0
  9584   00378C                     _RTC_Set_Date:
  9585                           	callstack 26
  9586                           
  9587                           ;incstack = 0
  9588                           ;RTC_Set_Date@day stored from wreg
  9589   00378C  6E0E               	movwf	RTC_Set_Date@day^0,c
  9590   00378E                     
  9591                           ;RTC_Driver.c: 24: void RTC_Set_Date(char day, char date, char month, char year);RTC_Dri
      +                          ver.c: 25: {;RTC_Driver.c: 26:  I2C_Start(0xD0);
  9592   00378E  0ED0               	movlw	208
  9593   003790  ECFB  F022         	call	_I2C_Start
  9594   003794                     
  9595                           ;RTC_Driver.c: 27:  I2C_Write(3);
  9596   003794  0E03               	movlw	3
  9597   003796  EC23  F023         	call	_I2C_Write
  9598   00379A                     
  9599                           ;RTC_Driver.c: 28:  I2C_Write((((day % 10) & (0x0F)) + (((day /10) << 4 ) & (0xF0))));
  9600   00379A  C00E  F001         	movff	RTC_Set_Date@day,___awdiv@dividend
  9601   00379E  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9602   0037A0  0E00               	movlw	0
  9603   0037A2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9604   0037A4  0E0A               	movlw	10
  9605   0037A6  6E03               	movwf	___awdiv@divisor^0,c
  9606   0037A8  EC83  F01F         	call	___awdiv	;wreg free
  9607   0037AC  C001  F00C         	movff	?___awdiv,??_RTC_Set_Date
  9608   0037B0  C002  F00D         	movff	?___awdiv+1,??_RTC_Set_Date+1
  9609   0037B4  3A0C               	swapf	??_RTC_Set_Date^0,f,c
  9610   0037B6  0EF0               	movlw	240
  9611   0037B8  160C               	andwf	??_RTC_Set_Date^0,f,c
  9612   0037BA  0EF0               	movlw	240
  9613   0037BC  160C               	andwf	??_RTC_Set_Date^0,f,c
  9614   0037BE  C00E  F001         	movff	RTC_Set_Date@day,___awmod@dividend
  9615   0037C2  6A02               	clrf	(___awmod@dividend+1)^0,c
  9616   0037C4  0E00               	movlw	0
  9617   0037C6  6E04               	movwf	(___awmod@divisor+1)^0,c
  9618   0037C8  0E0A               	movlw	10
  9619   0037CA  6E03               	movwf	___awmod@divisor^0,c
  9620   0037CC  ECE5  F01F         	call	___awmod	;wreg free
  9621   0037D0  5001               	movf	?___awmod^0,w,c
  9622   0037D2  0B0F               	andlw	15
  9623   0037D4  240C               	addwf	??_RTC_Set_Date^0,w,c
  9624   0037D6  EC23  F023         	call	_I2C_Write
  9625   0037DA                     
  9626                           ;RTC_Driver.c: 29:  I2C_Write((((date % 10) & (0x0F)) + (((date /10) << 4 ) & (0xF0))));
  9627   0037DA  C009  F001         	movff	RTC_Set_Date@date,___awdiv@dividend
  9628   0037DE  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9629   0037E0  0E00               	movlw	0
  9630   0037E2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9631   0037E4  0E0A               	movlw	10
  9632   0037E6  6E03               	movwf	___awdiv@divisor^0,c
  9633   0037E8  EC83  F01F         	call	___awdiv	;wreg free
  9634   0037EC  C001  F00C         	movff	?___awdiv,??_RTC_Set_Date
  9635   0037F0  C002  F00D         	movff	?___awdiv+1,??_RTC_Set_Date+1
  9636   0037F4  3A0C               	swapf	??_RTC_Set_Date^0,f,c
  9637   0037F6  0EF0               	movlw	240
  9638   0037F8  160C               	andwf	??_RTC_Set_Date^0,f,c
  9639   0037FA  0EF0               	movlw	240
  9640   0037FC  160C               	andwf	??_RTC_Set_Date^0,f,c
  9641   0037FE  C009  F001         	movff	RTC_Set_Date@date,___awmod@dividend
  9642   003802  6A02               	clrf	(___awmod@dividend+1)^0,c
  9643   003804  0E00               	movlw	0
  9644   003806  6E04               	movwf	(___awmod@divisor+1)^0,c
  9645   003808  0E0A               	movlw	10
  9646   00380A  6E03               	movwf	___awmod@divisor^0,c
  9647   00380C  ECE5  F01F         	call	___awmod	;wreg free
  9648   003810  5001               	movf	?___awmod^0,w,c
  9649   003812  0B0F               	andlw	15
  9650   003814  240C               	addwf	??_RTC_Set_Date^0,w,c
  9651   003816  EC23  F023         	call	_I2C_Write
  9652   00381A                     
  9653                           ;RTC_Driver.c: 30:  I2C_Write((((month % 10) & (0x0F)) + (((month /10) << 4 ) & (0xF0)))
      +                          );
  9654   00381A  C00A  F001         	movff	RTC_Set_Date@month,___awdiv@dividend
  9655   00381E  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9656   003820  0E00               	movlw	0
  9657   003822  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9658   003824  0E0A               	movlw	10
  9659   003826  6E03               	movwf	___awdiv@divisor^0,c
  9660   003828  EC83  F01F         	call	___awdiv	;wreg free
  9661   00382C  C001  F00C         	movff	?___awdiv,??_RTC_Set_Date
  9662   003830  C002  F00D         	movff	?___awdiv+1,??_RTC_Set_Date+1
  9663   003834  3A0C               	swapf	??_RTC_Set_Date^0,f,c
  9664   003836  0EF0               	movlw	240
  9665   003838  160C               	andwf	??_RTC_Set_Date^0,f,c
  9666   00383A  0EF0               	movlw	240
  9667   00383C  160C               	andwf	??_RTC_Set_Date^0,f,c
  9668   00383E  C00A  F001         	movff	RTC_Set_Date@month,___awmod@dividend
  9669   003842  6A02               	clrf	(___awmod@dividend+1)^0,c
  9670   003844  0E00               	movlw	0
  9671   003846  6E04               	movwf	(___awmod@divisor+1)^0,c
  9672   003848  0E0A               	movlw	10
  9673   00384A  6E03               	movwf	___awmod@divisor^0,c
  9674   00384C  ECE5  F01F         	call	___awmod	;wreg free
  9675   003850  5001               	movf	?___awmod^0,w,c
  9676   003852  0B0F               	andlw	15
  9677   003854  240C               	addwf	??_RTC_Set_Date^0,w,c
  9678   003856  EC23  F023         	call	_I2C_Write
  9679   00385A                     
  9680                           ;RTC_Driver.c: 31:  I2C_Write((((year % 10) & (0x0F)) + (((year /10) << 4 ) & (0xF0))));
  9681   00385A  C00B  F001         	movff	RTC_Set_Date@year,___awdiv@dividend
  9682   00385E  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9683   003860  0E00               	movlw	0
  9684   003862  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9685   003864  0E0A               	movlw	10
  9686   003866  6E03               	movwf	___awdiv@divisor^0,c
  9687   003868  EC83  F01F         	call	___awdiv	;wreg free
  9688   00386C  C001  F00C         	movff	?___awdiv,??_RTC_Set_Date
  9689   003870  C002  F00D         	movff	?___awdiv+1,??_RTC_Set_Date+1
  9690   003874  3A0C               	swapf	??_RTC_Set_Date^0,f,c
  9691   003876  0EF0               	movlw	240
  9692   003878  160C               	andwf	??_RTC_Set_Date^0,f,c
  9693   00387A  0EF0               	movlw	240
  9694   00387C  160C               	andwf	??_RTC_Set_Date^0,f,c
  9695   00387E  C00B  F001         	movff	RTC_Set_Date@year,___awmod@dividend
  9696   003882  6A02               	clrf	(___awmod@dividend+1)^0,c
  9697   003884  0E00               	movlw	0
  9698   003886  6E04               	movwf	(___awmod@divisor+1)^0,c
  9699   003888  0E0A               	movlw	10
  9700   00388A  6E03               	movwf	___awmod@divisor^0,c
  9701   00388C  ECE5  F01F         	call	___awmod	;wreg free
  9702   003890  5001               	movf	?___awmod^0,w,c
  9703   003892  0B0F               	andlw	15
  9704   003894  240C               	addwf	??_RTC_Set_Date^0,w,c
  9705   003896  EC23  F023         	call	_I2C_Write
  9706   00389A                     
  9707                           ;RTC_Driver.c: 32:  I2C_Stop();
  9708   00389A  EC34  F023         	call	_I2C_Stop	;wreg free
  9709   00389E  0012               	return		;funcret
  9710   0038A0                     __end_of_RTC_Set_Date:
  9711                           	callstack 0
  9712                           
  9713 ;; *************** function ___awmod *****************
  9714 ;; Defined at:
  9715 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;  dividend        2    0[COMRAM] int 
  9718 ;;  divisor         2    2[COMRAM] int 
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;  sign            1    5[COMRAM] unsigned char 
  9721 ;;  counter         1    4[COMRAM] unsigned char 
  9722 ;; Return value:  Size  Location     Type
  9723 ;;                  2    0[COMRAM] int 
  9724 ;; Registers used:
  9725 ;;		wreg, status,2, status,0
  9726 ;; Tracked objects:
  9727 ;;		On entry : 0/0
  9728 ;;		On exit  : 0/0
  9729 ;;		Unchanged: 0/0
  9730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9731 ;;      Params:         4       0       0       0       0       0       0       0       0
  9732 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9734 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9735 ;;Total ram usage:        6 bytes
  9736 ;; Hardware stack levels used: 1
  9737 ;; Hardware stack levels required when called: 1
  9738 ;; This function calls:
  9739 ;;		Nothing
  9740 ;; This function is called by:
  9741 ;;		_RTC_Set_Time
  9742 ;;		_RTC_Set_Date
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           	psect	text37
  9747   003FCA                     __ptext37:
  9748                           	callstack 0
  9749   003FCA                     ___awmod:
  9750                           	callstack 28
  9751   003FCA  0E00               	movlw	0
  9752   003FCC  6E06               	movwf	___awmod@sign^0,c
  9753   003FCE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9754   003FD0  EFEE  F01F         	goto	u4460
  9755   003FD4  EFEC  F01F         	goto	u4461
  9756   003FD8                     u4461:
  9757   003FD8  EFF4  F01F         	goto	l4540
  9758   003FDC                     u4460:
  9759   003FDC  6C01               	negf	___awmod@dividend^0,c
  9760   003FDE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9761   003FE0  B0D8               	btfsc	status,0,c
  9762   003FE2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9763   003FE4  0E01               	movlw	1
  9764   003FE6  6E06               	movwf	___awmod@sign^0,c
  9765   003FE8                     l4540:
  9766   003FE8  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9767   003FEA  EFFB  F01F         	goto	u4470
  9768   003FEE  EFF9  F01F         	goto	u4471
  9769   003FF2                     u4471:
  9770   003FF2  EFFF  F01F         	goto	l4544
  9771   003FF6                     u4470:
  9772   003FF6  6C03               	negf	___awmod@divisor^0,c
  9773   003FF8  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9774   003FFA  B0D8               	btfsc	status,0,c
  9775   003FFC  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9776   003FFE                     l4544:
  9777   003FFE  5003               	movf	___awmod@divisor^0,w,c
  9778   004000  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9779   004002  B4D8               	btfsc	status,2,c
  9780   004004  EF06  F020         	goto	u4481
  9781   004008  EF08  F020         	goto	u4480
  9782   00400C                     u4481:
  9783   00400C  EF2C  F020         	goto	l4560
  9784   004010                     u4480:
  9785   004010  0E01               	movlw	1
  9786   004012  6E05               	movwf	___awmod@counter^0,c
  9787   004014  EF10  F020         	goto	l4550
  9788   004018                     l4548:
  9789   004018  90D8               	bcf	status,0,c
  9790   00401A  3603               	rlcf	___awmod@divisor^0,f,c
  9791   00401C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9792   00401E  2A05               	incf	___awmod@counter^0,f,c
  9793   004020                     l4550:
  9794   004020  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9795   004022  EF15  F020         	goto	u4491
  9796   004026  EF17  F020         	goto	u4490
  9797   00402A                     u4491:
  9798   00402A  EF0C  F020         	goto	l4548
  9799   00402E                     u4490:
  9800   00402E                     l4552:
  9801   00402E  5003               	movf	___awmod@divisor^0,w,c
  9802   004030  5C01               	subwf	___awmod@dividend^0,w,c
  9803   004032  5004               	movf	(___awmod@divisor+1)^0,w,c
  9804   004034  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9805   004036  A0D8               	btfss	status,0,c
  9806   004038  EF20  F020         	goto	u4501
  9807   00403C  EF22  F020         	goto	u4500
  9808   004040                     u4501:
  9809   004040  EF26  F020         	goto	l4556
  9810   004044                     u4500:
  9811   004044  5003               	movf	___awmod@divisor^0,w,c
  9812   004046  5E01               	subwf	___awmod@dividend^0,f,c
  9813   004048  5004               	movf	(___awmod@divisor+1)^0,w,c
  9814   00404A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9815   00404C                     l4556:
  9816   00404C  90D8               	bcf	status,0,c
  9817   00404E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9818   004050  3203               	rrcf	___awmod@divisor^0,f,c
  9819   004052  2E05               	decfsz	___awmod@counter^0,f,c
  9820   004054  EF17  F020         	goto	l4552
  9821   004058                     l4560:
  9822   004058  5006               	movf	___awmod@sign^0,w,c
  9823   00405A  B4D8               	btfsc	status,2,c
  9824   00405C  EF32  F020         	goto	u4511
  9825   004060  EF34  F020         	goto	u4510
  9826   004064                     u4511:
  9827   004064  EF38  F020         	goto	l4564
  9828   004068                     u4510:
  9829   004068  6C01               	negf	___awmod@dividend^0,c
  9830   00406A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9831   00406C  B0D8               	btfsc	status,0,c
  9832   00406E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9833   004070                     l4564:
  9834   004070  C001  F001         	movff	___awmod@dividend,?___awmod
  9835   004074  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9836   004078  0012               	return		;funcret
  9837   00407A                     __end_of___awmod:
  9838                           	callstack 0
  9839                           
  9840 ;; *************** function ___awdiv *****************
  9841 ;; Defined at:
  9842 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  9843 ;; Parameters:    Size  Location     Type
  9844 ;;  dividend        2    0[COMRAM] int 
  9845 ;;  divisor         2    2[COMRAM] int 
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;  quotient        2    6[COMRAM] int 
  9848 ;;  sign            1    5[COMRAM] unsigned char 
  9849 ;;  counter         1    4[COMRAM] unsigned char 
  9850 ;; Return value:  Size  Location     Type
  9851 ;;                  2    0[COMRAM] int 
  9852 ;; Registers used:
  9853 ;;		wreg, status,2, status,0
  9854 ;; Tracked objects:
  9855 ;;		On entry : 0/0
  9856 ;;		On exit  : 0/0
  9857 ;;		Unchanged: 0/0
  9858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9859 ;;      Params:         4       0       0       0       0       0       0       0       0
  9860 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9862 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9863 ;;Total ram usage:        8 bytes
  9864 ;; Hardware stack levels used: 1
  9865 ;; Hardware stack levels required when called: 1
  9866 ;; This function calls:
  9867 ;;		Nothing
  9868 ;; This function is called by:
  9869 ;;		_RTC_Set_Time
  9870 ;;		_RTC_Set_Date
  9871 ;; This function uses a non-reentrant model
  9872 ;;
  9873                           
  9874                           	psect	text38
  9875   003F06                     __ptext38:
  9876                           	callstack 0
  9877   003F06                     ___awdiv:
  9878                           	callstack 28
  9879   003F06  0E00               	movlw	0
  9880   003F08  6E06               	movwf	___awdiv@sign^0,c
  9881   003F0A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9882   003F0C  EF8C  F01F         	goto	u4400
  9883   003F10  EF8A  F01F         	goto	u4401
  9884   003F14                     u4401:
  9885   003F14  EF92  F01F         	goto	l4496
  9886   003F18                     u4400:
  9887   003F18  6C03               	negf	___awdiv@divisor^0,c
  9888   003F1A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9889   003F1C  B0D8               	btfsc	status,0,c
  9890   003F1E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9891   003F20  0E01               	movlw	1
  9892   003F22  6E06               	movwf	___awdiv@sign^0,c
  9893   003F24                     l4496:
  9894   003F24  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9895   003F26  EF99  F01F         	goto	u4410
  9896   003F2A  EF97  F01F         	goto	u4411
  9897   003F2E                     u4411:
  9898   003F2E  EF9F  F01F         	goto	l4502
  9899   003F32                     u4410:
  9900   003F32  6C01               	negf	___awdiv@dividend^0,c
  9901   003F34  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9902   003F36  B0D8               	btfsc	status,0,c
  9903   003F38  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9904   003F3A  0E01               	movlw	1
  9905   003F3C  1A06               	xorwf	___awdiv@sign^0,f,c
  9906   003F3E                     l4502:
  9907   003F3E  0E00               	movlw	0
  9908   003F40  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9909   003F42  0E00               	movlw	0
  9910   003F44  6E07               	movwf	___awdiv@quotient^0,c
  9911   003F46  5003               	movf	___awdiv@divisor^0,w,c
  9912   003F48  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9913   003F4A  B4D8               	btfsc	status,2,c
  9914   003F4C  EFAA  F01F         	goto	u4421
  9915   003F50  EFAC  F01F         	goto	u4420
  9916   003F54                     u4421:
  9917   003F54  EFD4  F01F         	goto	l4524
  9918   003F58                     u4420:
  9919   003F58  0E01               	movlw	1
  9920   003F5A  6E05               	movwf	___awdiv@counter^0,c
  9921   003F5C  EFB4  F01F         	goto	l4510
  9922   003F60                     l4508:
  9923   003F60  90D8               	bcf	status,0,c
  9924   003F62  3603               	rlcf	___awdiv@divisor^0,f,c
  9925   003F64  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9926   003F66  2A05               	incf	___awdiv@counter^0,f,c
  9927   003F68                     l4510:
  9928   003F68  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9929   003F6A  EFB9  F01F         	goto	u4431
  9930   003F6E  EFBB  F01F         	goto	u4430
  9931   003F72                     u4431:
  9932   003F72  EFB0  F01F         	goto	l4508
  9933   003F76                     u4430:
  9934   003F76                     l4512:
  9935   003F76  90D8               	bcf	status,0,c
  9936   003F78  3607               	rlcf	___awdiv@quotient^0,f,c
  9937   003F7A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9938   003F7C  5003               	movf	___awdiv@divisor^0,w,c
  9939   003F7E  5C01               	subwf	___awdiv@dividend^0,w,c
  9940   003F80  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9941   003F82  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9942   003F84  A0D8               	btfss	status,0,c
  9943   003F86  EFC7  F01F         	goto	u4441
  9944   003F8A  EFC9  F01F         	goto	u4440
  9945   003F8E                     u4441:
  9946   003F8E  EFCE  F01F         	goto	l4520
  9947   003F92                     u4440:
  9948   003F92  5003               	movf	___awdiv@divisor^0,w,c
  9949   003F94  5E01               	subwf	___awdiv@dividend^0,f,c
  9950   003F96  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9951   003F98  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9952   003F9A  8007               	bsf	___awdiv@quotient^0,0,c
  9953   003F9C                     l4520:
  9954   003F9C  90D8               	bcf	status,0,c
  9955   003F9E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9956   003FA0  3203               	rrcf	___awdiv@divisor^0,f,c
  9957   003FA2  2E05               	decfsz	___awdiv@counter^0,f,c
  9958   003FA4  EFBB  F01F         	goto	l4512
  9959   003FA8                     l4524:
  9960   003FA8  5006               	movf	___awdiv@sign^0,w,c
  9961   003FAA  B4D8               	btfsc	status,2,c
  9962   003FAC  EFDA  F01F         	goto	u4451
  9963   003FB0  EFDC  F01F         	goto	u4450
  9964   003FB4                     u4451:
  9965   003FB4  EFE0  F01F         	goto	l4528
  9966   003FB8                     u4450:
  9967   003FB8  6C07               	negf	___awdiv@quotient^0,c
  9968   003FBA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9969   003FBC  B0D8               	btfsc	status,0,c
  9970   003FBE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9971   003FC0                     l4528:
  9972   003FC0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9973   003FC4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9974   003FC8  0012               	return		;funcret
  9975   003FCA                     __end_of___awdiv:
  9976                           	callstack 0
  9977                           
  9978 ;; *************** function _I2C_Stop *****************
  9979 ;; Defined at:
  9980 ;;		line 88 in file "I2C_Driver.c"
  9981 ;; Parameters:    Size  Location     Type
  9982 ;;		None
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;		None
  9985 ;; Return value:  Size  Location     Type
  9986 ;;                  1    wreg      unsigned char 
  9987 ;; Registers used:
  9988 ;;		None
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9994 ;;      Params:         0       0       0       0       0       0       0       0       0
  9995 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9996 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9997 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9998 ;;Total ram usage:        0 bytes
  9999 ;; Hardware stack levels used: 1
 10000 ;; Hardware stack levels required when called: 1
 10001 ;; This function calls:
 10002 ;;		Nothing
 10003 ;; This function is called by:
 10004 ;;		_RTC_Set_Time
 10005 ;;		_RTC_Set_Date
 10006 ;;		_RTC_Get_Time
 10007 ;;		_RTC_Get_Date
 10008 ;;		_I2C_Start_Wait
 10009 ;; This function uses a non-reentrant model
 10010 ;;
 10011                           
 10012                           	psect	text39
 10013   004668                     __ptext39:
 10014                           	callstack 0
 10015   004668                     _I2C_Stop:
 10016                           	callstack 27
 10017   004668                     
 10018                           ;I2C_Driver.c: 90:     PEN = 1;
 10019   004668  84C5               	bsf	4037,2,c	;volatile
 10020   00466A                     l289:
 10021   00466A  B4C5               	btfsc	4037,2,c	;volatile
 10022   00466C  EF3A  F023         	goto	u3191
 10023   004670  EF3C  F023         	goto	u3190
 10024   004674                     u3191:
 10025   004674  EF35  F023         	goto	l289
 10026   004678                     u3190:
 10027   004678                     l292:
 10028   004678  A8C7               	btfss	199,4,c	;volatile
 10029   00467A  EF41  F023         	goto	u3201
 10030   00467E  EF43  F023         	goto	u3200
 10031   004682                     u3201:
 10032   004682  EF3C  F023         	goto	l292
 10033   004686                     u3200:
 10034   004686  0012               	return		;funcret
 10035   004688                     __end_of_I2C_Stop:
 10036                           	callstack 0
 10037                           
 10038 ;; *************** function _I2C_Start *****************
 10039 ;; Defined at:
 10040 ;;		line 64 in file "I2C_Driver.c"
 10041 ;; Parameters:    Size  Location     Type
 10042 ;;  slave_write_    1    wreg     unsigned char 
 10043 ;; Auto vars:     Size  Location     Type
 10044 ;;  slave_write_    1    1[COMRAM] unsigned char 
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  1    wreg      unsigned char 
 10047 ;; Registers used:
 10048 ;;		wreg, status,2, cstack
 10049 ;; Tracked objects:
 10050 ;;		On entry : 0/0
 10051 ;;		On exit  : 0/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10054 ;;      Params:         0       0       0       0       0       0       0       0       0
 10055 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10056 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10057 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10058 ;;Total ram usage:        1 bytes
 10059 ;; Hardware stack levels used: 1
 10060 ;; Hardware stack levels required when called: 3
 10061 ;; This function calls:
 10062 ;;		_I2C_Write
 10063 ;; This function is called by:
 10064 ;;		_RTC_Set_Time
 10065 ;;		_RTC_Set_Date
 10066 ;;		_RTC_Get_Time
 10067 ;;		_RTC_Get_Date
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071                           	psect	text40
 10072   0045F6                     __ptext40:
 10073                           	callstack 0
 10074   0045F6                     _I2C_Start:
 10075                           	callstack 25
 10076                           
 10077                           ;incstack = 0
 10078                           ;I2C_Start@slave_write_address stored from wreg
 10079   0045F6  6E02               	movwf	I2C_Start@slave_write_address^0,c
 10080   0045F8                     
 10081                           ;I2C_Driver.c: 64: char I2C_Start(char slave_write_address);I2C_Driver.c: 65: {;I2C_Driv
      +                          er.c: 66:     SSPCON2bits.SEN = 1;
 10082   0045F8  80C5               	bsf	197,0,c	;volatile
 10083   0045FA                     l273:
 10084   0045FA  B0C5               	btfsc	197,0,c	;volatile
 10085   0045FC  EF02  F023         	goto	u3211
 10086   004600  EF04  F023         	goto	u3210
 10087   004604                     u3211:
 10088   004604  EFFD  F022         	goto	l273
 10089   004608                     u3210:
 10090   004608                     
 10091                           ;I2C_Driver.c: 68:     SSPIF = 0;
 10092   004608  969E               	bcf	3998,3,c	;volatile
 10093                           
 10094                           ;I2C_Driver.c: 69:     if (!SSPSTATbits.S)
 10095   00460A  B6C7               	btfsc	199,3,c	;volatile
 10096   00460C  EF0A  F023         	goto	u3221
 10097   004610  EF0C  F023         	goto	u3220
 10098   004614                     u3221:
 10099   004614  EF0E  F023         	goto	l3826
 10100   004618                     u3220:
 10101   004618  EF11  F023         	goto	l277
 10102   00461C                     l3826:
 10103                           
 10104                           ;I2C_Driver.c: 71:     return (I2C_Write(slave_write_address));;	Return value of _I2C_St
      +                          art is never used
 10105   00461C  5002               	movf	I2C_Start@slave_write_address^0,w,c
 10106   00461E  EC23  F023         	call	_I2C_Write
 10107   004622                     l277:
 10108   004622  0012               	return		;funcret
 10109   004624                     __end_of_I2C_Start:
 10110                           	callstack 0
 10111                           
 10112 ;; *************** function _I2C_Write *****************
 10113 ;; Defined at:
 10114 ;;		line 96 in file "I2C_Driver.c"
 10115 ;; Parameters:    Size  Location     Type
 10116 ;;  data            1    wreg     unsigned char 
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;  data            1    0[COMRAM] unsigned char 
 10119 ;; Return value:  Size  Location     Type
 10120 ;;                  1    wreg      unsigned char 
 10121 ;; Registers used:
 10122 ;;		wreg, cstack
 10123 ;; Tracked objects:
 10124 ;;		On entry : 0/0
 10125 ;;		On exit  : 0/0
 10126 ;;		Unchanged: 0/0
 10127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10128 ;;      Params:         0       0       0       0       0       0       0       0       0
 10129 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10130 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10131 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10132 ;;Total ram usage:        1 bytes
 10133 ;; Hardware stack levels used: 1
 10134 ;; Hardware stack levels required when called: 2
 10135 ;; This function calls:
 10136 ;;		_I2C_Ready
 10137 ;; This function is called by:
 10138 ;;		_I2C_Start
 10139 ;;		_I2C_Repeated_Start
 10140 ;;		_RTC_Set_Time
 10141 ;;		_RTC_Set_Date
 10142 ;;		_RTC_Get_Time
 10143 ;;		_RTC_Get_Date
 10144 ;;		_I2C_Start_Wait
 10145 ;; This function uses a non-reentrant model
 10146 ;;
 10147                           
 10148                           	psect	text41
 10149   004646                     __ptext41:
 10150                           	callstack 0
 10151   004646                     _I2C_Write:
 10152                           	callstack 26
 10153                           
 10154                           ;incstack = 0
 10155                           ;I2C_Write@data stored from wreg
 10156   004646  6E01               	movwf	I2C_Write@data^0,c
 10157   004648                     
 10158                           ;I2C_Driver.c: 96: char I2C_Write(unsigned char data);I2C_Driver.c: 97: {;I2C_Driver.c: 
      +                          98:     SSPBUF = data;
 10159   004648  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
 10160   00464C                     
 10161                           ;I2C_Driver.c: 99:     I2C_Ready();
 10162   00464C  EC8A  F023         	call	_I2C_Ready	;wreg free
 10163   004650                     
 10164                           ;I2C_Driver.c: 100:     if (ACKSTAT)
 10165   004650  ACC5               	btfss	4037,6,c	;volatile
 10166   004652  EF2D  F023         	goto	u3061
 10167   004656  EF2F  F023         	goto	u3060
 10168   00465A                     u3061:
 10169   00465A  EF32  F023         	goto	l3702
 10170   00465E                     u3060:
 10171   00465E                     
 10172                           ;I2C_Driver.c: 101:         return 1;
 10173   00465E  0E01               	movlw	1
 10174   004660  EF33  F023         	goto	l299
 10175   004664                     l3702:
 10176                           
 10177                           ;I2C_Driver.c: 103:         return 2;
 10178   004664  0E02               	movlw	2
 10179   004666                     l299:
 10180   004666  0012               	return		;funcret
 10181   004668                     __end_of_I2C_Write:
 10182                           	callstack 0
 10183                           
 10184 ;; *************** function _I2C_Ready *****************
 10185 ;; Defined at:
 10186 ;;		line 41 in file "I2C_Driver.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;		None
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;		None
 10191 ;; Return value:  Size  Location     Type
 10192 ;;                  1    wreg      void 
 10193 ;; Registers used:
 10194 ;;		None
 10195 ;; Tracked objects:
 10196 ;;		On entry : 0/0
 10197 ;;		On exit  : 0/0
 10198 ;;		Unchanged: 0/0
 10199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10200 ;;      Params:         0       0       0       0       0       0       0       0       0
 10201 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10202 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10203 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10204 ;;Total ram usage:        0 bytes
 10205 ;; Hardware stack levels used: 1
 10206 ;; Hardware stack levels required when called: 1
 10207 ;; This function calls:
 10208 ;;		Nothing
 10209 ;; This function is called by:
 10210 ;;		_I2C_Read
 10211 ;;		_I2C_Write
 10212 ;; This function uses a non-reentrant model
 10213 ;;
 10214                           
 10215                           	psect	text42
 10216   004714                     __ptext42:
 10217                           	callstack 0
 10218   004714                     _I2C_Ready:
 10219                           	callstack 26
 10220   004714                     l256:
 10221   004714  A69E               	btfss	3998,3,c	;volatile
 10222   004716  EF8F  F023         	goto	u2871
 10223   00471A  EF91  F023         	goto	u2870
 10224   00471E                     u2871:
 10225   00471E  EF8A  F023         	goto	l256
 10226   004722                     u2870:
 10227   004722                     
 10228                           ;I2C_Driver.c: 44:     SSPIF = 0;
 10229   004722  969E               	bcf	3998,3,c	;volatile
 10230   004724  0012               	return		;funcret
 10231   004726                     __end_of_I2C_Ready:
 10232                           	callstack 0
 10233                           
 10234 ;; *************** function _Push_Buttons_Init *****************
 10235 ;; Defined at:
 10236 ;;		line 10 in file "Push_Buttons.c"
 10237 ;; Parameters:    Size  Location     Type
 10238 ;;		None
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;		None
 10241 ;; Return value:  Size  Location     Type
 10242 ;;                  1    wreg      void 
 10243 ;; Registers used:
 10244 ;;		status,2, status,0
 10245 ;; Tracked objects:
 10246 ;;		On entry : 0/0
 10247 ;;		On exit  : 0/0
 10248 ;;		Unchanged: 0/0
 10249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10250 ;;      Params:         0       0       0       0       0       0       0       0       0
 10251 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10252 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10253 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10254 ;;Total ram usage:        0 bytes
 10255 ;; Hardware stack levels used: 1
 10256 ;; Hardware stack levels required when called: 1
 10257 ;; This function calls:
 10258 ;;		Nothing
 10259 ;; This function is called by:
 10260 ;;		_main
 10261 ;; This function uses a non-reentrant model
 10262 ;;
 10263                           
 10264                           	psect	text43
 10265   004748                     __ptext43:
 10266                           	callstack 0
 10267   004748                     _Push_Buttons_Init:
 10268                           	callstack 29
 10269   004748                     
 10270                           ;Push_Buttons.c: 12:     (TRISB |= (1<<2));
 10271   004748  8493               	bsf	147,2,c	;volatile
 10272                           
 10273                           ;Push_Buttons.c: 13:     (TRISB |= (1<<3));
 10274   00474A  8693               	bsf	147,3,c	;volatile
 10275                           
 10276                           ;Push_Buttons.c: 14:     (TRISB |= (1<<4));
 10277   00474C  8893               	bsf	147,4,c	;volatile
 10278                           
 10279                           ;Push_Buttons.c: 15:     (TRISB |= (1<<5));
 10280   00474E  8A93               	bsf	147,5,c	;volatile
 10281   004750  0012               	return		;funcret
 10282   004752                     __end_of_Push_Buttons_Init:
 10283                           	callstack 0
 10284                           
 10285 ;; *************** function _LCD_init *****************
 10286 ;; Defined at:
 10287 ;;		line 132 in file "LCD_Driver.c"
 10288 ;; Parameters:    Size  Location     Type
 10289 ;;		None
 10290 ;; Auto vars:     Size  Location     Type
 10291 ;;		None
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  1    wreg      void 
 10294 ;; Registers used:
 10295 ;;		wreg, status,2, status,0, cstack
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10301 ;;      Params:         0       0       0       0       0       0       0       0       0
 10302 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10303 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10304 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10305 ;;Total ram usage:        0 bytes
 10306 ;; Hardware stack levels used: 1
 10307 ;; Hardware stack levels required when called: 3
 10308 ;; This function calls:
 10309 ;;		_LCD_4bit_mode
 10310 ;; This function is called by:
 10311 ;;		_main
 10312 ;; This function uses a non-reentrant model
 10313 ;;
 10314                           
 10315                           	psect	text44
 10316   004726                     __ptext44:
 10317                           	callstack 0
 10318   004726                     _LCD_init:
 10319                           	callstack 27
 10320   004726                     
 10321                           ;LCD_Driver.c: 133:     (TRISD &=~(1<<2));
 10322   004726  9495               	bcf	149,2,c	;volatile
 10323                           
 10324                           ;LCD_Driver.c: 134:     (TRISD &=~(1<<3));
 10325   004728  9695               	bcf	149,3,c	;volatile
 10326                           
 10327                           ;LCD_Driver.c: 135:     (TRISD &=~(1<<4));
 10328   00472A  9895               	bcf	149,4,c	;volatile
 10329                           
 10330                           ;LCD_Driver.c: 136:     (TRISD &=~(1<<5));
 10331   00472C  9A95               	bcf	149,5,c	;volatile
 10332                           
 10333                           ;LCD_Driver.c: 137:     (TRISD &=~(1<<1));
 10334   00472E  9295               	bcf	149,1,c	;volatile
 10335                           
 10336                           ;LCD_Driver.c: 138:     (TRISD &=~(1<<0));
 10337   004730  9095               	bcf	149,0,c	;volatile
 10338   004732                     
 10339                           ;LCD_Driver.c: 143:     LCD_4bit_mode();
 10340   004732  ECB9  F020         	call	_LCD_4bit_mode	;wreg free
 10341   004736  0012               	return		;funcret
 10342   004738                     __end_of_LCD_init:
 10343                           	callstack 0
 10344                           
 10345 ;; *************** function _LCD_4bit_mode *****************
 10346 ;; Defined at:
 10347 ;;		line 110 in file "LCD_Driver.c"
 10348 ;; Parameters:    Size  Location     Type
 10349 ;;		None
 10350 ;; Auto vars:     Size  Location     Type
 10351 ;;		None
 10352 ;; Return value:  Size  Location     Type
 10353 ;;                  1    wreg      void 
 10354 ;; Registers used:
 10355 ;;		wreg, status,2, status,0, cstack
 10356 ;; Tracked objects:
 10357 ;;		On entry : 0/0
 10358 ;;		On exit  : 0/0
 10359 ;;		Unchanged: 0/0
 10360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10361 ;;      Params:         0       0       0       0       0       0       0       0       0
 10362 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10363 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10364 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10365 ;;Total ram usage:        1 bytes
 10366 ;; Hardware stack levels used: 1
 10367 ;; Hardware stack levels required when called: 2
 10368 ;; This function calls:
 10369 ;;		_LCD_cmd
 10370 ;;		_LCD_cmd_High
 10371 ;; This function is called by:
 10372 ;;		_LCD_init
 10373 ;; This function uses a non-reentrant model
 10374 ;;
 10375                           
 10376                           	psect	text45
 10377   004172                     __ptext45:
 10378                           	callstack 0
 10379   004172                     _LCD_4bit_mode:
 10380                           	callstack 27
 10381   004172                     
 10382                           ;LCD_Driver.c: 111:     _delay((unsigned long)((15)*(8000000UL/4000.0)));
 10383   004172  0E27               	movlw	39
 10384   004174  6E02               	movwf	??_LCD_4bit_mode^0,c
 10385   004176  0EF5               	movlw	245
 10386   004178                     u5387:
 10387   004178  2EE8               	decfsz	wreg,f,c
 10388   00417A  D7FE               	bra	u5387
 10389   00417C  2E02               	decfsz	??_LCD_4bit_mode^0,f,c
 10390   00417E  D7FC               	bra	u5387
 10391   004180  F000               	nop	
 10392   004182                     
 10393                           ;LCD_Driver.c: 112:     LCD_cmd_High(0x30);
 10394   004182  0E30               	movlw	48
 10395   004184  EC44  F023         	call	_LCD_cmd_High
 10396   004188                     
 10397                           ;LCD_Driver.c: 113:     _delay((unsigned long)((5)*(8000000UL/4000.0)));
 10398   004188  0E0D               	movlw	13
 10399   00418A  6E02               	movwf	??_LCD_4bit_mode^0,c
 10400   00418C  0EFC               	movlw	252
 10401   00418E                     u5397:
 10402   00418E  2EE8               	decfsz	wreg,f,c
 10403   004190  D7FE               	bra	u5397
 10404   004192  2E02               	decfsz	??_LCD_4bit_mode^0,f,c
 10405   004194  D7FC               	bra	u5397
 10406                           
 10407                           ;LCD_Driver.c: 114:     LCD_cmd_High(0x30);
 10408   004196  0E30               	movlw	48
 10409   004198  EC44  F023         	call	_LCD_cmd_High
 10410   00419C                     
 10411                           ;LCD_Driver.c: 115:     _delay((unsigned long)((100)*(8000000UL/4000000.0)));
 10412   00419C  0E42               	movlw	66
 10413   00419E                     u5407:
 10414   00419E  2EE8               	decfsz	wreg,f,c
 10415   0041A0  D7FE               	bra	u5407
 10416   0041A2  D000               	nop2	
 10417   0041A4                     
 10418                           ;LCD_Driver.c: 116:     LCD_cmd_High(0x30);
 10419   0041A4  0E30               	movlw	48
 10420   0041A6  EC44  F023         	call	_LCD_cmd_High
 10421                           
 10422                           ;LCD_Driver.c: 117:     _delay((unsigned long)((40)*(8000000UL/4000000.0)));
 10423   0041AA  0E1A               	movlw	26
 10424   0041AC                     u5417:
 10425   0041AC  2EE8               	decfsz	wreg,f,c
 10426   0041AE  D7FE               	bra	u5417
 10427   0041B0  D000               	nop2	
 10428   0041B2                     
 10429                           ;LCD_Driver.c: 118:     LCD_cmd_High(0x20);
 10430   0041B2  0E20               	movlw	32
 10431   0041B4  EC44  F023         	call	_LCD_cmd_High
 10432   0041B8                     
 10433                           ;LCD_Driver.c: 119:     _delay((unsigned long)((40)*(8000000UL/4000000.0)));
 10434   0041B8  0E1A               	movlw	26
 10435   0041BA                     u5427:
 10436   0041BA  2EE8               	decfsz	wreg,f,c
 10437   0041BC  D7FE               	bra	u5427
 10438   0041BE  D000               	nop2	
 10439                           
 10440                           ;LCD_Driver.c: 120:     LCD_cmd(0x28);
 10441   0041C0  0E28               	movlw	40
 10442   0041C2  ECB0  F022         	call	_LCD_cmd
 10443                           
 10444                           ;LCD_Driver.c: 121:     LCD_cmd(0x0C);
 10445   0041C6  0E0C               	movlw	12
 10446   0041C8  ECB0  F022         	call	_LCD_cmd
 10447                           
 10448                           ;LCD_Driver.c: 122:     LCD_cmd(0x01);
 10449   0041CC  0E01               	movlw	1
 10450   0041CE  ECB0  F022         	call	_LCD_cmd
 10451   0041D2                     
 10452                           ;LCD_Driver.c: 123:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
 10453   0041D2  0E06               	movlw	6
 10454   0041D4  6E02               	movwf	??_LCD_4bit_mode^0,c
 10455   0041D6  0E30               	movlw	48
 10456   0041D8                     u5437:
 10457   0041D8  2EE8               	decfsz	wreg,f,c
 10458   0041DA  D7FE               	bra	u5437
 10459   0041DC  2E02               	decfsz	??_LCD_4bit_mode^0,f,c
 10460   0041DE  D7FC               	bra	u5437
 10461   0041E0  D000               	nop2	
 10462   0041E2                     
 10463                           ;LCD_Driver.c: 124:     LCD_cmd(0x06);
 10464   0041E2  0E06               	movlw	6
 10465   0041E4  ECB0  F022         	call	_LCD_cmd
 10466   0041E8  0012               	return		;funcret
 10467   0041EA                     __end_of_LCD_4bit_mode:
 10468                           	callstack 0
 10469                           
 10470 ;; *************** function _LCD_cmd_High *****************
 10471 ;; Defined at:
 10472 ;;		line 100 in file "LCD_Driver.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;  cmd             1    wreg     unsigned char 
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;  cmd             1    0[COMRAM] unsigned char 
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  1    wreg      void 
 10479 ;; Registers used:
 10480 ;;		wreg, status,2, status,0
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10486 ;;      Params:         0       0       0       0       0       0       0       0       0
 10487 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10488 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10489 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10490 ;;Total ram usage:        1 bytes
 10491 ;; Hardware stack levels used: 1
 10492 ;; Hardware stack levels required when called: 1
 10493 ;; This function calls:
 10494 ;;		Nothing
 10495 ;; This function is called by:
 10496 ;;		_LCD_4bit_mode
 10497 ;; This function uses a non-reentrant model
 10498 ;;
 10499                           
 10500                           	psect	text46
 10501   004688                     __ptext46:
 10502                           	callstack 0
 10503   004688                     _LCD_cmd_High:
 10504                           	callstack 27
 10505                           
 10506                           ;incstack = 0
 10507                           ;LCD_cmd_High@cmd stored from wreg
 10508   004688  6E01               	movwf	LCD_cmd_High@cmd^0,c
 10509   00468A                     
 10510                           ;LCD_Driver.c: 101:     (PORTD &=~(1<<0));
 10511   00468A  9083               	bcf	131,0,c	;volatile
 10512   00468C                     
 10513                           ;LCD_Driver.c: 102:     PORTD &= 0xC3;
 10514   00468C  0EC3               	movlw	195
 10515   00468E  1683               	andwf	131,f,c	;volatile
 10516   004690                     
 10517                           ;LCD_Driver.c: 103:     PORTD |= (0x3C & (cmd >> 2));
 10518   004690  4001               	rrncf	LCD_cmd_High@cmd^0,w,c
 10519   004692  42E8               	rrncf	wreg,f,c
 10520   004694  0B3F               	andlw	63
 10521   004696  0B3C               	andlw	60
 10522   004698  1283               	iorwf	131,f,c	;volatile
 10523                           
 10524                           ;LCD_Driver.c: 104:     (PORTD |= (1<<1));
 10525   00469A  8283               	bsf	131,1,c	;volatile
 10526   00469C                     
 10527                           ;LCD_Driver.c: 105:     _delay((unsigned long)((1)*(8000000UL/4000000.0)));
 10528   00469C  D000               	nop2		;2 cycle nop
 10529                           
 10530                           ;LCD_Driver.c: 106:     (PORTD &=~(1<<1));
 10531   00469E  9283               	bcf	131,1,c	;volatile
 10532                           
 10533                           ;LCD_Driver.c: 107:     (PORTD |= (1<<0));
 10534   0046A0  8083               	bsf	131,0,c	;volatile
 10535   0046A2  0012               	return		;funcret
 10536   0046A4                     __end_of_LCD_cmd_High:
 10537                           	callstack 0
 10538                           
 10539 ;; *************** function _LCD_clear *****************
 10540 ;; Defined at:
 10541 ;;		line 127 in file "LCD_Driver.c"
 10542 ;; Parameters:    Size  Location     Type
 10543 ;;		None
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;		None
 10546 ;; Return value:  Size  Location     Type
 10547 ;;                  1    wreg      void 
 10548 ;; Registers used:
 10549 ;;		wreg, status,2, status,0, cstack
 10550 ;; Tracked objects:
 10551 ;;		On entry : 0/0
 10552 ;;		On exit  : 0/0
 10553 ;;		Unchanged: 0/0
 10554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10555 ;;      Params:         0       0       0       0       0       0       0       0       0
 10556 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10557 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10558 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10559 ;;Total ram usage:        1 bytes
 10560 ;; Hardware stack levels used: 1
 10561 ;; Hardware stack levels required when called: 2
 10562 ;; This function calls:
 10563 ;;		_LCD_cmd
 10564 ;; This function is called by:
 10565 ;;		_main
 10566 ;; This function uses a non-reentrant model
 10567 ;;
 10568                           
 10569                           	psect	text47
 10570   0046BE                     __ptext47:
 10571                           	callstack 0
 10572   0046BE                     _LCD_clear:
 10573                           	callstack 28
 10574   0046BE                     
 10575                           ;LCD_Driver.c: 128:     LCD_cmd(0x01);
 10576   0046BE  0E01               	movlw	1
 10577   0046C0  ECB0  F022         	call	_LCD_cmd
 10578   0046C4                     
 10579                           ;LCD_Driver.c: 129:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
 10580   0046C4  0E06               	movlw	6
 10581   0046C6  6E02               	movwf	??_LCD_clear^0,c
 10582   0046C8  0E30               	movlw	48
 10583   0046CA                     u5447:
 10584   0046CA  2EE8               	decfsz	wreg,f,c
 10585   0046CC  D7FE               	bra	u5447
 10586   0046CE  2E02               	decfsz	??_LCD_clear^0,f,c
 10587   0046D0  D7FC               	bra	u5447
 10588   0046D2  D000               	nop2	
 10589   0046D4  0012               	return		;funcret
 10590   0046D6                     __end_of_LCD_clear:
 10591                           	callstack 0
 10592                           
 10593 ;; *************** function _LCD_cmd *****************
 10594 ;; Defined at:
 10595 ;;		line 78 in file "LCD_Driver.c"
 10596 ;; Parameters:    Size  Location     Type
 10597 ;;  cmd             1    wreg     unsigned char 
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;  cmd             1    0[COMRAM] unsigned char 
 10600 ;; Return value:  Size  Location     Type
 10601 ;;                  1    wreg      void 
 10602 ;; Registers used:
 10603 ;;		wreg, status,2, status,0
 10604 ;; Tracked objects:
 10605 ;;		On entry : 0/0
 10606 ;;		On exit  : 0/0
 10607 ;;		Unchanged: 0/0
 10608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10609 ;;      Params:         0       0       0       0       0       0       0       0       0
 10610 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10611 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10612 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10613 ;;Total ram usage:        1 bytes
 10614 ;; Hardware stack levels used: 1
 10615 ;; Hardware stack levels required when called: 1
 10616 ;; This function calls:
 10617 ;;		Nothing
 10618 ;; This function is called by:
 10619 ;;		_LCD_4bit_mode
 10620 ;;		_LCD_clear
 10621 ;;		_LCD_goto_xy
 10622 ;; This function uses a non-reentrant model
 10623 ;;
 10624                           
 10625                           	psect	text48
 10626   004560                     __ptext48:
 10627                           	callstack 0
 10628   004560                     _LCD_cmd:
 10629                           	callstack 27
 10630                           
 10631                           ;incstack = 0
 10632                           ;LCD_cmd@cmd stored from wreg
 10633   004560  6E01               	movwf	LCD_cmd@cmd^0,c
 10634   004562                     
 10635                           ;LCD_Driver.c: 79:     (PORTD &=~(1<<0));
 10636   004562  9083               	bcf	131,0,c	;volatile
 10637   004564                     
 10638                           ;LCD_Driver.c: 82:     PORTD &= 0xC3;
 10639   004564  0EC3               	movlw	195
 10640   004566  1683               	andwf	131,f,c	;volatile
 10641   004568                     
 10642                           ;LCD_Driver.c: 83:     PORTD |= (0x3C & (cmd >> 2));
 10643   004568  4001               	rrncf	LCD_cmd@cmd^0,w,c
 10644   00456A  42E8               	rrncf	wreg,f,c
 10645   00456C  0B3F               	andlw	63
 10646   00456E  0B3C               	andlw	60
 10647   004570  1283               	iorwf	131,f,c	;volatile
 10648                           
 10649                           ;LCD_Driver.c: 85:     (PORTD |= (1<<1));
 10650   004572  8283               	bsf	131,1,c	;volatile
 10651   004574                     
 10652                           ;LCD_Driver.c: 86:     _delay((unsigned long)((1)*(8000000UL/4000000.0)));
 10653   004574  D000               	nop2		;2 cycle nop
 10654                           
 10655                           ;LCD_Driver.c: 87:     (PORTD &=~(1<<1));
 10656   004576  9283               	bcf	131,1,c	;volatile
 10657   004578                     
 10658                           ;LCD_Driver.c: 89:     PORTD &= 0xC3;
 10659   004578  0EC3               	movlw	195
 10660   00457A  1683               	andwf	131,f,c	;volatile
 10661   00457C                     
 10662                           ;LCD_Driver.c: 90:     PORTD |= (0x3C & (cmd) << 2);
 10663   00457C  4401               	rlncf	LCD_cmd@cmd^0,w,c
 10664   00457E  46E8               	rlncf	wreg,f,c
 10665   004580  0BFC               	andlw	252
 10666   004582  0B3C               	andlw	60
 10667   004584  1283               	iorwf	131,f,c	;volatile
 10668                           
 10669                           ;LCD_Driver.c: 92:     (PORTD |= (1<<1));
 10670   004586  8283               	bsf	131,1,c	;volatile
 10671   004588                     
 10672                           ;LCD_Driver.c: 93:     _delay((unsigned long)((1)*(8000000UL/4000000.0)));
 10673   004588  D000               	nop2		;2 cycle nop
 10674                           
 10675                           ;LCD_Driver.c: 94:     (PORTD &=~(1<<1));
 10676   00458A  9283               	bcf	131,1,c	;volatile
 10677                           
 10678                           ;LCD_Driver.c: 95:     (PORTD |= (1<<0));
 10679   00458C  8083               	bsf	131,0,c	;volatile
 10680   00458E                     
 10681                           ;LCD_Driver.c: 97:     _delay((unsigned long)((40)*(8000000UL/4000000.0)));
 10682   00458E  0E1A               	movlw	26
 10683   004590                     u5457:
 10684   004590  2EE8               	decfsz	wreg,f,c
 10685   004592  D7FE               	bra	u5457
 10686   004594  D000               	nop2	
 10687   004596  0012               	return		;funcret
 10688   004598                     __end_of_LCD_cmd:
 10689                           	callstack 0
 10690                           
 10691 ;; *************** function _EEPROM_Write *****************
 10692 ;; Defined at:
 10693 ;;		line 12 in file "EEPROM_Driver.c"
 10694 ;; Parameters:    Size  Location     Type
 10695 ;;  address         1    wreg     unsigned char 
 10696 ;;  data            1    0[COMRAM] unsigned char 
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;  address         1    1[COMRAM] unsigned char 
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  1    wreg      void 
 10701 ;; Registers used:
 10702 ;;		wreg, status,2
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10708 ;;      Params:         1       0       0       0       0       0       0       0       0
 10709 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10710 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10711 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10712 ;;Total ram usage:        2 bytes
 10713 ;; Hardware stack levels used: 1
 10714 ;; Hardware stack levels required when called: 1
 10715 ;; This function calls:
 10716 ;;		Nothing
 10717 ;; This function is called by:
 10718 ;;		_main
 10719 ;;		_EEPROM_WriteString
 10720 ;; This function uses a non-reentrant model
 10721 ;;
 10722                           
 10723                           	psect	text49
 10724   004598                     __ptext49:
 10725                           	callstack 0
 10726   004598                     _EEPROM_Write:
 10727                           	callstack 29
 10728                           
 10729                           ;incstack = 0
 10730                           ;EEPROM_Write@address stored from wreg
 10731   004598  6E02               	movwf	EEPROM_Write@address^0,c
 10732   00459A                     
 10733                           ;EEPROM_Driver.c: 12: void EEPROM_Write(char address,char data);EEPROM_Driver.c: 13: {;E
      +                          EPROM_Driver.c: 15:     EEADR=address;
 10734   00459A  C002  FFA9         	movff	EEPROM_Write@address,4009	;volatile
 10735   00459E                     
 10736                           ;EEPROM_Driver.c: 16:     EEDATA=data;
 10737   00459E  C001  FFA8         	movff	EEPROM_Write@data,4008	;volatile
 10738   0045A2                     
 10739                           ;EEPROM_Driver.c: 17:     EECON1bits.EEPGD=0;
 10740   0045A2  9EA6               	bcf	166,7,c	;volsfr
 10741   0045A4                     
 10742                           ;EEPROM_Driver.c: 18:     EECON1bits.CFGS=0;
 10743   0045A4  9CA6               	bcf	166,6,c	;volsfr
 10744   0045A6                     
 10745                           ;EEPROM_Driver.c: 19:     EECON1bits.WREN=1;
 10746   0045A6  84A6               	bsf	166,2,c	;volsfr
 10747   0045A8                     
 10748                           ;EEPROM_Driver.c: 20:     INTCONbits.GIE=0;
 10749   0045A8  9EF2               	bcf	242,7,c	;volatile
 10750   0045AA                     
 10751                           ;EEPROM_Driver.c: 23:     EECON2=0x55;
 10752   0045AA  0E55               	movlw	85
 10753   0045AC  6EA7               	movwf	167,c	;volsfr
 10754   0045AE                     
 10755                           ;EEPROM_Driver.c: 24:     EECON2=0xaa;
 10756   0045AE  0EAA               	movlw	170
 10757   0045B0  6EA7               	movwf	167,c	;volsfr
 10758   0045B2                     
 10759                           ;EEPROM_Driver.c: 26:     EECON1bits.WR=1;
 10760   0045B2  82A6               	bsf	166,1,c	;volsfr
 10761   0045B4                     
 10762                           ;EEPROM_Driver.c: 27:     INTCONbits.GIE=1;
 10763   0045B4  8EF2               	bsf	242,7,c	;volatile
 10764   0045B6                     l603:
 10765   0045B6  A8A1               	btfss	161,4,c	;volatile
 10766   0045B8  EFE0  F022         	goto	u5081
 10767   0045BC  EFE2  F022         	goto	u5080
 10768   0045C0                     u5081:
 10769   0045C0  EFDB  F022         	goto	l603
 10770   0045C4                     u5080:
 10771   0045C4                     
 10772                           ;EEPROM_Driver.c: 31:     PIR2bits.EEIF=0;
 10773   0045C4  98A1               	bcf	161,4,c	;volatile
 10774   0045C6  0012               	return		;funcret
 10775   0045C8                     __end_of_EEPROM_Write:
 10776                           	callstack 0
 10777                           
 10778 ;; *************** function _EEPROM_Read *****************
 10779 ;; Defined at:
 10780 ;;		line 46 in file "EEPROM_Driver.c"
 10781 ;; Parameters:    Size  Location     Type
 10782 ;;  address         1    wreg     unsigned char 
 10783 ;; Auto vars:     Size  Location     Type
 10784 ;;  address         1    0[COMRAM] unsigned char 
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  1    wreg      unsigned char 
 10787 ;; Registers used:
 10788 ;;		wreg, status,2
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10794 ;;      Params:         0       0       0       0       0       0       0       0       0
 10795 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10796 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10797 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10798 ;;Total ram usage:        1 bytes
 10799 ;; Hardware stack levels used: 1
 10800 ;; Hardware stack levels required when called: 1
 10801 ;; This function calls:
 10802 ;;		Nothing
 10803 ;; This function is called by:
 10804 ;;		_main
 10805 ;; This function uses a non-reentrant model
 10806 ;;
 10807                           
 10808                           	psect	text50
 10809   004738                     __ptext50:
 10810                           	callstack 0
 10811   004738                     _EEPROM_Read:
 10812                           	callstack 29
 10813                           
 10814                           ;incstack = 0
 10815                           ;EEPROM_Read@address stored from wreg
 10816   004738  6E01               	movwf	EEPROM_Read@address^0,c
 10817   00473A                     
 10818                           ;EEPROM_Driver.c: 46: char EEPROM_Read(char address);EEPROM_Driver.c: 47: {;EEPROM_Drive
      +                          r.c: 49:     EEADR=address;
 10819   00473A  C001  FFA9         	movff	EEPROM_Read@address,4009	;volatile
 10820   00473E                     
 10821                           ;EEPROM_Driver.c: 50:     EECON1bits.WREN=0;
 10822   00473E  94A6               	bcf	166,2,c	;volsfr
 10823   004740                     
 10824                           ;EEPROM_Driver.c: 51:     EECON1bits.EEPGD=0;
 10825   004740  9EA6               	bcf	166,7,c	;volsfr
 10826   004742                     
 10827                           ;EEPROM_Driver.c: 52:     EECON1bits.RD=1;
 10828   004742  80A6               	bsf	166,0,c	;volsfr
 10829   004744                     
 10830                           ;EEPROM_Driver.c: 53:     return(EEDATA);
 10831   004744  50A8               	movf	168,w,c	;volatile
 10832   004746  0012               	return		;funcret
 10833   004748                     __end_of_EEPROM_Read:
 10834                           	callstack 0
 10835                           
 10836 ;; *************** function _Compare *****************
 10837 ;; Defined at:
 10838 ;;		line 76 in file "App_Functions.c"
 10839 ;; Parameters:    Size  Location     Type
 10840 ;;  Num1            2   12[COMRAM] int 
 10841 ;;  Num2            2   14[COMRAM] int 
 10842 ;; Auto vars:     Size  Location     Type
 10843 ;;		None
 10844 ;; Return value:  Size  Location     Type
 10845 ;;                  1    wreg      void 
 10846 ;; Registers used:
 10847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10848 ;; Tracked objects:
 10849 ;;		On entry : 0/0
 10850 ;;		On exit  : 0/0
 10851 ;;		Unchanged: 0/0
 10852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10853 ;;      Params:         4       0       0       0       0       0       0       0       0
 10854 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10855 ;;      Temps:         17       0       0       0       0       0       0       0       0
 10856 ;;      Totals:        21       0       0       0       0       0       0       0       0
 10857 ;;Total ram usage:       21 bytes
 10858 ;; Hardware stack levels used: 1
 10859 ;; Hardware stack levels required when called: 2
 10860 ;; This function calls:
 10861 ;;		_Action
 10862 ;;		___lmul
 10863 ;; This function is called by:
 10864 ;;		_main
 10865 ;; This function uses a non-reentrant model
 10866 ;;
 10867                           
 10868                           	psect	text51
 10869   002BBA                     __ptext51:
 10870                           	callstack 0
 10871   002BBA                     _Compare:
 10872                           	callstack 28
 10873   002BBA                     
 10874                           ;App_Functions.c: 76: void Compare(int Num1, int Num2);App_Functions.c: 77: {;App_Functi
      +                          ons.c: 78:   total=(uint32_t) (RTC->hour)*3600+(uint32_t) (RTC->min)*60+(uint32_t) (RTC-
      +                          >sec);
 10875   002BBA  0100               	movlb	0	; () banked
 10876   002BBC  51B5               	movf	(_rtc+2)& (0+255),w,b
 10877   002BBE  6E01               	movwf	___lmul@multiplier^0,c
 10878   002BC0  6A02               	clrf	(___lmul@multiplier+1)^0,c
 10879   002BC2  6A03               	clrf	(___lmul@multiplier+2)^0,c
 10880   002BC4  6A04               	clrf	(___lmul@multiplier+3)^0,c
 10881   002BC6  0E10               	movlw	16
 10882   002BC8  6E05               	movwf	___lmul@multiplicand^0,c
 10883   002BCA  0E0E               	movlw	14
 10884   002BCC  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 10885   002BCE  0E00               	movlw	0
 10886   002BD0  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 10887   002BD2  0E00               	movlw	0
 10888   002BD4  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 10889   002BD6  ECF5  F020         	call	___lmul	;wreg free
 10890   002BDA  C001  F011         	movff	?___lmul,??_Compare
 10891   002BDE  C002  F012         	movff	?___lmul+1,??_Compare+1
 10892   002BE2  C003  F013         	movff	?___lmul+2,??_Compare+2
 10893   002BE6  C004  F014         	movff	?___lmul+3,??_Compare+3
 10894   002BEA  0100               	movlb	0	; () banked
 10895   002BEC  51B4               	movf	(_rtc+1)& (0+255),w,b
 10896   002BEE  6E01               	movwf	___lmul@multiplier^0,c
 10897   002BF0  6A02               	clrf	(___lmul@multiplier+1)^0,c
 10898   002BF2  6A03               	clrf	(___lmul@multiplier+2)^0,c
 10899   002BF4  6A04               	clrf	(___lmul@multiplier+3)^0,c
 10900   002BF6  0E3C               	movlw	60
 10901   002BF8  6E05               	movwf	___lmul@multiplicand^0,c
 10902   002BFA  0E00               	movlw	0
 10903   002BFC  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 10904   002BFE  0E00               	movlw	0
 10905   002C00  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 10906   002C02  0E00               	movlw	0
 10907   002C04  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 10908   002C06  ECF5  F020         	call	___lmul	;wreg free
 10909   002C0A  5001               	movf	?___lmul^0,w,c
 10910   002C0C  2411               	addwf	??_Compare^0,w,c
 10911   002C0E  6E15               	movwf	(??_Compare+4)^0,c
 10912   002C10  5002               	movf	(?___lmul+1)^0,w,c
 10913   002C12  2012               	addwfc	(??_Compare+1)^0,w,c
 10914   002C14  6E16               	movwf	(??_Compare+5)^0,c
 10915   002C16  5003               	movf	(?___lmul+2)^0,w,c
 10916   002C18  2013               	addwfc	(??_Compare+2)^0,w,c
 10917   002C1A  6E17               	movwf	(??_Compare+6)^0,c
 10918   002C1C  5004               	movf	(?___lmul+3)^0,w,c
 10919   002C1E  2014               	addwfc	(??_Compare+3)^0,w,c
 10920   002C20  6E18               	movwf	(??_Compare+7)^0,c
 10921   002C22  0100               	movlb	0	; () banked
 10922   002C24  51B3               	movf	_rtc& (0+255),w,b
 10923   002C26  2415               	addwf	(??_Compare+4)^0,w,c
 10924   002C28  6F84               	movwf	_total& (0+255),b
 10925   002C2A  0E00               	movlw	0
 10926   002C2C  2016               	addwfc	(??_Compare+5)^0,w,c
 10927   002C2E  6F85               	movwf	(_total+1)& (0+255),b
 10928   002C30  0E00               	movlw	0
 10929   002C32  2017               	addwfc	(??_Compare+6)^0,w,c
 10930   002C34  6F86               	movwf	(_total+2)& (0+255),b
 10931   002C36  0E00               	movlw	0
 10932   002C38  2018               	addwfc	(??_Compare+7)^0,w,c
 10933   002C3A  6F87               	movwf	(_total+3)& (0+255),b
 10934   002C3C                     
 10935                           ; BSR set to: 0
 10936                           ;App_Functions.c: 79:   total1[Num1]=(uint32_t) hour2[Num1]*3600+(uint32_t) min2[Num1]*6
      +                          0+(uint32_t) sec2[Num1];
 10937   002C3C  0EBA               	movlw	low _hour2
 10938   002C3E  240D               	addwf	Compare@Num1^0,w,c
 10939   002C40  6ED9               	movwf	fsr2l,c
 10940   002C42  0E00               	movlw	high _hour2
 10941   002C44  200E               	addwfc	(Compare@Num1+1)^0,w,c
 10942   002C46  6EDA               	movwf	fsr2h,c
 10943   002C48  50DF               	movf	indf2,w,c
 10944   002C4A  6E11               	movwf	??_Compare^0,c
 10945   002C4C  5011               	movf	??_Compare^0,w,c
 10946   002C4E  6E01               	movwf	___lmul@multiplier^0,c
 10947   002C50  6A02               	clrf	(___lmul@multiplier+1)^0,c
 10948   002C52  6A03               	clrf	(___lmul@multiplier+2)^0,c
 10949   002C54  6A04               	clrf	(___lmul@multiplier+3)^0,c
 10950   002C56  0E10               	movlw	16
 10951   002C58  6E05               	movwf	___lmul@multiplicand^0,c
 10952   002C5A  0E0E               	movlw	14
 10953   002C5C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 10954   002C5E  0E00               	movlw	0
 10955   002C60  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 10956   002C62  0E00               	movlw	0
 10957   002C64  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 10958   002C66  ECF5  F020         	call	___lmul	;wreg free
 10959   002C6A  C001  F012         	movff	?___lmul,??_Compare+1
 10960   002C6E  C002  F013         	movff	?___lmul+1,??_Compare+2
 10961   002C72  C003  F014         	movff	?___lmul+2,??_Compare+3
 10962   002C76  C004  F015         	movff	?___lmul+3,??_Compare+4
 10963   002C7A  0E8C               	movlw	low _min2
 10964   002C7C  240D               	addwf	Compare@Num1^0,w,c
 10965   002C7E  6ED9               	movwf	fsr2l,c
 10966   002C80  0E00               	movlw	high _min2
 10967   002C82  200E               	addwfc	(Compare@Num1+1)^0,w,c
 10968   002C84  6EDA               	movwf	fsr2h,c
 10969   002C86  50DF               	movf	indf2,w,c
 10970   002C88  6E16               	movwf	(??_Compare+5)^0,c
 10971   002C8A  5016               	movf	(??_Compare+5)^0,w,c
 10972   002C8C  6E01               	movwf	___lmul@multiplier^0,c
 10973   002C8E  6A02               	clrf	(___lmul@multiplier+1)^0,c
 10974   002C90  6A03               	clrf	(___lmul@multiplier+2)^0,c
 10975   002C92  6A04               	clrf	(___lmul@multiplier+3)^0,c
 10976   002C94  0E3C               	movlw	60
 10977   002C96  6E05               	movwf	___lmul@multiplicand^0,c
 10978   002C98  0E00               	movlw	0
 10979   002C9A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 10980   002C9C  0E00               	movlw	0
 10981   002C9E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 10982   002CA0  0E00               	movlw	0
 10983   002CA2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 10984   002CA4  ECF5  F020         	call	___lmul	;wreg free
 10985   002CA8  5001               	movf	?___lmul^0,w,c
 10986   002CAA  2412               	addwf	(??_Compare+1)^0,w,c
 10987   002CAC  6E17               	movwf	(??_Compare+6)^0,c
 10988   002CAE  5002               	movf	(?___lmul+1)^0,w,c
 10989   002CB0  2013               	addwfc	(??_Compare+2)^0,w,c
 10990   002CB2  6E18               	movwf	(??_Compare+7)^0,c
 10991   002CB4  5003               	movf	(?___lmul+2)^0,w,c
 10992   002CB6  2014               	addwfc	(??_Compare+3)^0,w,c
 10993   002CB8  6E19               	movwf	(??_Compare+8)^0,c
 10994   002CBA  5004               	movf	(?___lmul+3)^0,w,c
 10995   002CBC  2015               	addwfc	(??_Compare+4)^0,w,c
 10996   002CBE  6E1A               	movwf	(??_Compare+9)^0,c
 10997   002CC0  0E88               	movlw	low _sec2
 10998   002CC2  240D               	addwf	Compare@Num1^0,w,c
 10999   002CC4  6ED9               	movwf	fsr2l,c
 11000   002CC6  0E00               	movlw	high _sec2
 11001   002CC8  200E               	addwfc	(Compare@Num1+1)^0,w,c
 11002   002CCA  6EDA               	movwf	fsr2h,c
 11003   002CCC  50DF               	movf	indf2,w,c
 11004   002CCE  6E1B               	movwf	(??_Compare+10)^0,c
 11005   002CD0  501B               	movf	(??_Compare+10)^0,w,c
 11006   002CD2  2417               	addwf	(??_Compare+6)^0,w,c
 11007   002CD4  6E1C               	movwf	(??_Compare+11)^0,c
 11008   002CD6  0E00               	movlw	0
 11009   002CD8  2018               	addwfc	(??_Compare+7)^0,w,c
 11010   002CDA  6E1D               	movwf	(??_Compare+12)^0,c
 11011   002CDC  0E00               	movlw	0
 11012   002CDE  2019               	addwfc	(??_Compare+8)^0,w,c
 11013   002CE0  6E1E               	movwf	(??_Compare+13)^0,c
 11014   002CE2  0E00               	movlw	0
 11015   002CE4  201A               	addwfc	(??_Compare+9)^0,w,c
 11016   002CE6  6E1F               	movwf	(??_Compare+14)^0,c
 11017   002CE8  0E70               	movlw	low _total1
 11018   002CEA  6E20               	movwf	(??_Compare+15)^0,c
 11019   002CEC  0E00               	movlw	high _total1
 11020   002CEE  6E21               	movwf	(??_Compare+16)^0,c
 11021   002CF0  90D8               	bcf	status,0,c
 11022   002CF2  340D               	rlcf	Compare@Num1^0,w,c
 11023   002CF4  6ED9               	movwf	fsr2l,c
 11024   002CF6  340E               	rlcf	(Compare@Num1+1)^0,w,c
 11025   002CF8  6EDA               	movwf	fsr2h,c
 11026   002CFA  90D8               	bcf	status,0,c
 11027   002CFC  36D9               	rlcf	fsr2l,f,c
 11028   002CFE  36DA               	rlcf	fsr2h,f,c
 11029   002D00  5020               	movf	(??_Compare+15)^0,w,c
 11030   002D02  26D9               	addwf	fsr2l,f,c
 11031   002D04  5021               	movf	(??_Compare+16)^0,w,c
 11032   002D06  22DA               	addwfc	fsr2h,f,c
 11033   002D08  C01C  FFDE         	movff	??_Compare+11,postinc2
 11034   002D0C  C01D  FFDE         	movff	??_Compare+12,postinc2
 11035   002D10  C01E  FFDE         	movff	??_Compare+13,postinc2
 11036   002D14  C01F  FFDE         	movff	??_Compare+14,postinc2
 11037   002D18                     
 11038                           ;App_Functions.c: 80:   total2[Num1]=(uint32_t) 3600*hour2[Num2]+(uint32_t) min2[Num2]*6
      +                          0 +(uint32_t) sec2[Num2];
 11039   002D18  0EBA               	movlw	low _hour2
 11040   002D1A  240F               	addwf	Compare@Num2^0,w,c
 11041   002D1C  6ED9               	movwf	fsr2l,c
 11042   002D1E  0E00               	movlw	high _hour2
 11043   002D20  2010               	addwfc	(Compare@Num2+1)^0,w,c
 11044   002D22  6EDA               	movwf	fsr2h,c
 11045   002D24  50DF               	movf	indf2,w,c
 11046   002D26  6E11               	movwf	??_Compare^0,c
 11047   002D28  5011               	movf	??_Compare^0,w,c
 11048   002D2A  6E01               	movwf	___lmul@multiplier^0,c
 11049   002D2C  6A02               	clrf	(___lmul@multiplier+1)^0,c
 11050   002D2E  6A03               	clrf	(___lmul@multiplier+2)^0,c
 11051   002D30  6A04               	clrf	(___lmul@multiplier+3)^0,c
 11052   002D32  0E10               	movlw	16
 11053   002D34  6E05               	movwf	___lmul@multiplicand^0,c
 11054   002D36  0E0E               	movlw	14
 11055   002D38  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 11056   002D3A  0E00               	movlw	0
 11057   002D3C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 11058   002D3E  0E00               	movlw	0
 11059   002D40  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 11060   002D42  ECF5  F020         	call	___lmul	;wreg free
 11061   002D46  C001  F012         	movff	?___lmul,??_Compare+1
 11062   002D4A  C002  F013         	movff	?___lmul+1,??_Compare+2
 11063   002D4E  C003  F014         	movff	?___lmul+2,??_Compare+3
 11064   002D52  C004  F015         	movff	?___lmul+3,??_Compare+4
 11065   002D56  0E8C               	movlw	low _min2
 11066   002D58  240F               	addwf	Compare@Num2^0,w,c
 11067   002D5A  6ED9               	movwf	fsr2l,c
 11068   002D5C  0E00               	movlw	high _min2
 11069   002D5E  2010               	addwfc	(Compare@Num2+1)^0,w,c
 11070   002D60  6EDA               	movwf	fsr2h,c
 11071   002D62  50DF               	movf	indf2,w,c
 11072   002D64  6E16               	movwf	(??_Compare+5)^0,c
 11073   002D66  5016               	movf	(??_Compare+5)^0,w,c
 11074   002D68  6E01               	movwf	___lmul@multiplier^0,c
 11075   002D6A  6A02               	clrf	(___lmul@multiplier+1)^0,c
 11076   002D6C  6A03               	clrf	(___lmul@multiplier+2)^0,c
 11077   002D6E  6A04               	clrf	(___lmul@multiplier+3)^0,c
 11078   002D70  0E3C               	movlw	60
 11079   002D72  6E05               	movwf	___lmul@multiplicand^0,c
 11080   002D74  0E00               	movlw	0
 11081   002D76  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 11082   002D78  0E00               	movlw	0
 11083   002D7A  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 11084   002D7C  0E00               	movlw	0
 11085   002D7E  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 11086   002D80  ECF5  F020         	call	___lmul	;wreg free
 11087   002D84  5001               	movf	?___lmul^0,w,c
 11088   002D86  2412               	addwf	(??_Compare+1)^0,w,c
 11089   002D88  6E17               	movwf	(??_Compare+6)^0,c
 11090   002D8A  5002               	movf	(?___lmul+1)^0,w,c
 11091   002D8C  2013               	addwfc	(??_Compare+2)^0,w,c
 11092   002D8E  6E18               	movwf	(??_Compare+7)^0,c
 11093   002D90  5003               	movf	(?___lmul+2)^0,w,c
 11094   002D92  2014               	addwfc	(??_Compare+3)^0,w,c
 11095   002D94  6E19               	movwf	(??_Compare+8)^0,c
 11096   002D96  5004               	movf	(?___lmul+3)^0,w,c
 11097   002D98  2015               	addwfc	(??_Compare+4)^0,w,c
 11098   002D9A  6E1A               	movwf	(??_Compare+9)^0,c
 11099   002D9C  0E88               	movlw	low _sec2
 11100   002D9E  240F               	addwf	Compare@Num2^0,w,c
 11101   002DA0  6ED9               	movwf	fsr2l,c
 11102   002DA2  0E00               	movlw	high _sec2
 11103   002DA4  2010               	addwfc	(Compare@Num2+1)^0,w,c
 11104   002DA6  6EDA               	movwf	fsr2h,c
 11105   002DA8  50DF               	movf	indf2,w,c
 11106   002DAA  6E1B               	movwf	(??_Compare+10)^0,c
 11107   002DAC  501B               	movf	(??_Compare+10)^0,w,c
 11108   002DAE  2417               	addwf	(??_Compare+6)^0,w,c
 11109   002DB0  6E1C               	movwf	(??_Compare+11)^0,c
 11110   002DB2  0E00               	movlw	0
 11111   002DB4  2018               	addwfc	(??_Compare+7)^0,w,c
 11112   002DB6  6E1D               	movwf	(??_Compare+12)^0,c
 11113   002DB8  0E00               	movlw	0
 11114   002DBA  2019               	addwfc	(??_Compare+8)^0,w,c
 11115   002DBC  6E1E               	movwf	(??_Compare+13)^0,c
 11116   002DBE  0E00               	movlw	0
 11117   002DC0  201A               	addwfc	(??_Compare+9)^0,w,c
 11118   002DC2  6E1F               	movwf	(??_Compare+14)^0,c
 11119   002DC4  0E60               	movlw	low _total2
 11120   002DC6  6E20               	movwf	(??_Compare+15)^0,c
 11121   002DC8  0E00               	movlw	high _total2
 11122   002DCA  6E21               	movwf	(??_Compare+16)^0,c
 11123   002DCC  90D8               	bcf	status,0,c
 11124   002DCE  340D               	rlcf	Compare@Num1^0,w,c
 11125   002DD0  6ED9               	movwf	fsr2l,c
 11126   002DD2  340E               	rlcf	(Compare@Num1+1)^0,w,c
 11127   002DD4  6EDA               	movwf	fsr2h,c
 11128   002DD6  90D8               	bcf	status,0,c
 11129   002DD8  36D9               	rlcf	fsr2l,f,c
 11130   002DDA  36DA               	rlcf	fsr2h,f,c
 11131   002DDC  5020               	movf	(??_Compare+15)^0,w,c
 11132   002DDE  26D9               	addwf	fsr2l,f,c
 11133   002DE0  5021               	movf	(??_Compare+16)^0,w,c
 11134   002DE2  22DA               	addwfc	fsr2h,f,c
 11135   002DE4  C01C  FFDE         	movff	??_Compare+11,postinc2
 11136   002DE8  C01D  FFDE         	movff	??_Compare+12,postinc2
 11137   002DEC  C01E  FFDE         	movff	??_Compare+13,postinc2
 11138   002DF0  C01F  FFDE         	movff	??_Compare+14,postinc2
 11139                           
 11140                           ;App_Functions.c: 82:   Action();
 11141   002DF4  ECCF  F01D         	call	_Action	;wreg free
 11142   002DF8  0012               	return		;funcret
 11143   002DFA                     __end_of_Compare:
 11144                           	callstack 0
 11145                           
 11146 ;; *************** function ___lmul *****************
 11147 ;; Defined at:
 11148 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
 11149 ;; Parameters:    Size  Location     Type
 11150 ;;  multiplier      4    0[COMRAM] unsigned long 
 11151 ;;  multiplicand    4    4[COMRAM] unsigned long 
 11152 ;; Auto vars:     Size  Location     Type
 11153 ;;  product         4    8[COMRAM] unsigned long 
 11154 ;; Return value:  Size  Location     Type
 11155 ;;                  4    0[COMRAM] unsigned long 
 11156 ;; Registers used:
 11157 ;;		wreg, status,2, status,0
 11158 ;; Tracked objects:
 11159 ;;		On entry : 0/0
 11160 ;;		On exit  : 0/0
 11161 ;;		Unchanged: 0/0
 11162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11163 ;;      Params:         8       0       0       0       0       0       0       0       0
 11164 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11165 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11166 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11167 ;;Total ram usage:       12 bytes
 11168 ;; Hardware stack levels used: 1
 11169 ;; Hardware stack levels required when called: 1
 11170 ;; This function calls:
 11171 ;;		Nothing
 11172 ;; This function is called by:
 11173 ;;		_Compare
 11174 ;; This function uses a non-reentrant model
 11175 ;;
 11176                           
 11177                           	psect	text52
 11178   0041EA                     __ptext52:
 11179                           	callstack 0
 11180   0041EA                     ___lmul:
 11181                           	callstack 28
 11182   0041EA  0E00               	movlw	0
 11183   0041EC  6E09               	movwf	___lmul@product^0,c
 11184   0041EE  0E00               	movlw	0
 11185   0041F0  6E0A               	movwf	(___lmul@product+1)^0,c
 11186   0041F2  0E00               	movlw	0
 11187   0041F4  6E0B               	movwf	(___lmul@product+2)^0,c
 11188   0041F6  0E00               	movlw	0
 11189   0041F8  6E0C               	movwf	(___lmul@product+3)^0,c
 11190   0041FA                     l4010:
 11191   0041FA  A001               	btfss	___lmul@multiplier^0,0,c
 11192   0041FC  EF02  F021         	goto	u3571
 11193   004200  EF04  F021         	goto	u3570
 11194   004204                     u3571:
 11195   004204  EF0C  F021         	goto	l4014
 11196   004208                     u3570:
 11197   004208  5005               	movf	___lmul@multiplicand^0,w,c
 11198   00420A  2609               	addwf	___lmul@product^0,f,c
 11199   00420C  5006               	movf	(___lmul@multiplicand+1)^0,w,c
 11200   00420E  220A               	addwfc	(___lmul@product+1)^0,f,c
 11201   004210  5007               	movf	(___lmul@multiplicand+2)^0,w,c
 11202   004212  220B               	addwfc	(___lmul@product+2)^0,f,c
 11203   004214  5008               	movf	(___lmul@multiplicand+3)^0,w,c
 11204   004216  220C               	addwfc	(___lmul@product+3)^0,f,c
 11205   004218                     l4014:
 11206   004218  90D8               	bcf	status,0,c
 11207   00421A  3605               	rlcf	___lmul@multiplicand^0,f,c
 11208   00421C  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
 11209   00421E  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
 11210   004220  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
 11211   004222  90D8               	bcf	status,0,c
 11212   004224  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
 11213   004226  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
 11214   004228  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
 11215   00422A  3201               	rrcf	___lmul@multiplier^0,f,c
 11216   00422C  5001               	movf	___lmul@multiplier^0,w,c
 11217   00422E  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
 11218   004230  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
 11219   004232  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
 11220   004234  A4D8               	btfss	status,2,c
 11221   004236  EF1F  F021         	goto	u3581
 11222   00423A  EF21  F021         	goto	u3580
 11223   00423E                     u3581:
 11224   00423E  EFFD  F020         	goto	l4010
 11225   004242                     u3580:
 11226   004242  C009  F001         	movff	___lmul@product,?___lmul
 11227   004246  C00A  F002         	movff	___lmul@product+1,?___lmul+1
 11228   00424A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
 11229   00424E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
 11230   004252  0012               	return		;funcret
 11231   004254                     __end_of___lmul:
 11232                           	callstack 0
 11233                           
 11234 ;; *************** function _Action *****************
 11235 ;; Defined at:
 11236 ;;		line 86 in file "App_Functions.c"
 11237 ;; Parameters:    Size  Location     Type
 11238 ;;		None
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;		None
 11241 ;; Return value:  Size  Location     Type
 11242 ;;                  1    wreg      void 
 11243 ;; Registers used:
 11244 ;;		wreg, status,2, status,0
 11245 ;; Tracked objects:
 11246 ;;		On entry : 0/0
 11247 ;;		On exit  : 0/0
 11248 ;;		Unchanged: 0/0
 11249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11250 ;;      Params:         0       0       0       0       0       0       0       0       0
 11251 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11252 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11253 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11254 ;;Total ram usage:        0 bytes
 11255 ;; Hardware stack levels used: 1
 11256 ;; Hardware stack levels required when called: 1
 11257 ;; This function calls:
 11258 ;;		Nothing
 11259 ;; This function is called by:
 11260 ;;		_Compare
 11261 ;; This function uses a non-reentrant model
 11262 ;;
 11263                           
 11264                           	psect	text53
 11265   003B9E                     __ptext53:
 11266                           	callstack 0
 11267   003B9E                     _Action:
 11268                           	callstack 28
 11269   003B9E                     
 11270                           ;App_Functions.c: 90:   if(total>=total1[0])
 11271   003B9E  0100               	movlb	0	; () banked
 11272   003BA0  5170               	movf	_total1& (0+255),w,b
 11273   003BA2  5D84               	subwf	_total& (0+255),w,b
 11274   003BA4  5171               	movf	(_total1+1)& (0+255),w,b
 11275   003BA6  5985               	subwfb	(_total+1)& (0+255),w,b
 11276   003BA8  5172               	movf	(_total1+2)& (0+255),w,b
 11277   003BAA  5986               	subwfb	(_total+2)& (0+255),w,b
 11278   003BAC  5173               	movf	(_total1+3)& (0+255),w,b
 11279   003BAE  5987               	subwfb	(_total+3)& (0+255),w,b
 11280   003BB0  A0D8               	btfss	status,0,c
 11281   003BB2  EFDD  F01D         	goto	u3491
 11282   003BB6  EFDF  F01D         	goto	u3490
 11283   003BBA                     u3491:
 11284   003BBA  EFE3  F01D         	goto	l3980
 11285   003BBE                     u3490:
 11286   003BBE                     
 11287                           ; BSR set to: 0
 11288                           ;App_Functions.c: 91:   {;App_Functions.c: 92:     mask[0]=1;
 11289   003BBE  0E00               	movlw	0
 11290   003BC0  6F81               	movwf	(_mask+1)& (0+255),b
 11291   003BC2  0E01               	movlw	1
 11292   003BC4  6F80               	movwf	_mask& (0+255),b
 11293   003BC6                     l3980:
 11294                           
 11295                           ; BSR set to: 0
 11296                           ;App_Functions.c: 95:   if(total2[0]>total&&mask[0]==1)
 11297   003BC6  5160               	movf	_total2& (0+255),w,b
 11298   003BC8  5D84               	subwf	_total& (0+255),w,b
 11299   003BCA  5161               	movf	(_total2+1)& (0+255),w,b
 11300   003BCC  5985               	subwfb	(_total+1)& (0+255),w,b
 11301   003BCE  5162               	movf	(_total2+2)& (0+255),w,b
 11302   003BD0  5986               	subwfb	(_total+2)& (0+255),w,b
 11303   003BD2  5163               	movf	(_total2+3)& (0+255),w,b
 11304   003BD4  5987               	subwfb	(_total+3)& (0+255),w,b
 11305   003BD6  B0D8               	btfsc	status,0,c
 11306   003BD8  EFF0  F01D         	goto	u3501
 11307   003BDC  EFF2  F01D         	goto	u3500
 11308   003BE0                     u3501:
 11309   003BE0  EFFE  F01D         	goto	l3986
 11310   003BE4                     u3500:
 11311   003BE4                     
 11312                           ; BSR set to: 0
 11313   003BE4  0580               	decf	_mask& (0+255),w,b
 11314   003BE6  1181               	iorwf	(_mask+1)& (0+255),w,b
 11315   003BE8  A4D8               	btfss	status,2,c
 11316   003BEA  EFF9  F01D         	goto	u3511
 11317   003BEE  EFFB  F01D         	goto	u3510
 11318   003BF2                     u3511:
 11319   003BF2  EFFE  F01D         	goto	l3986
 11320   003BF6                     u3510:
 11321   003BF6                     
 11322                           ; BSR set to: 0
 11323                           ;App_Functions.c: 96:   {;App_Functions.c: 98:     (PORTB |= (1<<6));
 11324   003BF6  8C81               	bsf	129,6,c	;volatile
 11325                           
 11326                           ;App_Functions.c: 99:   }
 11327   003BF8  EF0B  F01E         	goto	l3992
 11328   003BFC                     l3986:
 11329                           
 11330                           ; BSR set to: 0
 11331                           ;App_Functions.c: 101:   {;App_Functions.c: 102:      if(!flag1)
 11332   003BFC  519E               	movf	_flag1& (0+255),w,b
 11333   003BFE  A4D8               	btfss	status,2,c
 11334   003C00  EF04  F01E         	goto	u3521
 11335   003C04  EF06  F01E         	goto	u3520
 11336   003C08                     u3521:
 11337   003C08  EF0B  F01E         	goto	l3992
 11338   003C0C                     u3520:
 11339   003C0C                     
 11340                           ; BSR set to: 0
 11341                           ;App_Functions.c: 103:      {;App_Functions.c: 104:          (PORTB &=~(1<<6));
 11342   003C0C  9C81               	bcf	129,6,c	;volatile
 11343   003C0E                     
 11344                           ; BSR set to: 0
 11345                           ;App_Functions.c: 105:          mask[0]=0;
 11346   003C0E  0E00               	movlw	0
 11347   003C10  6F81               	movwf	(_mask+1)& (0+255),b
 11348   003C12  0E00               	movlw	0
 11349   003C14  6F80               	movwf	_mask& (0+255),b
 11350   003C16                     l3992:
 11351                           
 11352                           ; BSR set to: 0
 11353                           ;App_Functions.c: 111:   if(total>=total1[2])
 11354   003C16  5178               	movf	(_total1+8)& (0+255),w,b
 11355   003C18  5D84               	subwf	_total& (0+255),w,b
 11356   003C1A  5179               	movf	(_total1+9)& (0+255),w,b
 11357   003C1C  5985               	subwfb	(_total+1)& (0+255),w,b
 11358   003C1E  517A               	movf	(_total1+10)& (0+255),w,b
 11359   003C20  5986               	subwfb	(_total+2)& (0+255),w,b
 11360   003C22  517B               	movf	(_total1+11)& (0+255),w,b
 11361   003C24  5987               	subwfb	(_total+3)& (0+255),w,b
 11362   003C26  A0D8               	btfss	status,0,c
 11363   003C28  EF18  F01E         	goto	u3531
 11364   003C2C  EF1A  F01E         	goto	u3530
 11365   003C30                     u3531:
 11366   003C30  EF1E  F01E         	goto	l3996
 11367   003C34                     u3530:
 11368   003C34                     
 11369                           ; BSR set to: 0
 11370                           ;App_Functions.c: 112:   {;App_Functions.c: 113:     mask[1]=1;
 11371   003C34  0E00               	movlw	0
 11372   003C36  6F83               	movwf	(_mask+3)& (0+255),b
 11373   003C38  0E01               	movlw	1
 11374   003C3A  6F82               	movwf	(_mask+2)& (0+255),b
 11375   003C3C                     l3996:
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;App_Functions.c: 116:   if(total2[2]>total&&mask[1]==1)
 11379   003C3C  5168               	movf	(_total2+8)& (0+255),w,b
 11380   003C3E  5D84               	subwf	_total& (0+255),w,b
 11381   003C40  5169               	movf	(_total2+9)& (0+255),w,b
 11382   003C42  5985               	subwfb	(_total+1)& (0+255),w,b
 11383   003C44  516A               	movf	(_total2+10)& (0+255),w,b
 11384   003C46  5986               	subwfb	(_total+2)& (0+255),w,b
 11385   003C48  516B               	movf	(_total2+11)& (0+255),w,b
 11386   003C4A  5987               	subwfb	(_total+3)& (0+255),w,b
 11387   003C4C  B0D8               	btfsc	status,0,c
 11388   003C4E  EF2B  F01E         	goto	u3541
 11389   003C52  EF2D  F01E         	goto	u3540
 11390   003C56                     u3541:
 11391   003C56  EF39  F01E         	goto	l4002
 11392   003C5A                     u3540:
 11393   003C5A                     
 11394                           ; BSR set to: 0
 11395   003C5A  0582               	decf	(_mask+2)& (0+255),w,b
 11396   003C5C  1183               	iorwf	(_mask+3)& (0+255),w,b
 11397   003C5E  A4D8               	btfss	status,2,c
 11398   003C60  EF34  F01E         	goto	u3551
 11399   003C64  EF36  F01E         	goto	u3550
 11400   003C68                     u3551:
 11401   003C68  EF39  F01E         	goto	l4002
 11402   003C6C                     u3550:
 11403   003C6C                     
 11404                           ; BSR set to: 0
 11405                           ;App_Functions.c: 117:   {;App_Functions.c: 119:     (PORTB |= (1<<7));
 11406   003C6C  8E81               	bsf	129,7,c	;volatile
 11407                           
 11408                           ;App_Functions.c: 120:   }else
 11409   003C6E  EF46  F01E         	goto	l583
 11410   003C72                     l4002:
 11411                           
 11412                           ; BSR set to: 0
 11413                           ;App_Functions.c: 121:   {;App_Functions.c: 122:       if(!flag2)
 11414   003C72  519D               	movf	_flag2& (0+255),w,b
 11415   003C74  A4D8               	btfss	status,2,c
 11416   003C76  EF3F  F01E         	goto	u3561
 11417   003C7A  EF41  F01E         	goto	u3560
 11418   003C7E                     u3561:
 11419   003C7E  EF46  F01E         	goto	l583
 11420   003C82                     u3560:
 11421   003C82                     
 11422                           ; BSR set to: 0
 11423                           ;App_Functions.c: 123:       {;App_Functions.c: 124:          (PORTB &=~(1<<7));
 11424   003C82  9E81               	bcf	129,7,c	;volatile
 11425   003C84                     
 11426                           ; BSR set to: 0
 11427                           ;App_Functions.c: 125:          mask[1]=0;
 11428   003C84  0E00               	movlw	0
 11429   003C86  6F83               	movwf	(_mask+3)& (0+255),b
 11430   003C88  0E00               	movlw	0
 11431   003C8A  6F82               	movwf	(_mask+2)& (0+255),b
 11432   003C8C                     l583:
 11433                           
 11434                           ; BSR set to: 0
 11435   003C8C  0012               	return		;funcret
 11436   003C8E                     __end_of_Action:
 11437                           	callstack 0
 11438                           
 11439 ;; *************** function _Check *****************
 11440 ;; Defined at:
 11441 ;;		line 68 in file "App_Functions.c"
 11442 ;; Parameters:    Size  Location     Type
 11443 ;;  Num             2    0[COMRAM] int 
 11444 ;; Auto vars:     Size  Location     Type
 11445 ;;		None
 11446 ;; Return value:  Size  Location     Type
 11447 ;;                  1    wreg      void 
 11448 ;; Registers used:
 11449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11450 ;; Tracked objects:
 11451 ;;		On entry : 0/0
 11452 ;;		On exit  : 0/0
 11453 ;;		Unchanged: 0/0
 11454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11455 ;;      Params:         2       0       0       0       0       0       0       0       0
 11456 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11457 ;;      Temps:          5       0       0       0       0       0       0       0       0
 11458 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11459 ;;Total ram usage:        7 bytes
 11460 ;; Hardware stack levels used: 1
 11461 ;; Hardware stack levels required when called: 1
 11462 ;; This function calls:
 11463 ;;		Nothing
 11464 ;; This function is called by:
 11465 ;;		_main
 11466 ;; This function uses a non-reentrant model
 11467 ;;
 11468                           
 11469                           	psect	text54
 11470   003652                     __ptext54:
 11471                           	callstack 0
 11472   003652                     _Check:
 11473                           	callstack 29
 11474   003652                     
 11475                           ;App_Functions.c: 68: void Check(int Num);App_Functions.c: 69: {;App_Functions.c: 70:   
      +                          hour2[Num] = ( 10 * (time1[Num][0] - '0' ) ) + time1[Num][1] - '0';
 11476   003652  0EBA               	movlw	low _hour2
 11477   003654  2401               	addwf	Check@Num^0,w,c
 11478   003656  6ED9               	movwf	fsr2l,c
 11479   003658  0E00               	movlw	high _hour2
 11480   00365A  2002               	addwfc	(Check@Num+1)^0,w,c
 11481   00365C  6EDA               	movwf	fsr2h,c
 11482   00365E  C001  F003         	movff	Check@Num,??_Check
 11483   003662  C002  F004         	movff	Check@Num+1,??_Check+1
 11484   003666  90D8               	bcf	status,0,c
 11485   003668  3603               	rlcf	??_Check^0,f,c
 11486   00366A  3604               	rlcf	(??_Check+1)^0,f,c
 11487   00366C  90D8               	bcf	status,0,c
 11488   00366E  3603               	rlcf	??_Check^0,f,c
 11489   003670  3604               	rlcf	(??_Check+1)^0,f,c
 11490   003672  90D8               	bcf	status,0,c
 11491   003674  3603               	rlcf	??_Check^0,f,c
 11492   003676  3604               	rlcf	(??_Check+1)^0,f,c
 11493   003678  0EC1               	movlw	low (_time1+1)
 11494   00367A  2403               	addwf	??_Check^0,w,c
 11495   00367C  6EE1               	movwf	fsr1l,c
 11496   00367E  0E00               	movlw	high (_time1+1)
 11497   003680  2004               	addwfc	(??_Check+1)^0,w,c
 11498   003682  6EE2               	movwf	fsr1h,c
 11499   003684  50E7               	movf	indf1,w,c
 11500   003686  6E05               	movwf	(??_Check+2)^0,c
 11501   003688  C001  F006         	movff	Check@Num,??_Check+3
 11502   00368C  C002  F007         	movff	Check@Num+1,??_Check+4
 11503   003690  90D8               	bcf	status,0,c
 11504   003692  3606               	rlcf	(??_Check+3)^0,f,c
 11505   003694  3607               	rlcf	(??_Check+4)^0,f,c
 11506   003696  90D8               	bcf	status,0,c
 11507   003698  3606               	rlcf	(??_Check+3)^0,f,c
 11508   00369A  3607               	rlcf	(??_Check+4)^0,f,c
 11509   00369C  90D8               	bcf	status,0,c
 11510   00369E  3606               	rlcf	(??_Check+3)^0,f,c
 11511   0036A0  3607               	rlcf	(??_Check+4)^0,f,c
 11512   0036A2  0EC0               	movlw	low _time1
 11513   0036A4  2406               	addwf	(??_Check+3)^0,w,c
 11514   0036A6  6EE1               	movwf	fsr1l,c
 11515   0036A8  0E00               	movlw	high _time1
 11516   0036AA  2007               	addwfc	(??_Check+4)^0,w,c
 11517   0036AC  6EE2               	movwf	fsr1h,c
 11518   0036AE  50E7               	movf	indf1,w,c
 11519   0036B0  0D0A               	mullw	10
 11520   0036B2  50F3               	movf	243,w,c
 11521   0036B4  2405               	addwf	(??_Check+2)^0,w,c
 11522   0036B6  0FF0               	addlw	240
 11523   0036B8  6EDF               	movwf	indf2,c
 11524                           
 11525                           ;App_Functions.c: 71:   min2[Num] = ( 10 * (time1[Num][3] - '0' ) ) + time1[Num][4] - '0
      +                          ';
 11526   0036BA  0E8C               	movlw	low _min2
 11527   0036BC  2401               	addwf	Check@Num^0,w,c
 11528   0036BE  6ED9               	movwf	fsr2l,c
 11529   0036C0  0E00               	movlw	high _min2
 11530   0036C2  2002               	addwfc	(Check@Num+1)^0,w,c
 11531   0036C4  6EDA               	movwf	fsr2h,c
 11532   0036C6  C001  F003         	movff	Check@Num,??_Check
 11533   0036CA  C002  F004         	movff	Check@Num+1,??_Check+1
 11534   0036CE  90D8               	bcf	status,0,c
 11535   0036D0  3603               	rlcf	??_Check^0,f,c
 11536   0036D2  3604               	rlcf	(??_Check+1)^0,f,c
 11537   0036D4  90D8               	bcf	status,0,c
 11538   0036D6  3603               	rlcf	??_Check^0,f,c
 11539   0036D8  3604               	rlcf	(??_Check+1)^0,f,c
 11540   0036DA  90D8               	bcf	status,0,c
 11541   0036DC  3603               	rlcf	??_Check^0,f,c
 11542   0036DE  3604               	rlcf	(??_Check+1)^0,f,c
 11543   0036E0  0EC4               	movlw	low (_time1+4)
 11544   0036E2  2403               	addwf	??_Check^0,w,c
 11545   0036E4  6EE1               	movwf	fsr1l,c
 11546   0036E6  0E00               	movlw	high (_time1+4)
 11547   0036E8  2004               	addwfc	(??_Check+1)^0,w,c
 11548   0036EA  6EE2               	movwf	fsr1h,c
 11549   0036EC  50E7               	movf	indf1,w,c
 11550   0036EE  6E05               	movwf	(??_Check+2)^0,c
 11551   0036F0  C001  F006         	movff	Check@Num,??_Check+3
 11552   0036F4  C002  F007         	movff	Check@Num+1,??_Check+4
 11553   0036F8  90D8               	bcf	status,0,c
 11554   0036FA  3606               	rlcf	(??_Check+3)^0,f,c
 11555   0036FC  3607               	rlcf	(??_Check+4)^0,f,c
 11556   0036FE  90D8               	bcf	status,0,c
 11557   003700  3606               	rlcf	(??_Check+3)^0,f,c
 11558   003702  3607               	rlcf	(??_Check+4)^0,f,c
 11559   003704  90D8               	bcf	status,0,c
 11560   003706  3606               	rlcf	(??_Check+3)^0,f,c
 11561   003708  3607               	rlcf	(??_Check+4)^0,f,c
 11562   00370A  0EC3               	movlw	low (_time1+3)
 11563   00370C  2406               	addwf	(??_Check+3)^0,w,c
 11564   00370E  6EE1               	movwf	fsr1l,c
 11565   003710  0E00               	movlw	high (_time1+3)
 11566   003712  2007               	addwfc	(??_Check+4)^0,w,c
 11567   003714  6EE2               	movwf	fsr1h,c
 11568   003716  50E7               	movf	indf1,w,c
 11569   003718  0D0A               	mullw	10
 11570   00371A  50F3               	movf	243,w,c
 11571   00371C  2405               	addwf	(??_Check+2)^0,w,c
 11572   00371E  0FF0               	addlw	240
 11573   003720  6EDF               	movwf	indf2,c
 11574                           
 11575                           ;App_Functions.c: 72:   sec2[Num] = ( 10 * (time1[Num][6] - '0' ) ) + time1[Num][7] - '0
      +                          ';
 11576   003722  0E88               	movlw	low _sec2
 11577   003724  2401               	addwf	Check@Num^0,w,c
 11578   003726  6ED9               	movwf	fsr2l,c
 11579   003728  0E00               	movlw	high _sec2
 11580   00372A  2002               	addwfc	(Check@Num+1)^0,w,c
 11581   00372C  6EDA               	movwf	fsr2h,c
 11582   00372E  C001  F003         	movff	Check@Num,??_Check
 11583   003732  C002  F004         	movff	Check@Num+1,??_Check+1
 11584   003736  90D8               	bcf	status,0,c
 11585   003738  3603               	rlcf	??_Check^0,f,c
 11586   00373A  3604               	rlcf	(??_Check+1)^0,f,c
 11587   00373C  90D8               	bcf	status,0,c
 11588   00373E  3603               	rlcf	??_Check^0,f,c
 11589   003740  3604               	rlcf	(??_Check+1)^0,f,c
 11590   003742  90D8               	bcf	status,0,c
 11591   003744  3603               	rlcf	??_Check^0,f,c
 11592   003746  3604               	rlcf	(??_Check+1)^0,f,c
 11593   003748  0EC7               	movlw	low (_time1+7)
 11594   00374A  2403               	addwf	??_Check^0,w,c
 11595   00374C  6EE1               	movwf	fsr1l,c
 11596   00374E  0E00               	movlw	high (_time1+7)
 11597   003750  2004               	addwfc	(??_Check+1)^0,w,c
 11598   003752  6EE2               	movwf	fsr1h,c
 11599   003754  50E7               	movf	indf1,w,c
 11600   003756  6E05               	movwf	(??_Check+2)^0,c
 11601   003758  C001  F006         	movff	Check@Num,??_Check+3
 11602   00375C  C002  F007         	movff	Check@Num+1,??_Check+4
 11603   003760  90D8               	bcf	status,0,c
 11604   003762  3606               	rlcf	(??_Check+3)^0,f,c
 11605   003764  3607               	rlcf	(??_Check+4)^0,f,c
 11606   003766  90D8               	bcf	status,0,c
 11607   003768  3606               	rlcf	(??_Check+3)^0,f,c
 11608   00376A  3607               	rlcf	(??_Check+4)^0,f,c
 11609   00376C  90D8               	bcf	status,0,c
 11610   00376E  3606               	rlcf	(??_Check+3)^0,f,c
 11611   003770  3607               	rlcf	(??_Check+4)^0,f,c
 11612   003772  0EC6               	movlw	low (_time1+6)
 11613   003774  2406               	addwf	(??_Check+3)^0,w,c
 11614   003776  6EE1               	movwf	fsr1l,c
 11615   003778  0E00               	movlw	high (_time1+6)
 11616   00377A  2007               	addwfc	(??_Check+4)^0,w,c
 11617   00377C  6EE2               	movwf	fsr1h,c
 11618   00377E  50E7               	movf	indf1,w,c
 11619   003780  0D0A               	mullw	10
 11620   003782  50F3               	movf	243,w,c
 11621   003784  2405               	addwf	(??_Check+2)^0,w,c
 11622   003786  0FF0               	addlw	240
 11623   003788  6EDF               	movwf	indf2,c
 11624   00378A  0012               	return		;funcret
 11625   00378C                     __end_of_Check:
 11626                           	callstack 0
 11627                           
 11628 ;; *************** function _Active_Receiver_Interrupt *****************
 11629 ;; Defined at:
 11630 ;;		line 56 in file "UART_Driver.c"
 11631 ;; Parameters:    Size  Location     Type
 11632 ;;		None
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;		None
 11635 ;; Return value:  Size  Location     Type
 11636 ;;                  1    wreg      void 
 11637 ;; Registers used:
 11638 ;;		None
 11639 ;; Tracked objects:
 11640 ;;		On entry : 0/0
 11641 ;;		On exit  : 0/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11644 ;;      Params:         0       0       0       0       0       0       0       0       0
 11645 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11646 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11647 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11648 ;;Total ram usage:        0 bytes
 11649 ;; Hardware stack levels used: 1
 11650 ;; Hardware stack levels required when called: 1
 11651 ;; This function calls:
 11652 ;;		Nothing
 11653 ;; This function is called by:
 11654 ;;		_main
 11655 ;; This function uses a non-reentrant model
 11656 ;;
 11657                           
 11658                           	psect	text55
 11659   004752                     __ptext55:
 11660                           	callstack 0
 11661   004752                     _Active_Receiver_Interrupt:
 11662                           	callstack 29
 11663   004752                     
 11664                           ;UART_Driver.c: 58:     GIE=1;
 11665   004752  8EF2               	bsf	4082,7,c	;volatile
 11666                           
 11667                           ;UART_Driver.c: 59:     PEIE=1;
 11668   004754  8CF2               	bsf	4082,6,c	;volatile
 11669                           
 11670                           ;UART_Driver.c: 60:     RCIE=1;
 11671   004756  8A9D               	bsf	3997,5,c	;volatile
 11672   004758  0012               	return		;funcret
 11673   00475A                     __end_of_Active_Receiver_Interrupt:
 11674                           	callstack 0
 11675                           
 11676 ;; *************** function _ISR *****************
 11677 ;; Defined at:
 11678 ;;		line 133 in file "main.c"
 11679 ;; Parameters:    Size  Location     Type
 11680 ;;		None
 11681 ;; Auto vars:     Size  Location     Type
 11682 ;;		None
 11683 ;; Return value:  Size  Location     Type
 11684 ;;                  1    wreg      void 
 11685 ;; Registers used:
 11686 ;;		None
 11687 ;; Tracked objects:
 11688 ;;		On entry : 0/0
 11689 ;;		On exit  : 0/0
 11690 ;;		Unchanged: 0/0
 11691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11692 ;;      Params:         0       0       0       0       0       0       0       0       0
 11693 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11694 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11695 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11696 ;;Total ram usage:        0 bytes
 11697 ;; Hardware stack levels used: 1
 11698 ;; This function calls:
 11699 ;;		Nothing
 11700 ;; This function is called by:
 11701 ;;		Interrupt level 2
 11702 ;; This function uses a non-reentrant model
 11703 ;;
 11704                           
 11705                           	psect	intcode
 11706   000008                     __pintcode:
 11707                           	callstack 0
 11708   000008                     _ISR:
 11709                           	callstack 21
 11710                           
 11711                           ;incstack = 0
 11712   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11713   00000A  ED52  F023         	call	int_func,f	;refresh shadow registers
 11714                           
 11715                           	psect	intcode_body
 11716   0046A4                     __pintcode_body:
 11717                           	callstack 21
 11718   0046A4                     int_func:
 11719                           	callstack 21
 11720   0046A4  0006               	pop		; remove dummy address from shadow register refresh
 11721   0046A6                     
 11722                           ;main.c: 136:   if (RCIF == 1)
 11723   0046A6  AA9E               	btfss	3998,5,c	;volatile
 11724   0046A8  EF58  F023         	goto	i2u526_41
 11725   0046AC  EF5A  F023         	goto	i2u526_40
 11726   0046B0                     i2u526_41:
 11727   0046B0  EF5D  F023         	goto	i2l490
 11728   0046B4                     i2u526_40:
 11729   0046B4                     
 11730                           ;main.c: 137:   {;main.c: 138:       RCIF = 0;
 11731   0046B4  9A9E               	bcf	3998,5,c	;volatile
 11732                           
 11733                           ;main.c: 139:       Destination = RCREG;
 11734   0046B6  CFAE F09C          	movff	4014,_Destination	;volatile
 11735   0046BA                     i2l490:
 11736   0046BA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11737   0046BC  0011               	retfie		f
 11738   0046BE                     __end_of_ISR:
 11739                           	callstack 0
 11740                           
 11741                           	psect	rparam
 11742   000000                     
 11743                           	psect	temp
 11744   00005F                     btemp:
 11745                           	callstack 0
 11746   00005F                     	ds	1
 11747   000000                     int$flags	set	btemp
 11748   000000                     wtemp8	set	btemp+1
 11749   000000                     ttemp5	set	btemp+1
 11750   000000                     ttemp6	set	btemp+4
 11751   000000                     ttemp7	set	btemp+8
 11752                           
 11753                           	psect	idloc
 11754                           
 11755                           ;Config register IDLOC0 @ 0x200000
 11756                           ;	unspecified, using default values
 11757   200000                     	org	2097152
 11758   200000  FF                 	db	255
 11759                           
 11760                           ;Config register IDLOC1 @ 0x200001
 11761                           ;	unspecified, using default values
 11762   200001                     	org	2097153
 11763   200001  FF                 	db	255
 11764                           
 11765                           ;Config register IDLOC2 @ 0x200002
 11766                           ;	unspecified, using default values
 11767   200002                     	org	2097154
 11768   200002  FF                 	db	255
 11769                           
 11770                           ;Config register IDLOC3 @ 0x200003
 11771                           ;	unspecified, using default values
 11772   200003                     	org	2097155
 11773   200003  FF                 	db	255
 11774                           
 11775                           ;Config register IDLOC4 @ 0x200004
 11776                           ;	unspecified, using default values
 11777   200004                     	org	2097156
 11778   200004  FF                 	db	255
 11779                           
 11780                           ;Config register IDLOC5 @ 0x200005
 11781                           ;	unspecified, using default values
 11782   200005                     	org	2097157
 11783   200005  FF                 	db	255
 11784                           
 11785                           ;Config register IDLOC6 @ 0x200006
 11786                           ;	unspecified, using default values
 11787   200006                     	org	2097158
 11788   200006  FF                 	db	255
 11789                           
 11790                           ;Config register IDLOC7 @ 0x200007
 11791                           ;	unspecified, using default values
 11792   200007                     	org	2097159
 11793   200007  FF                 	db	255
 11794                           
 11795                           	psect	config
 11796                           
 11797                           ;Config register CONFIG1L @ 0x300000
 11798                           ;	PLL Prescaler Selection bits
 11799                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 11800                           ;	System Clock Postscaler Selection bits
 11801                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 11802                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 11803                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 11804   300000                     	org	3145728
 11805   300000  00                 	db	0
 11806                           
 11807                           ;Config register CONFIG1H @ 0x300001
 11808                           ;	Oscillator Selection bits
 11809                           ;	FOSC = HS, HS oscillator (HS)
 11810                           ;	Fail-Safe Clock Monitor Enable bit
 11811                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11812                           ;	Internal/External Oscillator Switchover bit
 11813                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11814   300001                     	org	3145729
 11815   300001  0C                 	db	12
 11816                           
 11817                           ;Config register CONFIG2L @ 0x300002
 11818                           ;	Power-up Timer Enable bit
 11819                           ;	PWRT = OFF, PWRT disabled
 11820                           ;	Brown-out Reset Enable bits
 11821                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 11822                           ;	Brown-out Reset Voltage bits
 11823                           ;	BORV = 3, Minimum setting 2.05V
 11824                           ;	USB Voltage Regulator Enable bit
 11825                           ;	VREGEN = OFF, USB voltage regulator disabled
 11826   300002                     	org	3145730
 11827   300002  1F                 	db	31
 11828                           
 11829                           ;Config register CONFIG2H @ 0x300003
 11830                           ;	Watchdog Timer Enable bit
 11831                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11832                           ;	Watchdog Timer Postscale Select bits
 11833                           ;	WDTPS = 32768, 1:32768
 11834   300003                     	org	3145731
 11835   300003  1E                 	db	30
 11836                           
 11837                           ; Padding undefined space
 11838   300004                     	org	3145732
 11839   300004  FF                 	db	255
 11840                           
 11841                           ;Config register CONFIG3H @ 0x300005
 11842                           ;	CCP2 MUX bit
 11843                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 11844                           ;	PORTB A/D Enable bit
 11845                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 11846                           ;	Low-Power Timer 1 Oscillator Enable bit
 11847                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 11848                           ;	MCLR Pin Enable bit
 11849                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 11850   300005                     	org	3145733
 11851   300005  81                 	db	129
 11852                           
 11853                           ;Config register CONFIG4L @ 0x300006
 11854                           ;	Stack Full/Underflow Reset Enable bit
 11855                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11856                           ;	Single-Supply ICSP Enable bit
 11857                           ;	LVP = ON, Single-Supply ICSP enabled
 11858                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 11859                           ;	ICPRT = OFF, ICPORT disabled
 11860                           ;	Extended Instruction Set Enable bit
 11861                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11862                           ;	Background Debugger Enable bit
 11863                           ;	DEBUG = 0x1, unprogrammed default
 11864   300006                     	org	3145734
 11865   300006  85                 	db	133
 11866                           
 11867                           ; Padding undefined space
 11868   300007                     	org	3145735
 11869   300007  FF                 	db	255
 11870                           
 11871                           ;Config register CONFIG5L @ 0x300008
 11872                           ;	Code Protection bit
 11873                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 11874                           ;	Code Protection bit
 11875                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 11876                           ;	Code Protection bit
 11877                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 11878                           ;	Code Protection bit
 11879                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 11880   300008                     	org	3145736
 11881   300008  0F                 	db	15
 11882                           
 11883                           ;Config register CONFIG5H @ 0x300009
 11884                           ;	Boot Block Code Protection bit
 11885                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 11886                           ;	Data EEPROM Code Protection bit
 11887                           ;	CPD = OFF, Data EEPROM is not code-protected
 11888   300009                     	org	3145737
 11889   300009  C0                 	db	192
 11890                           
 11891                           ;Config register CONFIG6L @ 0x30000A
 11892                           ;	Write Protection bit
 11893                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 11894                           ;	Write Protection bit
 11895                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 11896                           ;	Write Protection bit
 11897                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 11898                           ;	Write Protection bit
 11899                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 11900   30000A                     	org	3145738
 11901   30000A  0F                 	db	15
 11902                           
 11903                           ;Config register CONFIG6H @ 0x30000B
 11904                           ;	Configuration Register Write Protection bit
 11905                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 11906                           ;	Boot Block Write Protection bit
 11907                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 11908                           ;	Data EEPROM Write Protection bit
 11909                           ;	WRTD = OFF, Data EEPROM is not write-protected
 11910   30000B                     	org	3145739
 11911   30000B  E0                 	db	224
 11912                           
 11913                           ;Config register CONFIG7L @ 0x30000C
 11914                           ;	Table Read Protection bit
 11915                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11916                           ;	Table Read Protection bit
 11917                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11918                           ;	Table Read Protection bit
 11919                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11920                           ;	Table Read Protection bit
 11921                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11922   30000C                     	org	3145740
 11923   30000C  0F                 	db	15
 11924                           
 11925                           ;Config register CONFIG7H @ 0x30000D
 11926                           ;	Boot Block Table Read Protection bit
 11927                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 11928   30000D                     	org	3145741
 11929   30000D  40                 	db	64
 11930                           tosu	equ	0xFFF
 11931                           tosh	equ	0xFFE
 11932                           tosl	equ	0xFFD
 11933                           stkptr	equ	0xFFC
 11934                           pclatu	equ	0xFFB
 11935                           pclath	equ	0xFFA
 11936                           pcl	equ	0xFF9
 11937                           tblptru	equ	0xFF8
 11938                           tblptrh	equ	0xFF7
 11939                           tblptrl	equ	0xFF6
 11940                           tablat	equ	0xFF5
 11941                           prodh	equ	0xFF4
 11942                           prodl	equ	0xFF3
 11943                           indf0	equ	0xFEF
 11944                           postinc0	equ	0xFEE
 11945                           postdec0	equ	0xFED
 11946                           preinc0	equ	0xFEC
 11947                           plusw0	equ	0xFEB
 11948                           fsr0h	equ	0xFEA
 11949                           fsr0l	equ	0xFE9
 11950                           wreg	equ	0xFE8
 11951                           indf1	equ	0xFE7
 11952                           postinc1	equ	0xFE6
 11953                           postdec1	equ	0xFE5
 11954                           preinc1	equ	0xFE4
 11955                           plusw1	equ	0xFE3
 11956                           fsr1h	equ	0xFE2
 11957                           fsr1l	equ	0xFE1
 11958                           bsr	equ	0xFE0
 11959                           indf2	equ	0xFDF
 11960                           postinc2	equ	0xFDE
 11961                           postdec2	equ	0xFDD
 11962                           preinc2	equ	0xFDC
 11963                           plusw2	equ	0xFDB
 11964                           fsr2h	equ	0xFDA
 11965                           fsr2l	equ	0xFD9
 11966                           status	equ	0xFD8

Data Sizes:
    Strings     78
    Constant    0
    Data        34
    BSS         167
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     24     153
    BANK1           256      0      72
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[11]), STR_6(CODE[10]), STR_5(CODE[11]), STR_4(CODE[4]), 
		 -> STR_3(CODE[5]), STR_2(CODE[4]), STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[11]), STR_6(CODE[10]), STR_5(CODE[11]), STR_4(CODE[4]), 
		 -> STR_3(CODE[5]), STR_2(CODE[4]), STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[11]), STR_6(CODE[10]), STR_5(CODE[11]), STR_4(CODE[4]), 
		 -> STR_3(CODE[5]), STR_2(CODE[4]), STR_1(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1308$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[11]), STR_6(CODE[10]), STR_5(CODE[11]), STR_4(CODE[4]), 
		 -> STR_3(CODE[5]), STR_2(CODE[4]), STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> year(BANK1[10]), month(BANK1[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK0[10]), secs(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1255$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1255$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    RTC_Get_Date@RTC	PTR struct . size(2) Largest target is 7
		 -> rtc(BANK0[7]), 

    RTC_Get_Time@RTC	PTR struct . size(2) Largest target is 7
		 -> rtc(BANK0[7]), 

    RTC	PTR struct . size(2) Largest target is 7
		 -> rtc(BANK0[7]), 

    LCD_write_string@str	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_15(CODE[9]), STR_14(CODE[9]), STR_13(CODE[9]), STR_12(CODE[9]), 
		 -> year(BANK1[10]), month(BANK1[10]), date(BANK1[10]), hours(BANK1[10]), 
		 -> mins(BANK0[10]), secs(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_Screen_Date_Time
    _USART_init->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv
    _Screen_Device_2->_Flash
    _Screen_Device_1->_Flash
    _Flash->_LCD_goto_xy
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _RTC_Get_Time->_I2C_Read
    _RTC_Get_Date->_I2C_Read
    _I2C_Repeated_Start->_I2C_Write
    _LCD_write_string->_LCD_write
    _LCD_goto_xy->_LCD_cmd
    _RTC_Set_Time->___awdiv
    _RTC_Set_Date->___awdiv
    _I2C_Start->_I2C_Write
    _LCD_init->_LCD_4bit_mode
    _LCD_4bit_mode->_LCD_cmd
    _LCD_4bit_mode->_LCD_cmd_High
    _LCD_clear->_LCD_cmd
    _Compare->___lmul

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _Screen_Date_Time->_sprintf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   48034
                                             91 COMRAM     2     2      0
                                             19 BANK0      5     5      0
          _Active_Receiver_Interrupt
                              _Check
                            _Compare
                        _EEPROM_Read
                       _EEPROM_Write
                           _I2C_Init
                          _LCD_clear
                           _LCD_init
                  _Push_Buttons_Init
                       _RTC_Set_Date
                       _RTC_Set_Time
                   _Screen_Date_Time
                    _Screen_Device_1
                    _Screen_Device_2
                         _USART_init
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           8     4      4    6711
                                             80 COMRAM     8     4      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     334
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2388
                                             64 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Screen_Device_2                                      6     6      0    9068
                                             15 COMRAM     6     6      0
                              _Flash
                        _LCD_goto_xy
                          _LCD_write
                   _LCD_write_string
                           _Set_Time
 ---------------------------------------------------------------------------------
 (1) _Screen_Device_1                                      6     6      0    9068
                                             15 COMRAM     6     6      0
                              _Flash
                        _LCD_goto_xy
                          _LCD_write
                   _LCD_write_string
                           _Set_Time
 ---------------------------------------------------------------------------------
 (2) _Set_Time                                            13     9      4    1356
                                              0 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (2) _Flash                                                5     1      4    5198
                                             10 COMRAM     5     1      4
                        _LCD_goto_xy
                          _LCD_write
 ---------------------------------------------------------------------------------
 (1) _Screen_Date_Time                                     1     1      0   13173
                                             90 COMRAM     1     1      0
                        _LCD_goto_xy
                   _LCD_write_string
                       _RTC_Get_Date
                       _RTC_Get_Time
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6   10221
                                              0 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    8348
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           25    19      6    7996
                                             62 COMRAM    20    14      6
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                35    25     10    2744
                                             27 COMRAM    35    25     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    3877
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2227
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _RTC_Get_Time                                         2     0      2     298
                                              3 COMRAM     2     0      2
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Get_Date                                         2     0      2     320
                                              3 COMRAM     2     0      2
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             3     3      0      46
                                              0 COMRAM     3     3      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     6     4      2     894
                                              2 COMRAM     6     4      2
                          _LCD_write
 ---------------------------------------------------------------------------------
 (3) _LCD_write                                            2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          9     5      4    1440
                                              1 COMRAM     9     5      4
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _RTC_Set_Time                                         5     3      2    3074
                                              8 COMRAM     5     3      2
                           _I2C_Init
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_Set_Date                                         6     3      3    3194
                                              8 COMRAM     6     3      3
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1360
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1364
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Push_Buttons_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      66
                      _LCD_4bit_mode
 ---------------------------------------------------------------------------------
 (2) _LCD_4bit_mode                                        1     1      0      66
                                              1 COMRAM     1     1      0
                            _LCD_cmd
                       _LCD_cmd_High
 ---------------------------------------------------------------------------------
 (3) _LCD_cmd_High                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            1     1      0      44
                                              1 COMRAM     1     1      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_cmd                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Compare                                             21    17      4    1502
                                             12 COMRAM    21    17      4
                             _Action
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1022
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _Action                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check                                                7     5      2     502
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _Active_Receiver_Interrupt                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Active_Receiver_Interrupt
   _Check
   _Compare
     _Action
     ___lmul
   _EEPROM_Read
   _EEPROM_Write
   _I2C_Init
   _LCD_clear
     _LCD_cmd
   _LCD_init
     _LCD_4bit_mode
       _LCD_cmd
       _LCD_cmd_High
   _Push_Buttons_Init
   _RTC_Set_Date
     _I2C_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Stop
     _I2C_Write
     ___awdiv
     ___awmod
   _RTC_Set_Time
     _I2C_Init
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     ___awdiv
     ___awmod
   _Screen_Date_Time
     _LCD_goto_xy
       _LCD_cmd
     _LCD_write_string
       _LCD_write
     _RTC_Get_Date
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
       _I2C_Start
       _I2C_Stop
       _I2C_Write
     _RTC_Get_Time
       _I2C_Read
       _I2C_Repeated_Start
       _I2C_Start
       _I2C_Stop
       _I2C_Write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _xtoa
             _pad
   _Screen_Device_1
     _Flash
       _LCD_goto_xy
       _LCD_write
     _LCD_goto_xy
     _LCD_write
     _LCD_write_string
     _Set_Time
   _Screen_Device_2
     _Flash
     _LCD_goto_xy
     _LCD_write
     _LCD_write_string
     _Set_Time
   _USART_init
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flge
     ___flmul
     ___fltol
     ___xxtofl

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      48       7       28.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITBIGSFRhhhhhl     28      0       0      21        0.0%
BITBIGSFRll         21      0       0      29        0.0%
BITBIGSFRhhlhh      15      0       0      22        0.0%
BITBIGSFRhll         F      0       0      27        0.0%
BITBIGSFRhhhhhh      D      0       0      20        0.0%
BITBIGSFRhhll        7      0       0      26        0.0%
BITBIGSFRhhlhll      4      0       0      24        0.0%
BITBIGSFRhhlhll      2      0       0      25        0.0%
BITBIGSFRhhlhlh      1      0       0      23        0.0%
BITBIGSFRlh          1      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13F      30        0.0%
DATA                 0      0     13F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jan 03 01:50:51 2023

                                   l9 4596                          ___fldiv@aexp 0040  
                        ___fldiv@bexp 003F              __end_of_Screen_Date_Time 2BBA  
                        ___fldiv@sign 0038                           _SSPSTATbits 000FC7  
             __end_of_Screen_Device_1 2348               __end_of_Screen_Device_2 1F3E  
                                  l12 46A2                                    l21 4736  
                                  l30 40F6                                    l15 41E8  
                                  l24 449E                                    l18 46D4  
                                  l42 3E3A                                    l47 4750  
                        ___awdiv@sign 0006                                   l200 1F3C  
                                 l125 2B64                                   l126 2BB8  
                                 l134 201C                                   l303 4704  
                                 l312 46FE                                   l330 389E  
                                 l306 4712                                   l250 455E  
                                 l163 2346                                   l171 1C12  
                                 l253 46EA                                   l309 46F0  
                                 l245 4528                                   l333 43C2  
                                 l327 3D64                                   l247 4536  
                                 l256 4714                                   l280 45CC  
                                 l336 42BA                                   l273 45FA  
                                 l249 4558                                   l258 4722  
                                 l282 45DA                                   l603 45B6  
                                 l259 4724                                   l275 4608  
                                 l292 4678                                   l284 45F4  
                                 l605 45C4                                   l277 4622  
                                 l606 45C6                                   l550 0886  
                                 l615 4746                                   l295 4686  
                                 l560 0BB0                                   l289 466A  
                                 l561 0C48                                   l457 14EA  
                                 l562 0CA8                                   l299 4666  
                                 l803 3650                                   l563 0D08  
                                 l555 09BA                                   l572 2DF8  
                                 l564 0D68                                   l566 0DC8  
                                 l583 3C8C                                   l559 0B18  
                                 l920 4078                                   l673 4758  
                                 l569 378A                                   l657 3B9C  
                                 l907 3FC8                                   l587 430C  
                                 l588 4320                                   l941 3A62  
                                 l790 34EC                                   l687 4242  
                                 l688 4252                                   l946 3AA8  
                                 l973 39A4                                   _GIE 007F97  
                                 _PEN 007E2A                                   _ISR 0008  
                                 _RTC 00BE                                   _abs 44E4  
                     __end_of_I2C_Ack 4714                                   _pad 40F8  
                                 _rtc 00B3                          ___awmod@sign 0006  
                                 prod 000FF3                                   wreg 000FE8  
                        ___flmul@aexp 0020                          ___flmul@bexp 0021  
                        ___flmul@sign 001B                          ___flmul@temp 0026  
                        ___flmul@prod 0022                                  ?_ISR 0001  
                     __end_of_LCD_cmd 4598                          ___fltol@exp1 000A  
                                ?_abs 0013                                  l1204 0FB8  
                                l1300 1A2A                                  l1221 10D2  
                                l1213 1288                                  l1205 0FA6  
                                l1230 11A2                                  l1206 0F6C  
                                l1231 1190                                  l1403 31F8  
                                l1307 1AF4                                  l1331 3072  
                                l1260 2540                                  l1405 3200  
                                l1422 301A                                  l1334 31CE  
                                l1415 3364                                  l1271 25FE  
                                l1263 2504                                  l4000 3C6C  
                                l1272 25EC                                  l1441 4522  
                                l1345 3166                                  l4002 3C72  
                                l4010 41FA                                  l1434 4410  
                                l1354 4372                                  l1258 26E0  
                                l1290 17CE                                  l1338 310A  
                                l4004 3C82                                  l4012 4208  
                                l1380 4170                                  l4100 0F38  
                                l4020 0DD6                                  l1453 3F04  
                                l1461 44E2                                  l1269 2586  
                                l4006 3C84                                  l4014 4218  
                                l1438 451A                                  l4110 0F8A  
                                l4102 0F54                                  l4030 0E16  
                                l4022 0DE4                                  l1294 1B32  
                                l4016 4222                                  l4008 41EA  
                                l5000 389A                                  l1464 475A  
                                l1376 411A                                  l4200 1228  
                                l4120 0FD6                                  l4112 0F98  
                                l4104 0F64                                  l4040 0E48  
                                l4032 0E18                                  l4024 0DE6  
                                l1385 276E                                  l1297 19C4  
                                l4210 1262                                  l4202 1248  
                                l4130 1016                                  l4114 0F9A  
                                l4106 0F7A                                  l4050 0E70  
                                l4042 0E4A                                  l4026 0DF6  
                                l4034 0E20                                  l4018 0DCA  
                                l5010 3B78                                  l5002 3AAA  
                                l1387 2776                                  l1299 1A3C  
                                l5020 4752                                  l3500 3400  
                                l1388 27BC                                  l4212 1268  
                                l4204 124C                                  l4140 1040  
                                l4132 1022                                  l4124 0FEA  
                                l4116 0FA4                                  l4108 0F86  
                                l4060 0EAA                                  l4052 0E80  
                                l4044 0E50                                  l4036 0E30  
                                l4028 0E06                                  l4300 252E  
                                l4220 2348                                  l5012 3B90  
                                l5004 3AB2                                  l5100 1300  
                                l5030 4744                                  l5022 473A  
                                l3510 3482                                  l3502 3414  
                                l4214 1276                                  l4206 125A  
                                l4150 10B2                                  l4134 1026  
                                l4126 0FFA                                  l4118 0FC6  
                                l4142 1046                                  l4070 0ED6  
                                l4062 0EBC                                  l4054 0E90  
                                l4046 0E5E                                  l4038 0E36  
                                l4310 2576                                  l4302 253E  
                                l4230 2384                                  l4222 2354  
                                l5014 3B94                                  l5006 3B44  
                                l5110 1318                                  l5102 1304  
                                l1399 295E                                  l5024 473E  
                                l5040 45A4                                  l3520 34CC  
                                l3512 3484                                  l3504 3422  
                                l3600 27B0                                  l4216 1278  
                                l4208 1260                                  l4160 110C  
                                l4144 106C                                  l4152 10C2  
                                l4136 1034                                  l4128 1008  
                                l4080 0EEA                                  l4072 0EDA  
                                l4064 0ECA                                  l4056 0E92  
                                l4048 0E60                                  l4320 25B6  
                                l4312 2584                                  l4304 2550  
                                l4240 23B4                                  l4232 2394  
                                l4224 2362                                  l4400 180E  
                                l5016 3B98                                  l5008 3B76  
                                l5200 1594                                  l5120 1344  
                                l5104 1314                                  l5026 4740  
                                l5050 45B2                                  l5042 45A6  
                                l5034 459A                                  l3514 3496  
                                l3506 3434                                  l3530 3520  
                                l3610 2856                                  l3602 27B8  
                                l4170 113C                                  l4162 1116  
                                l4154 10E8                                  l4146 10A0  
                                l4138 1036                                  l4090 0EFE  
                                l4082 0EEE                                  l4074 0EDE  
                                l4066 0ECE                                  l4058 0E9A  
                                l4330 2628                                  l4322 25E4  
                                l4306 2566                                  l4314 2596  
                                l4250 23EA                                  l4242 23BA  
                                l4234 2396                                  l4226 2364  
                                l4410 185E                                  l4402 1818  
                                l5018 3B9A                                  l5202 15C0  
                                l5210 1684                                  l5122 136E  
                                l5130 142C                                  l5060 2D18  
                                l5028 4742                                  l5052 45B4  
                                l5044 45A8                                  l5036 459E  
                                l4500 3F3A                                  l3508 3462  
                                l3516 349C                                  l3540 3578  
                                l3532 3524                                  l3524 34EE  
                                l3460 3E4E                                  l3620 28FE  
                                l3612 285C                                  l3604 27C4  
                                l4180 1164                                  l4172 1140  
                                l4164 1124                                  l4156 10F8  
                                l4148 10A2                                  l4092 0F02  
                                l4084 0EF2                                  l4076 0EE2  
                                l4068 0ED2                                  l4340 26A0  
                                l4332 2652                                  l4316 25A4  
                                l4308 256C                                  l4260 242A  
                                l4252 23FA                                  l4244 23C8  
                                l4228 2374                                  l4236 239E  
                                l4420 18A0                                  l4412 186A  
                                l4404 182E                                  l5220 16C2  
                                l5212 1688                                  l5204 15EE  
                                l5132 1430                                  l5124 139A  
                                l5116 131C                                  l5054 3652  
                                l5046 45AA                                  l5038 45A2  
                                l3702 4664                                  l4510 3F68  
                                l4502 3F3E                                  l3518 34AC  
                                l3550 35FA                                  l3542 358C  
                                l3534 3532                                  l3526 34F2  
                                l3462 3E60                                  l3622 2918  
                                l3614 2862                                  l3606 27CE  
                                l3710 2E2C                                  l4190 11BE  
                                l4182 1172                                  l4174 1150  
                                l4166 1126                                  l4094 0F06  
                                l4086 0EF6                                  l4078 0EE6  
                                l4350 26D6                                  l4342 26BC  
                                l4326 260E                                  l4334 2656  
                                l4318 25A8                                  l4262 243A  
                                l4270 245A                                  l4254 23FC  
                                l4246 23CA                                  l4238 23AE  
                                l4430 1902                                  l4422 18B0  
                                l4414 1878                                  l4406 183A  
                                l5222 16D6                                  l5214 1698  
                                l5206 161C                                  l5150 147C  
                                l5142 1468                                  l5134 1440  
                                l5126 13C6                                  l5118 132E  
                                l5070 128A                                  l5056 2BBA  
                                l5048 45AE                                  l4520 3F9C  
                                l4512 3F76                                  l4504 3F46  
                                l3800 3E12                                  l3480 3366  
                                l3544 359A                                  l3552 3600  
                                l3536 3552                                  l3528 3500  
                                l3464 3E6A                                  l3472 44A0  
                                l3560 40F8                                  l3624 2928  
                                l3608 27D4                                  l3616 28C6  
                                l3640 323A                                  l3632 31D0  
                                l3720 2E86                                  l3712 2E3A  
                                l4192 11CC                                  l4184 1188  
                                l4168 1134                                  l4176 1152  
                                l4088 0EFA                                  l4096 0F0A  
                                l4344 26C0                                  l4336 2670  
                                l4328 261A                                  l4280 2498  
                                l4272 246A                                  l4264 2442  
                                l4248 23DA                                  l4256 2404  
                                l4440 19AA                                  l4432 191E  
                                l4424 18CA                                  l4416 1884  
                                l4408 1852                                  l4360 1716  
                                l4600 38F6                                  l5224 16E2  
                                l5216 169A                                  l5208 164A  
                                l5152 147E                                  l5160 14CA  
                                l5144 146A                                  l5136 1442  
                                l5128 13F2                                  l5080 129C  
                                l5072 1290                                  l5058 2C3C  
                                l4522 3FA2                                  l4514 3F7C  
                                l4506 3F58                                  l3802 3E18  
                                l3810 453C                                  l3490 33AA  
                                l3482 336A                                  l3554 3610  
                                l3546 35C8                                  l3538 3570  
                                l3466 3E88                                  l3458 3E3C  
                                l3474 44AC                                  l3570 413E  
                                l3562 4106                                  l3626 292E  
                                l3618 28E0                                  l3650 3272  
                                l3642 3240                                  l3634 31EC  
                                l3730 2F84                                  l3722 2EDC  
                                l3714 2E3E                                  l3706 2DFA  
                                l4194 1206                                  l4178 1160  
                                l4098 0F0E                                  l4346 26CE  
                                l4338 2686                                  l4290 24E0  
                                l4282 24A8                                  l4274 246A  
                                l4266 2446                                  l4258 2414  
                                l4450 19E6                                  l4442 19B4  
                                l4434 1948                                  l4426 18DA  
                                l4418 1894                                  l4370 1756  
                                l4362 1724                                  l4602 3906  
                                l5226 16EE                                  l5218 16AA  
                                l5170 1500                                  l5154 1486  
                                l5146 1472                                  l5162 14CE  
                                l5138 1452                                  l5090 12D8  
                                l5082 12A0                                  l5074 1294  
                                l3820 4668                                  l4516 3F92  
                                l4508 3F60                                  l4524 3FA8  
                                l4540 3FE8                                  l4532 3FCA  
                                l3804 3E1C                                  l3812 454C  
                                l3900 427A                                  l3492 33CA  
                                l3484 3378                                  l3556 3630  
                                l3548 35E8                                  l3468 3EBE  
                                l3476 44BE                                  l3572 415C  
                                l3564 4112                                  l3628 293E  
                                l3580 26E2                                  l3652 3276  
                                l3644 3246                                  l3660 32F0  
                                l3636 3228                                  l3716 2E4E  
                                l3708 2E1E                                  l4700 29CC  
                                l5500 2310                                  l4188 11B2  
                                l4196 1208                                  l4348 26D4  
                                l4292 24F4                                  l4284 24B8  
                                l4460 1A58                                  l4452 19F4  
                                l4444 19C2                                  l4436 197E  
                                l4428 18F6                                  l4380 1786  
                                l4372 175C                                  l4364 1726  
                                l4612 3930                                  l4604 390A  
                                l5172 1510                                  l5164 14DC  
                                l5156 1488                                  l5148 1474  
                                l5084 12B4                                  l5076 1296  
                                l3670 4562                                  l3822 45F8  
                                l4526 3FB8                                  l4518 3F9A  
                                l4550 4020                                  l4542 3FF6  
                                l4534 3FCE                                  l3814 4554  
                                l3806 4526                                  l3830 45CA  
                                l3902 428E                                  l3494 33CE  
                                l3486 3398                                  l3574 44E4  
                                l3478 44C2                                  l3566 4126  
                                l3590 2762                                  l3582 2702  
                                l3662 330C                                  l3654 3286  
                                l3646 3256                                  l3638 3230  
                                l5502 2FD2                                  l3726 2F0C  
                                l3718 2E6A                                  l3742 2FF2  
                                l3910 4334                                  l4710 2A4E  
                                l4702 29EA                                  l4198 1218  
                                l4294 2502                                  l4286 24C8  
                                l4278 247E                                  l4470 1AC2  
                                l4462 1A66                                  l4454 1A22  
                                l4446 19D4                                  l4438 198C  
                                l4390 17BE                                  l4382 1788  
                                l4374 176C                                  l4366 1736  
                                l4358 170A                                  l4630 3994  
                                l4622 3958                                  l4614 393A  
                                l4606 3918                                  l5190 1568  
                                l5174 1518                                  l5166 14F8  
                                l5182 1530                                  l5158 1490  
                                l5086 12B8                                  l5078 1298  
                                ?_pad 0011                                  l3680 457C  
                                l3672 4564                                  l3752 468A  
                                l4528 3FC0                                  l4552 402E  
                                l4560 4058                                  l4544 3FFE  
                                l4536 3FDC                                  l3760 445C  
                                l3816 455C                                  l3808 4526  
                                l3904 42A2                                  l3496 33DA  
                                l3488 339C                                  l3576 44FE  
                                l3568 413A                                  l3592 277E  
                                l3584 2716                                  l3664 332A  
                                l3656 328C                                  l3648 3266  
                                l3736 2FB4                                  l3728 2F28  
                                l3912 433C                                  l4720 2AB8  
                                l4712 2A60                                  l4704 2A04  
                                l3920 0850                                  l4800 20A8  
                                l4296 250E                                  l4288 24D0  
                                l4480 1B18                                  l4472 1ADC  
                                l4464 1A90                                  l4448 19E2  
                                l4392 17DE                                  l4384 1798  
                                l4376 1772                                  l4368 1746  
                                l4624 3964                                  l4616 3944  
                                l4640 3082                                  l5176 1520  
                                l5184 1562                                  l5168 14FC  
                                l5096 12DE                                  l5088 12C6  
                                l3682 4588                                  l3674 4568  
                                l3754 468C                                  l3578 4714  
                                l3690 4648                                  l3826 461C  
                                l4490 3F0A                                  l4562 4068  
                                l4554 4044                                  l4546 4010  
                                l4538 3FE4                                  l3770 447E  
                                l3762 445E                                  l3834 45EE  
                                l3906 42B6                                  l3498 33F8  
                                l3594 278E                                  l3586 2726  
                                l3666 3344                                  l3658 3292  
                                l3738 2FE0                                  l3842 43C4  
                                l3914 4344                                  l4730 2B1A  
                                l4722 2AC4                                  l4714 2A7E  
                                l4706 2A16                                  l3930 0918  
                                l3922 085E                                  l4810 210C  
                                l4802 20BC                                  l4298 252C  
                                l4570 39D4                                  l4474 1AF8  
                                l4482 1B1E                                  l4458 1A4C  
                                l4466 1A94                                  l4394 17EE  
                                l4386 17A8                                  l4378 1778  
                                l4626 3974                                  l4650 30C0  
                                l4642 3098                                  l4634 301E  
                                l5178 1528                                  l5098 12F4  
                                l3684 458E                                  l3676 4574  
                                l3756 4690                                  l3860 41A4  
                                l3852 4172                                  l3692 464C  
                                l4492 3F18                                  l4564 4070  
                                l4556 404C                                  l4548 4018  
                                l3780 3D78                                  l3772 4482  
                                l3764 4462                                  l3836 45F4  
                                l3596 2794                                  l3588 2746  
                                l3844 43D0                                  l3916 4360  
                                l3908 4322                                  l4740 2BA0  
                                l4732 2B2C                                  l4724 2AD0  
                                l4716 2A98                                  l4708 2A34  
                                l3940 0A0A                                  l3924 0878  
                                l3932 0984                                  l4820 218E  
                                l4812 2128                                  l4804 20C4  
                                l4900 1C3E                                  l4580 3A42  
                                l4572 39E4                                  l4484 1B22  
                                l4476 1B08                                  l4468 1AAE  
                                l4388 17B8                                  l4628 3984  
                                l4660 3148                                  l4652 30F2  
                                l4636 302E                                  l5196 156C  
                                l3678 4578                                  l3758 469C  
                                l3862 41B2                                  l3854 4182  
                                l3694 4650                                  l4494 3F20  
                                l4558 4052                                  l3790 3DB0  
                                l3782 3D94                                  l3774 448C  
                                l3766 446E                                  l3870 407A  
                                l3686 4700                                  l3598 27A4  
                                l3846 43EC                                  l4742 2BAC  
                                l4734 2B4A                                  l4726 2AE2  
                                l4718 2AAC                                  l3950 0B86  
                                l3942 0A4C                                  l3934 0992  
                                l3926 0894                                  l4830 2206  
                                l4822 21A6                                  l4814 2140  
                                l4806 20E0                                  l4910 1C7A  
                                l4902 1C46                                  l4582 3A50  
                                l4574 3A12                                  l4478 1B16  
                                l4398 1802                                  l4590 38A0  
                                l4670 319E                                  l4662 3156  
                                l4654 30F4                                  l4646 30AC  
                                l4638 303C                                  l5198 157E  
                                l4680 46BE                                  l3864 41B8  
                                l3856 4188                                  l3696 465E  
                                l4496 3F24                                  l4488 3F06  
                                l3784 3D9A                                  l3792 3DD2  
                                l3776 448E                                  l3768 447C  
                                l3872 4086                                  l3688 46EC  
                                l3880 437A                                  l3848 4408  
                                l4736 2B80                                  l4728 2B00  
                                l3960 0D3E                                  l3952 0BE8  
                                l3936 09AC                                  l3944 0AB8  
                                l3928 08D6                                  l4840 229A  
                                l4824 21BE                                  l4816 215A  
                                l4808 20F0                                  l4760 1F98  
                                l4744 1F3E                                  l4920 1CBA  
                                l4912 1C82                                  l4904 1C4A  
                                l4584 3AA0                                  l4576 3A22  
                                l4568 39A6                                  l4592 38B6  
                                l4672 31AE                                  l4664 3174  
                                l4656 3100                                  l4648 30B4  
                                l4682 46C4                                  l3866 41D2  
                                l3858 419C                                  l4498 3F32  
                                l3794 3DE4                                  l3786 3DA6  
                                l3778 3D66                                  l3874 40B6  
                                l3890 43BE                                  l3882 4380  
                                l4738 2B94                                  l4690 2960  
                                l3970 4312                                  l3962 0D9E  
                                l3954 0C1E                                  l3946 0AEE  
                                l3938 09C8                                  l4842 22B2  
                                l4826 21D6                                  l4850 22FA  
                                l4818 2176                                  l4834 221E  
                                l4770 1FC0                                  l4762 1FAC  
                                l4754 1F66                                  l4746 1F52  
                                l4930 1D36                                  l4922 1CD6  
                                l4914 1C96                                  l4906 1C5E  
                                l4586 3AA6                                  l4578 3A30  
                                l4674 31BC                                  l4666 3176  
                                l4658 313C                                  l5490 1544  
                                l3980 3BC6                                  l3868 41E2  
                                l4684 4726                                  l3972 46D6  
                                l3796 3E00                                  l3788 3DAC  
                                l3876 40BA                                  l3892 4254  
                                l3884 4386                                  l4692 2978  
                                l3964 42BC                                  l3956 0C7E  
                                l3948 0B50                                  l4844 22CA  
                                l4836 226A                                  l4828 21EE  
                                l4780 200E                                  l4772 1FD2  
                                l4764 1FB8                                  l4756 1F78  
                                l4748 1F5E                                  l4940 1DB4  
                                l4932 1D50                                  l4916 1C9E  
                                l4908 1C66                                  l4924 1CE6  
                                l4860 1B34                                  l4596 38CA  
                                l4676 31BE                                  l4668 317A  
                                l5492 165E                                  l3990 3C0E  
                                l3982 3BE4                                  l4686 4732  
                                l3974 46DA                                  l3798 3E06  
                                l3894 425A                                  l3886 4396  
                                l3878 4374                                  l4694 2990  
                                l3966 42D8                                  l3958 0CDE  
                                l4846 22E2                                  l4838 2282  
                                l4790 2068                                  l4782 202A  
                                l4774 1FD6                                  l4758 1F7C  
                                l5494 1E2A                                  l4942 1DCC  
                                l4934 1D6C                                  l4950 1E14  
                                l4926 1D02                                  l4918 1CB2  
                                l4870 1B5C                                  l4862 1B48  
                                l4598 38F4                                  l5486 1406  
                                l3992 3C16                                  l3984 3BF6  
                                l3976 3B9E                                  l4688 4748  
                                l3896 4260                                  l3888 43AA  
                                l4696 29A6                                  l3968 42F4  
                                l4792 2070                                  l4784 2048  
                                l4776 1FF2                                  l5496 1F06  
                                l4960 1EC0                                  l4952 1E60  
                                l4944 1DE4                                  l4936 1D84  
                                l4928 1D1E                                  l4880 1BAE  
                                l4872 1B6E                                  l4864 1B54  
                                l5488 14A4                                  l3994 3C34  
                                l3986 3BFC                                  l3978 3BBE  
                                l3898 4266                                  l4698 29BC  
                                l5498 2234                                  l4794 2084  
                                l4786 2050                                  l4778 2000  
                                l4962 1ED8                                  l4954 1E78  
                                l4946 1DFC                                  l4938 1D9C  
                                l4890 1BCC                                  l4874 1B72  
                                l3996 3C3C                                  l3988 3C0C  
                                l4980 3CA0                                  l4796 208C  
                                l4788 2054                                  l4956 1E90  
                                l4892 1BE8                                  l4876 1B8E  
                                l3998 3C5A                                  l4990 3794  
                                l4982 3CE0                                  l4798 20A0  
                                l4958 1EA8                                  l4966 1EF0  
                                l4894 1BF6                                  l4886 1BB6  
                                l4878 1BA2                                  l4992 379A  
                                l4984 3D20                                  l4976 3C90  
                                l4896 1C04                                  l4888 1BC8  
                                l4994 37DA                                  l4986 3D60  
                                l4978 3C9A                                  l4898 1C20  
                                l4996 381A                                  l4988 378E  
                                l4998 385A                                  STR_1 0846  
                                STR_2 0847                                  STR_3 0812  
                                STR_4 0827                                  STR_5 080C  
                                STR_6 0821                                  STR_7 0801  
                                STR_8 0817                                  STR_9 0807  
                                _BRGH 007D62                                  _CREN 007D5C  
                                u3000 32CA                                  u3010 330C  
                                u3011 3308                                  u3020 332A  
                                u3100 2F28                                  u3021 3326  
                                u3005 32B8                                  u3101 2F24  
                                u3110 3D78                                  u3030 3344  
                                u3111 3D74                                  u3031 3340  
                                u3200 4686                                  u3120 3D94  
                                u3040 4712                                  u4000 2384  
                                u3201 4682                                  u3121 3D90  
                                u3041 470E                                  u4001 2380  
                                u3210 4608                                  u3130 3DCE  
                                u3050 46FE                                  u4010 23C8  
                                u3211 4604                                  u3131 3DCA  
                                u3051 46FA                                  u4011 23C4  
                                u3060 465E                                  u3220 4618  
                                u3140 3DE4                                  u3300 0878  
                                u4100 2566                                  u4020 23DA  
                                u3061 465A                                  u3221 4614  
                                u3141 3DE0                                  u3301 0874  
                                u4101 2562                                  u4021 23D6  
                                u3150 3E00                                  u3230 45DA  
                                u3070 2E1E                                  u3310 0894  
                                u4110 2584                                  u4030 23EA  
                                u3151 3DFC                                  u3231 45D6  
                                u3071 2E1A                                  u3311 0890  
                                u4111 2580                                  u4031 23E6  
                                u3160 3E3A                                  u3240 45EA  
                                u3080 2E6A                                  u3400 0B50  
                                u3320 08D6                                  u5000 1C96  
                                u4200 26CE                                  u4120 25A4  
                                u4040 242A                                  u3161 3E36  
                                u3241 45E6                                  u3081 2E66  
                                u3401 0B4C                                  u3321 08D2  
                                u5001 1C92                                  u4201 26CA  
                                u4121 25A0                                  u4041 2426  
                                u3170 4536                                  u3090 2E86  
                                u3250 4408                                  u3410 0B86  
                                u3330 0918                                  u5010 1CB2  
                                u4130 25B6                                  u4050 246A  
                                u4210 1724                                  u3171 4532  
                                u3091 2E82                                  u3251 4404  
                                u3411 0B82                                  u3331 0914  
                                u5011 1CAE                                  u4131 25B2  
                                u4051 2466                                  u4211 1720  
                                u3500 3BE4                                  u3260 40B2  
                                u3180 454C                                  u2700 44E2  
                                u3420 0BE8                                  u3340 0992  
                                u5020 1CD6                                  u4140 25E4  
                                u4060 24E0                                  u4300 19C2  
                                u4220 1736                                  u3501 3BE0  
                                u3181 4548                                  u2701 44DE  
                                u3421 0BE4                                  u3341 098E  
                                u5021 1CD2                                  u4141 25E0  
                                u4061 24DC                                  u4301 19BE  
                                u4221 1732                                  u3510 3BF6  
                                u3190 4678                                  u3270 40E6  
                                u2710 3378                                  u3430 0C1E  
                                u3350 09AC                                  u5030 1D02  
                                u4150 25FA                                  u4070 2502  
                                u4310 19E2                                  u4230 1746  
                                u3511 3BF2                                  u3191 4674  
                                u2711 3374                                  u3431 0C1A  
                                u3351 09A8                                  u5031 1CFE  
                                u4151 25F6                                  u4071 24FE  
                                u4311 19DE                                  u4231 1742  
                                u3520 3C0C                                  u4400 3F18  
                                u3280 40F6                                  u2720 33AA  
                                u2800 3570                                  u3440 0C7E  
                                u3360 09C8                                  u5040 1D1E  
                                u3600 0DF6                                  u4160 260E  
                                u4080 252C                                  u4320 19F4  
                                u4240 1786                                  u5200 14F8  
                                u5120 12F4                                  u3521 3C08  
                                u4401 3F14                                  u3281 40F2  
                                u2721 33A6                                  u2801 356C  
                                u3441 0C7A                                  u3361 09C4  
                                u5041 1D1A                                  u3601 0DF2  
                                u4161 260A                                  u4081 2528  
                                u4321 19F0                                  u4241 1782  
                                u5201 14F4                                  u5121 12F0  
                                u3530 3C34                                  u4410 3F32  
                                u2810 359A                                  u3450 0CDE  
                                u3370 0A0A                                  u3290 085E  
                                u5050 1D50                                  u3610 0E06  
                                u4170 2628                                  u4090 2550  
                                u4330 1A22                                  u4250 1798  
                                u5210 1510                                  u5130 1314  
                                u3531 3C30                                  u4411 3F2E  
                                u3267 40A8                                  u2731 33D4  
                                u2811 3596                                  u3451 0CDA  
                                u3371 0A06                                  u3291 085A  
                                u5051 1D4C                                  u3611 0E02  
                                u4171 2624                                  u4091 254C  
                                u4331 1A1E                                  u4251 1794  
                                u5211 150C                                  u5131 1310  
                                u3540 3C5A                                  u4420 3F58  
                                u4500 4044                                  u2740 33F8  
                                u2820 35C8                                  u2660 3E4E  
                                u2900 2726                                  u3460 0D3E  
                                u3380 0A4C                                  u5060 1D6C  
                                u3700 0F52                                  u3620 0E48  
                                u4180 2670                                  u4340 1A38  
                                u4260 17A8                                  u5220 157E  
                                u5140 132E                                  u3541 3C56  
                                u4421 3F54                                  u4501 4040  
                                u3277 40DC                                  u2741 33F4  
                                u2821 35C4                                  u2661 3E4A  
                                u2901 2722                                  u3461 0D3A  
                                u3381 0A48                                  u5061 1D68  
                                u3621 0E44                                  u4181 266C  
                                u4341 1A34                                  u4261 17A4  
                                u5221 157A                                  u5141 132A  
                                u3550 3C6C                                  u4430 3F76  
                                u4510 4068                                  u2750 3422  
                                u2830 3610                                  u2670 3E60  
                                u2910 2762                                  u3470 0D9E  
                                u3390 0AEE                                  u3710 0F7A  
                                u3630 0E5E                                  u4190 26A0  
                                u4350 1A4C                                  u4270 17DE  
                                u5070 3B76                                  u5230 1590  
                                u5150 1340                                  u3551 3C68  
                                u4431 3F72                                  u4511 4064  
                                u2751 341E                                  u2831 360C  
                                u2671 3E5C                                  u2911 275E  
                                u3471 0D9A                                  u3391 0AEA  
                                u3711 0F76                                  u3631 0E5A  
                                u4191 269C                                  u4351 1A48  
                                u4271 17DA                                  u5071 3B72  
                                u5231 158C                                  u5151 133C  
                                u3560 3C82                                  u5080 45C4  
                                u4440 3F92                                  u2760 3462  
                                u2680 3E88                                  u2840 4106  
                                u2920 278E                                  u3480 42D8  
                                u3800 10B2                                  u3720 0F98  
                                u3640 0E70                                  u4520 39D4  
                                u4360 1A66                                  u4280 17EE  
                                u4600 392C                                  u5240 1698  
                                u5160 1440                                  u3561 3C7E  
                                u5081 45C0                                  u4441 3F8E  
                                u2761 345E                                  u2681 3E84  
                                u2841 4102                                  u2921 278A  
                                u3481 42D4                                  u3801 10AE  
                                u3721 0F94                                  u3641 0E6C  
                                u4521 39D0                                  u4361 1A62  
                                u4281 17EA                                  u4601 3928  
                                u5241 1694                                  u5161 143C  
                                u3490 3BBE                                  u3570 4208  
                                u4450 3FB8                                  u2770 34AC  
                                u2690 3EBE                                  u2850 415C  
                                u2930 27A4                                  u3810 10E8  
                                u3730 0FB8                                  u3650 0E80  
                                u4530 3A12                                  u4370 1AAE  
                                u4290 1968                                  u4610 3954  
                                u5250 16AA                                  u5170 1452  
                                u3491 3BBA                                  u3571 4204  
                                u4451 3FB4                                  u2771 34A8  
                                u2691 3EBA                                  u2851 4158  
                                u2931 27A0                                  u5307 1C0A  
                                u3811 10E4                                  u3731 0FB4  
                                u3651 0E7C                                  u4531 3A0E  
                                u4371 1AAA                                  u4611 3950  
                                u5251 16A6                                  u5171 144E  
                                _PEIE 007F96                                  u3580 4242  
                                u4460 3FDC                                  u2780 3500  
                                u2860 44FE                                  u2940 28E0  
                                u3900 11B2                                  u3820 10F8  
                                u3740 0FC6                                  u3660 0EBC  
                                u4540 3A30                                  u4380 1ADC  
                                u4620 3974                                  u4700 3166  
                                u5180 1464                                  u3581 423E  
                                u4461 3FD8                                  u2781 34FC  
                                u2861 44FA                                  u2941 28DC  
                                u5317 1FF8                                  u3901 11AE  
                                u3821 10F4                                  u3741 0FC2  
                                u3661 0EB8                                  u4541 3A2C  
                                u4381 1AD8                                  u4621 3970  
                                u4701 3162                                  u5181 1460  
                                u2870 4722                                  u4470 3FF6  
                                u2790 3532                                  u2950 28FE  
                                u3910 11CC                                  u3830 1124  
                                u3750 0FD6                                  u3670 0ECA  
                                u3590 0DE4                                  u4550 3A50  
                                u4390 1B16                                  u4630 3984  
                                u4710 3174                                  u5190 14DC  
                                u5407 419E                                  u2871 471E  
                                u4471 3FF2                                  u2791 352E  
                                u2951 28FA                                  u5327 2014  
                                u3911 11C8                                  u3831 1120  
                                u3751 0FD2                                  u3671 0EC6  
                                u3591 0DE0                                  u4551 3A4C  
                                u4391 1B12                                  u4295 195E  
                                u4631 3980                                  u4711 3170  
                                u5191 14D8                                  u4480 4010  
                                u2960 2918                                  u2880 2712  
                                u4800 1FF2                                  u3920 1206  
                                u3840 1134                                  u3760 1008  
                                u3680 0F38                                  u4560 3AA0  
                                u4720 31AE                                  u4640 302E  
                                u5417 41AC                                  u4481 400C  
                                u2961 2914                                  u2881 270C  
                                u5337 087E                                  u4801 1FEE  
                                u3921 1202                                  u3841 1130  
                                u3761 1004                                  u3681 0F34  
                                u4561 3A9C                                  u4721 31AA  
                                u4641 302A                                  u4490 402E  
                                u2970 2928                                  u2890 2714  
                                u4810 200E                                  u3930 1218  
                                u3850 1150                                  u3770 1016  
                                u3690 0F50                                  u4570 38B6  
                                u4730 31BC                                  u4650 303C  
                                u5427 41BA                                  u4491 402A  
                                u2971 2924                                  u5347 09B2  
                                u4811 200A                                  u3931 1214  
                                u3851 114C                                  u3771 1012  
                                u3691 0F4A                                  u4571 38B2  
                                u4731 31B8                                  u4651 3038  
                                _RCIE 007CED                                  u2980 31EC  
                                u4740 29CC                                  u4900 2128  
                                u4820 202A                                  u3940 1228  
                                u3860 1160                                  u3780 1034  
                                u4580 38EA                                  u4660 3098  
                                _RCEN 007E2B                                  _RCIF 007CF5  
                                u5437 41D8                                  u2981 31E8  
                                u4741 29C8                                  u5357 4318  
                                u4901 2124                                  u4821 2026  
                                u3941 1224                                  u3861 115C  
                                u3781 1030                                  u4661 3094  
                                u2990 3256                                  u4750 2A16  
                                u4910 215A                                  u4830 2048  
                                u3950 1248                                  u3870 1172  
                                u3790 106C                                  u4590 3918  
                                u4670 30EE                                  u5447 46CA  
                                u5367 4474                                  u2991 3252  
                                u4751 2A12                                  u4911 2156  
                                u4831 2044                                  u3951 1244  
                                u3871 116E                                  u3791 1068  
                                u4591 3914                                  u4671 30EA  
                                u5287 14E2                                  u4760 2A60  
                                u4920 2176                                  u4840 2068  
                                u3960 125A                                  u3880 1188  
                                u4680 3138                                  u5457 4590  
                                u5377 4494                                  u4761 2A5C  
                                u4921 2172                                  u4841 2064  
                                u5297 1BEE                                  u3961 1256  
                                u3881 1184                                  u4585 38E0  
                                u4681 3134                                  u4770 2AE2  
                                u4850 2084                                  u4930 1B8E  
                                u3970 1276                                  u3890 119E  
                                u4690 3156                                  u5387 4178  
                                u4771 2ADE                                  u4851 2080  
                                u4931 1B8A                                  u3971 1272  
                                u3891 119A                                  u4691 3152  
                                u4780 2B2C                                  u4860 20A0  
                                u4940 1BE8                                  u3980 2362  
                                u5397 418E                                  u4781 2B28  
                                u4861 209C                                  u4941 1BE4  
                                u3981 235E                                  u4870 20BC  
                                u4790 1F98                                  u4950 1C04  
                                u3990 2374                                  u4871 20B8  
                                u4791 1F94                                  u4951 1C00  
                                u3991 2370                                  u4880 20E0  
                                u4960 1C20                                  u4881 20DC  
                                u4961 1C1C                                  u4890 210C  
                                u4970 1C3E                                  u4891 2108  
                                u4971 1C3A                                  u4980 1C5E  
                                u4981 1C5A                                  u4990 1C7A  
                                u4991 1C76                                  _SPEN 007D5F  
                                _RSEN 007E29                                  _TXEN 007D65  
                                _TXIF 007CF4                                  _SYNC 007D64  
                        ?_LCD_goto_xy 0002                                  abs@a 0013  
                                _date 0134                                  _dbuf 0100  
                                _min2 008C                                  _sec2 0088  
                                _main 128A                                  _dtoa 26E2  
                                _mask 0080                      __end_of_I2C_Nack 4700  
                                _mins 009F                                  _secs 00A9  
                                _prec 0092                      __end_of_I2C_Init 46EC  
                    __end_of_I2C_Read 4560                                  _year 0120  
                                pad@i 0018                                  pad@p 0015  
                                fsr1h 000FE2                                  fsr2h 000FDA  
                                indf1 000FE7                                  indf2 000FDF  
                                fsr1l 000FE1                                  pad@w 001A  
                                fsr2l 000FD9                                  btemp 005F  
                                _xtoa 31D0                      __end_of_I2C_Stop 4688  
                                prodh 000FF4                                  prodl 000FF3  
                                start 000E                       ___fldiv@new_exp 0039  
                     __end_of_Compare 2DFA                          ___param_bank 000000  
                               ??_ISR 0001                         ?_LCD_cmd_High 0001  
                               ??_abs 0015                  __end_of_EEPROM_Write 45C8  
                               ??_pad 0017                       ??_LCD_4bit_mode 0002  
                    __end_of_LCD_init 4738                         ___fltol@sign1 0009  
                     __end_of___aodiv 34EE                       __end_of___fladd 128A  
                               ?_main 0001                                 ?_dtoa 001C  
                     __end_of___aomod 3652                                 _ACKEN 007E2C  
                               _ACKDT 007E2D                       __end_of___fldiv 26E2  
                     __end_of___awdiv 3FCA                                 _EEADR 000FA9  
                               STR_10 081D                                 STR_11 084B  
                               STR_12 082B                                 STR_13 083D  
                               STR_14 0834                                 STR_15 083D  
                     __end_of___awmod 407A                       __end_of___flmul 1B34  
                     __end_of___fltol 39A6                       ___awdiv@divisor 0003  
                               ?_xtoa 001C                                 i2l490 46BA  
                     ___awdiv@counter 0005                                 _RCREG 000FAE  
                               _RCSTA 000FAB                          vfpfcnvrt@fmt 0041  
                               _SPBRG 000FAF                                 _PORTB 000F81  
                               _PORTD 000F83                                 _TRISB 000F93  
                               _TRISD 000F95                                 _SSPIF 007CF3  
                               _TXREG 000FAD                                 _TXSTA 000FAC  
                               _Check 3652                                 _Flash 42BC  
                 ___lmul@multiplicand 0005                                 _flag1 009E  
                               _flag2 009D                                 _flags 005E  
                               _hour2 00BA                                 _fputc 3E3C  
                               _fputs 44A0                                 _hours 013E  
                               _time1 00C0                                 _month 012A  
                   __end_of_I2C_Ready 4726                                 pad@fp 0011  
                               _width 0090                                 _putch 475A  
                               _total 0084                                 main@i 00F3  
                               main@j 00F6                                 dtoa@d 001E  
                               dtoa@i 003C                                 dtoa@n 0034  
                               dtoa@p 0030                                 dtoa@s 003E  
                               dtoa@w 0032                     __end_of_I2C_Start 4624  
                   __end_of_I2C_Write 4668                                 tablat 000FF5  
                               ttemp5 0060                                 ttemp6 0063  
                               ttemp7 0067                                 status 000FD8  
                               wtemp8 0060                       __end_of_sprintf 4374  
                               xtoa@c 003E                                 xtoa@d 001E  
                               xtoa@i 003C                                 xtoa@n 0034  
                               xtoa@p 0032                                 xtoa@w 002E  
                    EEPROM_Write@data 0001                           ?_USART_init 0051  
                     __initialization 4412                        ??_LCD_cmd_High 0001  
                        __end_of_main 170A                          __end_of_dtoa 2960  
                        __end_of_xtoa 3366                      ?_Screen_Device_1 0001  
                    ?_Screen_Device_2 0001                             ??_I2C_Ack 0001  
                   ?_LCD_write_string 0003                                ??_main 005C  
                              ??_dtoa 0026                                ??_xtoa 0026  
                       __activetblptr 000002                      __end_of_Set_Time 0DCA  
                  ??_LCD_write_string 0005                             ??_LCD_cmd 0001  
                              ?_Check 0001                                ?_Flash 000B  
                   __end_of_LCD_clear 46D6                     __end_of_LCD_write 44A0  
                              ?_fputc 0001                                ?_fputs 000A  
                              _EEDATA 000FA8                                _EECON2 000FA7  
                    ___awdiv@dividend 0001                                ?_putch 0001  
                         _Destination 009C                                i2l5252 46A6  
                              i2l5254 46B4                            _Screen_Num 00F8  
                              _SSPADD 000FC8                                _TRISB0 007C98  
                              _TRISB1 007C99                                _TRISC6 007CA6  
                              _TRISC7 007CA7                                _SSPBUF 000FC9  
                           ??_Compare 0011                      __end_of___xxtofl 31D0  
                       Set_Time@Place 0003                                _Action 3B9E  
                              _Place1 009A                                _Place2 0098  
                              _Place3 0096                                _Place4 0094  
                        vfprintf@cfmt 0059                                ___flge 39A6  
                              ___lmul 41EA                             ??___aodiv 0011  
                           ??___fladd 0049                             ??___aomod 0011  
                     LCD_goto_xy@i_52 0009                             ??___fldiv 0030  
                           ??___awdiv 0005                             ??___awmod 0005  
                           ??___flmul 0017                             ??___fltol 0005  
                              clear_0 4438                                clear_1 4444  
                    ___awdiv@quotient 0007                       ___awmod@divisor 0003  
                              isa$std 000001                       ___awmod@counter 0005  
                  _I2C_Repeated_Start 45C8                                pad@buf 0013  
                              _total1 0070                                _total2 0060  
                              dtoa@fp 001C                                fputc@c 0001  
                              fputs@c 000E                                fputs@i 000F  
                           ?_I2C_Nack 0001                                fputs@s 000A  
                           ?_I2C_Init 0001                             ?_I2C_Read 0001  
                           ?_I2C_Stop 0001                          __mediumconst 0000  
                              tblptrh 000FF7                                tblptrl 000FF6  
                              tblptru 000FF8                   ?_I2C_Repeated_Start 0001  
                              putch@c 0001                      __end_of_vfprintf 4412  
                           ??_sprintf 005B                                xtoa@fp 001C  
                          ___flge@ff1 0001                            ___flge@ff2 0005  
                        ___xxtofl@arg 000B                          ___xxtofl@exp 000A  
                        ___xxtofl@val 0001                            __accesstop 0060  
             __end_of__initialization 444C                             ?_LCD_init 0001  
                       ___rparam_used 000001                            ___fltol@f1 0001  
                       __end_of_Check 378C                  ??_I2C_Repeated_Start 0002  
                       __end_of_Flash 4322                        __pcstackCOMRAM 0001  
                        __pidataBANK0 4624                          LCD_goto_xy@i 0007  
                        LCD_goto_xy@x 0002                          LCD_goto_xy@y 0004  
                       __end_of_fputc 3F06                         __end_of_fputs 44E4  
                   ?_Screen_Date_Time 0001                         __end_of_putch 475C  
                  ??_Screen_Date_Time 005B                            ??_I2C_Nack 0001  
                          ??_I2C_Init 0001                            ??_I2C_Read 0001  
                             ??_Check 0003                            ??_I2C_Stop 0001  
                             ??_Flash 000F                           Set_Time@Num 0001  
                             ??_fputc 0005                               ??_fputs 000E  
                __end_of_LCD_cmd_High 46A4                               ??_putch 0001  
                        _EEPROM_Write 4598                            __pbssBANK0 0060  
                          __pbssBANK1 0100                            ??_LCD_init 0003  
                             ?_Action 0001                             ?_Set_Time 0001  
                        I2C_Read@flag 0001                               ?___flge 0001  
                      I2C_Read@buffer 0002                               ?___lmul 0001  
                             _I2C_Ack 4700                               _ACKSTAT 007E2E  
          ?_Active_Receiver_Interrupt 0001                        ___lmul@product 0009  
                             _LCD_cmd 4560                             ?___xxtofl 0001  
                             _SSPCON1 000FC6                               _SSPCON2 000FC5  
                             _SSPSTAT 000FC7                               _Compare 2BBA  
                           _I2C_Ready 4714                             _I2C_Start 45F6  
                           _I2C_Write 4646                            ??_Set_Time 0005  
                             __Hparam 0000                               __Lparam 0000  
                        ??_USART_init 0055                               ___aodiv 3366  
                             ___fladd 0DCA                               ___aomod 34EE  
                             ___fldiv 2348                               ___awdiv 3F06  
                             ___awmod 3FCA                               ___flmul 170A  
                             ___fltol 38A0                             ?_vfprintf 0053  
                        __psmallconst 0800                               __pcinit 4412  
                             __ramtop 0800                 __end_of_LCD_4bit_mode 41EA  
   __end_of_Active_Receiver_Interrupt 475A                               __ptext0 128A  
                             __ptext1 3AAA                               __ptext2 301C  
                             __ptext3 38A0                               __ptext4 170A  
                             __ptext5 39A6                               __ptext6 2348  
                             __ptext7 0DCA                               __ptext8 1B34  
                             __ptext9 1F3E                            ??___xxtofl 0005  
                    ___awmod@dividend 0001                               _sprintf 4322  
                  __end_of_USART_init 3B9E                        __pintcode_body 46A4  
                           _LCD_clear 46BE                  end_of_initialization 444C  
                           _LCD_write 445A                         ??_EEPROM_Read 0001  
                             fputc@fp 0003                         __Lmediumconst 0000  
                             int_func 46A4                               fputs@fp 000C  
                          ?_I2C_Ready 0001                            ?_I2C_Start 0001  
                          ?_I2C_Write 0001                     __end_of_vfpfcnvrt 301C  
                           _RCSTAbits 000FAB                               postdec1 000FE5  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc1 000FE6                               postinc2 000FDE  
                    vfpfcnvrt@convarg 0049                            ??_vfprintf 0059  
                         ___fladd@grs 0050                         ?_RTC_Get_Date 0004  
                       ___xxtofl@sign 0009                         ?_RTC_Get_Time 0004  
                         ___fldiv@grs 003B                           ___fldiv@rem 0034  
                          ?_LCD_clear 0001                            ?_LCD_write 0001  
                         ___flmul@grs 001C                         ?_RTC_Set_Date 0009  
                       ?_RTC_Set_Time 0009                       RTC_Get_Date@RTC 0004  
                      __end_of_Action 3C8E                   __end_of_EEPROM_Read 4748  
                        _LCD_cmd_High 4688                        __end_of___flge 3AAA  
                      __end_of___lmul 4254                           vfpfcnvrt@ap 0043  
                         vfpfcnvrt@cp 0051                           vfpfcnvrt@fp 003F  
                          LCD_cmd@cmd 0001                        ??_RTC_Get_Date 0006  
                      USART_init@temp 0055                        ??_RTC_Get_Time 0006  
                 start_initialization 4412                       RTC_Get_Time@RTC 0004  
                         __end_of_ISR 46BE                           __end_of_abs 4524  
                         __end_of_pad 4172  I2C_Repeated_Start@slave_read_address 0002  
                       ??_LCD_goto_xy 0006                        ??_RTC_Set_Date 000C  
                         ??_I2C_Ready 0001                        ??_RTC_Set_Time 000B  
                         ??_I2C_Start 0002                              ??_Action 0001  
                         ??_I2C_Write 0001                           vfprintf@fmt 0055  
                            ??___flge 0009                              ??___lmul 0009  
                         __pdataBANK0 00BE                              ?_I2C_Ack 0001  
         ??_Active_Receiver_Interrupt 0001                             ___fladd@a 0045  
                           ___fladd@b 0041                             ___fldiv@a 002C  
                           ___fldiv@b 0028                              ?_LCD_cmd 0001  
                           ___flmul@a 0013                             ___flmul@b 000F  
                         __pbssCOMRAM 005E                         __pcstackBANK0 00E0  
                    ___aodiv@dividend 0001                           ??_LCD_clear 0002  
                 LCD_write_string@str 0003                      _LCD_write_string 407A  
                         ??_LCD_write 0001                     ??_Screen_Device_1 0010  
                   ??_Screen_Device_2 0010                           _EEPROM_Read 4738  
                            ?_Compare 000D                             __pnvBANK0 00F8  
                           _dtoa$1336 002E                   __end_of_LCD_goto_xy 3E3C  
                           __pintcode 0008                         LCD_write@data 0002  
                            ?___aodiv 0001                              ?___fladd 0041  
                            ?___aomod 0001                              ?___fldiv 0028  
                            ?___awdiv 0001                      ___aodiv@quotient 0013  
                            ?___awmod 0001                              ?___flmul 000F  
                            ?___fltol 0001                           __smallconst 0800  
                            _I2C_Nack 46EC                              _I2C_Init 46D6  
                            _I2C_Read 4524                              _I2C_Stop 4668  
                   _Push_Buttons_Init 4748                    ?_Push_Buttons_Init 0001  
                            ?_sprintf 00E0                              Check@Num 0001  
           _Active_Receiver_Interrupt 4752                   ??_Push_Buttons_Init 0001  
                            _LCD_init 4726                  __end_of_RTC_Get_Date 42BC  
                            _PIR2bits 000FA1                              i2u526_40 46B4  
                            i2u526_41 46B0                  __end_of_RTC_Get_Time 43C4  
                    Screen_Device_1@i 0012                      Screen_Device_2@i 0012  
                            Flash@inc 000B                     RTC_Set_Date@month 000A  
                Screen_Device_1@i_153 0014                  Screen_Device_2@i_158 0014  
                           _vfpfcnvrt 2DFA                             _xtoa$1346 0030  
                           main@i_522 00F4                             main@i_528 00F5  
                           main@j_529 00F7             __end_of_Push_Buttons_Init 4752  
                __end_of_RTC_Set_Date 38A0                  __end_of_RTC_Set_Time 3D66  
                     LCD_cmd_High@cmd 0001                      _Screen_Date_Time 2960  
                   ___lmul@multiplier 0001                             copy_data0 4426  
        I2C_Start@slave_write_address 0002                           _LCD_goto_xy 3D66  
                          _EECON1bits 000FA6                              _Set_Time 0850  
                            __Hrparam 0000                            vfprintf@ap 0057  
                            __Lrparam 0000                            vfprintf@fp 0053  
                       I2C_Write@data 0001                            ?_vfpfcnvrt 003F  
                     ___aodiv@divisor 0009                       ___aodiv@counter 0011  
                          sprintf@fmt 00E2                              ___xxtofl 301C  
                            __ptext10 0850                              __ptext11 42BC  
                            __ptext20 3E3C                              __ptext12 2960  
                            __ptext21 475A                              __ptext13 4322  
                            __ptext30 4700                              __ptext22 44E4  
                            __ptext14 43C4                              __ptext31 407A  
                            __ptext23 34EE                              __ptext15 2DFA  
                            __ptext40 45F6                              __ptext32 445A  
                            __ptext24 3366                              __ptext16 31D0  
                            __ptext41 4646                              __ptext33 3D66  
                            __ptext25 4374                              __ptext17 26E2  
                            __ptext50 4738                              __ptext42 4714  
                            __ptext34 3C8E                              __ptext26 4254  
                            __ptext18 40F8                              __ptext51 2BBA  
                            __ptext43 4748                              __ptext35 46D6  
                            __ptext27 45C8                              __ptext19 44A0  
                            __ptext52 41EA                              __ptext44 4726  
                            __ptext36 378C                              __ptext28 4524  
                            __ptext53 3B9E                              __ptext45 4172  
                            __ptext37 3FCA                              __ptext29 46EC  
                            __ptext54 3652                              __ptext46 4688  
                            __ptext38 3F06                              __ptext55 4752  
                            __ptext47 46BE                              __ptext39 4668  
                            __ptext48 4560                              __ptext49 4598  
                       ?_EEPROM_Write 0001                   USART_init@baud_rate 0051  
                    RTC_Set_Date@date 0009                              isa$xinst 000000  
                    RTC_Set_Date@year 000B                              int$flags 005F  
                            _vfprintf 43C4              __end_of_LCD_write_string 40F8  
                    ___aomod@dividend 0001                         _LCD_4bit_mode 4172  
                         Flash@PlaceN 000D                       _Screen_Device_1 1F3E  
                     _Screen_Device_2 1B34                            _INTCONbits 000FF2  
                      ??_EEPROM_Write 0002                     LCD_write_string@i 0007  
                            intlevel2 0000                             sprintf@ap 00E6  
                        ?_EEPROM_Read 0001            __end_of_I2C_Repeated_Start 45F6  
                  EEPROM_Read@address 0001                       RTC_Set_Date@day 000E  
                     ___aomod@divisor 0009                           ??_vfpfcnvrt 0045  
                     ___aomod@counter 0011                      RTC_Set_Time@hour 000A  
                      ?_LCD_4bit_mode 0001                              sprintf@f 00E8  
                            sprintf@s 00E0                           Compare@Num1 000D  
                         Compare@Num2 000F                          _RTC_Get_Date 4254  
                        _RTC_Get_Time 4374                           _SSPCON2bits 000FC5  
                     RTC_Set_Time@min 0009                       RTC_Set_Time@sec 000D  
                       ___fladd@signs 004D                          ___aodiv@sign 0012  
                        ___fladd@aexp 004E                          ___fladd@bexp 004F  
                        _RTC_Set_Date 378C                          _RTC_Set_Time 3C8E  
                        ___aomod@sign 0012                   EEPROM_Write@address 0002  
                          _USART_init 3AAA  
